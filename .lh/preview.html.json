{
    "sourceFile": "preview.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1757001299426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757001331309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n   <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js\"></script>\r\n   <script>\r\n     // PDF.js worker\r\n     pdfjsLib.GlobalWorkerOptions.workerSrc =\r\n-      \"module/pdf.js\";\r\n+      \"module/pdf.worker.min.js\";\r\n \r\n     // Get the previewed book from localStorage\r\n     const previewBook = localStorage.getItem(\"previewedBook\"); // single value\r\n \r\n"
                },
                {
                    "date": 1757001648759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div>Herbert <strong>Author</strong> Schildt</div>\r\n+    <div><img src=\"\" alt=\"\">/div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001654895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div><img src=\"\" alt=\"\">/div>\r\n+    <div><img src=\"img/logo.svg\" alt=\"\">/div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001672443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div><img src=\"img/logo.svg\" alt=\"\">/div>\r\n+    <div>Herbert <strong>Author</strong> Schildt</div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001704193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div>Herbert <strong>Author</strong> Schildt</div>\r\n+    <div>Herbert <strong>Author</strong> Schildt <img src=\"log\" alt=\"\"></div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001710461,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div>Herbert <strong>Author</strong> Schildt <img src=\"log\" alt=\"\"></div>\r\n+    <div>Herbert <strong>Author</strong> Schildt <img src=\"img/logo.svg\" alt=\"\"></div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001724917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div>Herbert <strong>Author</strong> Schildt <img src=\"img/logo.svg\" alt=\"\"></div>\r\n+    <!-- <div>Herbert <strong>Author</strong> Schildt <img src=\"img/logo.svg\" alt=\"\"></div> -->\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001736725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <!-- <div>Herbert <strong>Author</strong> Schildt <img src=\"img/logo.svg\" alt=\"\"></div> -->\r\n+    <div> <img src=\"img/logo.svg\" alt=\"\"></div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001745893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div> <img src=\"img/logo.svg\" alt=\"\"></div>\r\n+    <div><img src=\"img/logo.svg\" alt=\"\"></div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n"
                },
                {
                    "date": 1757001770059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n <body>\r\n \r\n   <!-- Top Bar -->\r\n   <div id=\"topbar\">\r\n-    <div><img src=\"img/logo.svg\" alt=\"\"></div>\r\n+    <div><img src=\"img/logo-white.svg\" alt=\"\"></div>\r\n     <div>\r\n       <h1>Preview</h1>\r\n       <div id=\"pageInfo\">1 / 1</div>\r\n     </div>\r\n@@ -160,9 +160,9 @@\n \r\n     // PDF.js viewer function\r\n     async function initPDF(url) {\r\n       let pdfDoc = null;\r\n-      let scale = 0.9;\r\n+      let scale = 0.7;\r\n       let currentPage = 1;\r\n       const limitPages = 100;\r\n \r\n       const pdfViewer = document.getElementById(\"mainCanvas\");\r\n"
                },
                {
                    "date": 1758465114747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,9 +162,9 @@\n     async function initPDF(url) {\r\n       let pdfDoc = null;\r\n       let scale = 0.7;\r\n       let currentPage = 1;\r\n-      const limitPages = 100;\r\n+      const limitPages = 50;\r\n \r\n       const pdfViewer = document.getElementById(\"mainCanvas\");\r\n       const sidebar = document.getElementById(\"sidebar\");\r\n       const pageInfo = document.getElementById(\"pageInfo\");\r\n"
                },
                {
                    "date": 1758465183739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,22 +179,35 @@\n       renderThumbnails(totalPages);\r\n       enableScrollNavigation();\r\n \r\n       // Render a single page\r\n-      async function renderPage(pageNum) {\r\n-        if (pageNum < 1 || pageNum > limitPages) return;\r\n+async function renderPage(pageNum) {\r\n+  if (pageNum < 1 || pageNum > limitPages) return;\r\n \r\n-        const page = await pdfDoc.getPage(pageNum);\r\n-        const viewport = page.getViewport({ scale });\r\n-        const ctx = pdfViewer.getContext(\"2d\");\r\n-        pdfViewer.width = viewport.width;\r\n-        pdfViewer.height = viewport.height;\r\n+  const page = await pdfDoc.getPage(pageNum);\r\n+  const viewport = page.getViewport({ scale });\r\n+  const ctx = pdfViewer.getContext(\"2d\");\r\n+  pdfViewer.width = viewport.width;\r\n+  pdfViewer.height = viewport.height;\r\n \r\n-        await page.render({ canvasContext: ctx, viewport }).promise;\r\n-        currentPage = pageNum;\r\n-        pageInfo.textContent = `${currentPage} / ${totalPages}`;\r\n-      }\r\n+  // Render PDF page\r\n+  await page.render({ canvasContext: ctx, viewport }).promise;\r\n \r\n+  // Add watermark\r\n+  const watermarkText = \"Sample Watermark\"; // change text as needed\r\n+  ctx.save();\r\n+  ctx.font = `${Math.floor(viewport.width / 15)}px Arial`; // adjust size\r\n+  ctx.fillStyle = \"rgba(255, 0, 0, 0.2)\"; // semi-transparent red\r\n+  ctx.textAlign = \"center\";\r\n+  ctx.textBaseline = \"middle\";\r\n+  ctx.translate(viewport.width / 2, viewport.height / 2);\r\n+  ctx.rotate(-Math.PI / 8); // rotate for diagonal effect\r\n+  ctx.fillText(watermarkText, 0, 0);\r\n+  ctx.restore();\r\n+\r\n+  currentPage = pageNum;\r\n+  pageInfo.textContent = `${currentPage} / ${totalPages}`;\r\n+}\r\n       // Sidebar thumbnails\r\n       function renderThumbnails(totalPages) {\r\n         sidebar.innerHTML = \"\";\r\n         for (let i = 1; i <= totalPages; i++) {\r\n"
                },
                {
                    "date": 1758465207475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -179,35 +179,35 @@\n       renderThumbnails(totalPages);\r\n       enableScrollNavigation();\r\n \r\n       // Render a single page\r\n-async function renderPage(pageNum) {\r\n-  if (pageNum < 1 || pageNum > limitPages) return;\r\n+      async function renderPage(pageNum) {\r\n+        if (pageNum < 1 || pageNum > limitPages) return;\r\n \r\n-  const page = await pdfDoc.getPage(pageNum);\r\n-  const viewport = page.getViewport({ scale });\r\n-  const ctx = pdfViewer.getContext(\"2d\");\r\n-  pdfViewer.width = viewport.width;\r\n-  pdfViewer.height = viewport.height;\r\n+        const page = await pdfDoc.getPage(pageNum);\r\n+        const viewport = page.getViewport({ scale });\r\n+        const ctx = pdfViewer.getContext(\"2d\");\r\n+        pdfViewer.width = viewport.width;\r\n+        pdfViewer.height = viewport.height;\r\n \r\n-  // Render PDF page\r\n-  await page.render({ canvasContext: ctx, viewport }).promise;\r\n+        // Render PDF page\r\n+        await page.render({ canvasContext: ctx, viewport }).promise;\r\n \r\n-  // Add watermark\r\n-  const watermarkText = \"Sample Watermark\"; // change text as needed\r\n-  ctx.save();\r\n-  ctx.font = `${Math.floor(viewport.width / 15)}px Arial`; // adjust size\r\n-  ctx.fillStyle = \"rgba(255, 0, 0, 0.2)\"; // semi-transparent red\r\n-  ctx.textAlign = \"center\";\r\n-  ctx.textBaseline = \"middle\";\r\n-  ctx.translate(viewport.width / 2, viewport.height / 2);\r\n-  ctx.rotate(-Math.PI / 8); // rotate for diagonal effect\r\n-  ctx.fillText(watermarkText, 0, 0);\r\n-  ctx.restore();\r\n+        // Add watermark\r\n+        const watermarkText = \"Buy this book to \"; // change text as needed\r\n+        ctx.save();\r\n+        ctx.font = `${Math.floor(viewport.width / 15)}px Arial`; // adjust size\r\n+        ctx.fillStyle = \"rgba(255, 0, 0, 0.2)\"; // semi-transparent red\r\n+        ctx.textAlign = \"center\";\r\n+        ctx.textBaseline = \"middle\";\r\n+        ctx.translate(viewport.width / 2, viewport.height / 2);\r\n+        ctx.rotate(-Math.PI / 8); // rotate for diagonal effect\r\n+        ctx.fillText(watermarkText, 0, 0);\r\n+        ctx.restore();\r\n \r\n-  currentPage = pageNum;\r\n-  pageInfo.textContent = `${currentPage} / ${totalPages}`;\r\n-}\r\n+        currentPage = pageNum;\r\n+        pageInfo.textContent = `${currentPage} / ${totalPages}`;\r\n+      }\r\n       // Sidebar thumbnails\r\n       function renderThumbnails(totalPages) {\r\n         sidebar.innerHTML = \"\";\r\n         for (let i = 1; i <= totalPages; i++) {\r\n"
                },
                {
                    "date": 1758465213087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -192,9 +192,9 @@\n         // Render PDF page\r\n         await page.render({ canvasContext: ctx, viewport }).promise;\r\n \r\n         // Add watermark\r\n-        const watermarkText = \"Buy this book to \"; // change text as needed\r\n+        const watermarkText = \"Buy this book to view all\"; // change text as needed\r\n         ctx.save();\r\n         ctx.font = `${Math.floor(viewport.width / 15)}px Arial`; // adjust size\r\n         ctx.fillStyle = \"rgba(255, 0, 0, 0.2)\"; // semi-transparent red\r\n         ctx.textAlign = \"center\";\r\n"
                },
                {
                    "date": 1758465235433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -195,9 +195,9 @@\n         // Add watermark\r\n         const watermarkText = \"Buy this book to view all\"; // change text as needed\r\n         ctx.save();\r\n         ctx.font = `${Math.floor(viewport.width / 15)}px Arial`; // adjust size\r\n-        ctx.fillStyle = \"rgba(255, 0, 0, 0.2)\"; // semi-transparent red\r\n+        ctx.fillStyle = \"rgba(255, 0, 0, 0.8)\"; // semi-transparent red\r\n         ctx.textAlign = \"center\";\r\n         ctx.textBaseline = \"middle\";\r\n         ctx.translate(viewport.width / 2, viewport.height / 2);\r\n         ctx.rotate(-Math.PI / 8); // rotate for diagonal effect\r\n"
                },
                {
                    "date": 1758465253470,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n         ctx.fillStyle = \"rgba(255, 0, 0, 0.8)\"; // semi-transparent red\r\n         ctx.textAlign = \"center\";\r\n         ctx.textBaseline = \"middle\";\r\n         ctx.translate(viewport.width / 2, viewport.height / 2);\r\n-        ctx.rotate(-Math.PI / 8); // rotate for diagonal effect\r\n+        ctx.rotate(-Math.PI / ); // rotate for diagonal effect\r\n         ctx.fillText(watermarkText, 0, 0);\r\n         ctx.restore();\r\n \r\n         currentPage = pageNum;\r\n"
                },
                {
                    "date": 1758465267102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -199,9 +199,9 @@\n         ctx.fillStyle = \"rgba(255, 0, 0, 0.8)\"; // semi-transparent red\r\n         ctx.textAlign = \"center\";\r\n         ctx.textBaseline = \"middle\";\r\n         ctx.translate(viewport.width / 2, viewport.height / 2);\r\n-        ctx.rotate(-Math.PI / 25); // rotate for diagonal effect\r\n+        ctx.rotate(-Math.PI / 10); // rotate for diagonal effect\r\n         ctx.fillText(watermarkText, 0, 0);\r\n         ctx.restore();\r\n \r\n         currentPage = pageNum;\r\n"
                }
            ],
            "date": 1757001299426,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>PDF Preview</title>\r\n  <style>\r\n    body {\r\n      margin: 0;\r\n      font-family: Arial, sans-serif;\r\n      height: 100vh;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    /* Top bar */\r\n    #topbar {\r\n      background: #6e4b4b;\r\n      color: #fff;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 10px 20px;\r\n    }\r\n\r\n    #topbar h1 {\r\n      margin: 0;\r\n      font-size: 18px;\r\n    }\r\n\r\n    #pageInfo {\r\n      font-size: 14px;\r\n    }\r\n\r\n    .zoom-controls button,\r\n    #closeBtn {\r\n      background: none;\r\n      border: none;\r\n      color: #fff;\r\n      font-size: 18px;\r\n      margin-left: 10px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    /* Layout */\r\n    #container {\r\n      flex: 1;\r\n      display: flex;\r\n      overflow: hidden;\r\n    }\r\n\r\n    /* Sidebar thumbnails */\r\n    #sidebar {\r\n      width: 180px;\r\n      background: #f0f0f0;\r\n      overflow-y: auto;\r\n      border-right: 1px solid #ccc;\r\n      padding: 10px;\r\n    }\r\n\r\n    #sidebar canvas {\r\n      width: 100%;\r\n      margin-bottom: 10px;\r\n      border: 2px solid transparent;\r\n      cursor: pointer;\r\n    }\r\n\r\n    #sidebar canvas.active {\r\n      border: 2px solid #007bff;\r\n    }\r\n\r\n    /* Main viewer */\r\n    #viewer {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background: #eaeaea;\r\n      overflow: auto;\r\n    }\r\n\r\n    #mainCanvas {\r\n      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);\r\n      border-radius: 6px;\r\n      margin: 2rem 0;\r\n    }\r\n\r\n    #viewer {\r\n      flex: 1;\r\n      overflow-y: auto;\r\n      /* ✅ enables vertical scroll */\r\n      background: #eaeaea;\r\n      padding: 20px;\r\n    }\r\n  </style>\r\n</head>\r\n\r\n<body>\r\n\r\n  <!-- Top Bar -->\r\n  <div id=\"topbar\">\r\n    <div>Herbert <strong>Author</strong> Schildt</div>\r\n    <div>\r\n      <h1>Preview</h1>\r\n      <div id=\"pageInfo\">1 / 1</div>\r\n    </div>\r\n    <div>\r\n      <span class=\"zoom-controls\">\r\n        <button id=\"zoomIn\">+</button>\r\n        <button id=\"zoomOut\">−</button>\r\n      </span>\r\n      <button id=\"closeBtn\">Close</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Main Layout -->\r\n  <div id=\"container\">\r\n    <div id=\"sidebar\"></div>\r\n    <div id=\"viewer\">\r\n      <canvas id=\"mainCanvas\"></canvas>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- PDF.js -->\r\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js\"></script>\r\n  <script>\r\n    // PDF.js worker\r\n    pdfjsLib.GlobalWorkerOptions.workerSrc =\r\n      \"module/pdf.js\";\r\n\r\n    // Get the previewed book from localStorage\r\n    const previewBook = localStorage.getItem(\"previewedBook\"); // single value\r\n\r\n    if (!previewBook) {\r\n      alert(\"No preview book found in localStorage!\");\r\n    } else {\r\n      const bookTitle = previewBook;\r\n\r\n      // Fetch all-books.json and get PDF path\r\n      fetch(\"all-books.json\")\r\n        .then(res => res.json())\r\n        .then(allBooks => {\r\n          const book = allBooks.find(b => b.title.trim() === bookTitle.trim());\r\n          if (!book) {\r\n            console.error(\"Book not found in JSON:\", bookTitle);\r\n            return;\r\n          }\r\n          if (!book.pdf) {\r\n            console.error(\"Book PDF path missing:\", book);\r\n            return;\r\n          }\r\n          const url = encodeURI(book.pdf);\r\n          console.log(\"Loading PDF:\", url);\r\n          initPDF(url);\r\n        });\r\n\r\n\r\n    }\r\n\r\n    // PDF.js viewer function\r\n    async function initPDF(url) {\r\n      let pdfDoc = null;\r\n      let scale = 0.9;\r\n      let currentPage = 1;\r\n      const limitPages = 100;\r\n\r\n      const pdfViewer = document.getElementById(\"mainCanvas\");\r\n      const sidebar = document.getElementById(\"sidebar\");\r\n      const pageInfo = document.getElementById(\"pageInfo\");\r\n\r\n      // Load PDF (wrap url in object!)\r\n      pdfDoc = await pdfjsLib.getDocument({ url }).promise;\r\n\r\n      const totalPages = Math.min(pdfDoc.numPages, limitPages);\r\n      pageInfo.textContent = `${currentPage} / ${totalPages}`;\r\n\r\n      await renderPage(currentPage);\r\n      renderThumbnails(totalPages);\r\n      enableScrollNavigation();\r\n\r\n      // Render a single page\r\n      async function renderPage(pageNum) {\r\n        if (pageNum < 1 || pageNum > limitPages) return;\r\n\r\n        const page = await pdfDoc.getPage(pageNum);\r\n        const viewport = page.getViewport({ scale });\r\n        const ctx = pdfViewer.getContext(\"2d\");\r\n        pdfViewer.width = viewport.width;\r\n        pdfViewer.height = viewport.height;\r\n\r\n        await page.render({ canvasContext: ctx, viewport }).promise;\r\n        currentPage = pageNum;\r\n        pageInfo.textContent = `${currentPage} / ${totalPages}`;\r\n      }\r\n\r\n      // Sidebar thumbnails\r\n      function renderThumbnails(totalPages) {\r\n        sidebar.innerHTML = \"\";\r\n        for (let i = 1; i <= totalPages; i++) {\r\n          pdfDoc.getPage(i).then(page => {\r\n            const viewport = page.getViewport({ scale: 0.2 });\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = viewport.width;\r\n            canvas.height = viewport.height;\r\n            const ctx = canvas.getContext(\"2d\");\r\n            page.render({ canvasContext: ctx, viewport });\r\n            sidebar.appendChild(canvas);\r\n\r\n            canvas.onclick = () => renderPage(i);\r\n          });\r\n        }\r\n      }\r\n\r\n      // Zoom controls\r\n      document.getElementById(\"zoomIn\").onclick = () => {\r\n        scale += 0.2;\r\n        renderPage(currentPage);\r\n      };\r\n      document.getElementById(\"zoomOut\").onclick = () => {\r\n        if (scale > 0.4) {\r\n          scale -= 0.2;\r\n          renderPage(currentPage);\r\n        }\r\n      };\r\n\r\n      // Close button\r\n      document.getElementById(\"closeBtn\").onclick = () => {\r\n        location.href = 'browse-book.html';\r\n      };\r\n\r\n      // Scroll navigation\r\n      function enableScrollNavigation() {\r\n        let scrollCooldown = false;\r\n\r\n        pdfViewer.addEventListener(\"wheel\", (event) => {\r\n          if (scrollCooldown) return;\r\n\r\n          if (event.deltaY > 0 && currentPage < limitPages) renderPage(currentPage + 1);\r\n          else if (event.deltaY < 0 && currentPage > 1) renderPage(currentPage - 1);\r\n\r\n          scrollCooldown = true;\r\n          setTimeout(() => { scrollCooldown = false; }, 150);\r\n        });\r\n\r\n        // Optional: scroll bar navigation\r\n        pdfViewer.addEventListener(\"scroll\", () => {\r\n          const containerHeight = pdfViewer.scrollHeight - pdfViewer.clientHeight;\r\n          if (containerHeight <= 0) return;\r\n\r\n          const scrollRatio = pdfViewer.scrollTop / containerHeight;\r\n          const pageNum = Math.min(limitPages, Math.max(1, Math.round(scrollRatio * totalPages)));\r\n\r\n          if (pageNum !== currentPage) renderPage(pageNum);\r\n        });\r\n      }\r\n    }\r\n    console.log(localStorage.getItem(\"previewedBook\"));\r\n\r\n\r\n  </script>\r\n\r\n</body>\r\n\r\n</html>"
        }
    ]
}
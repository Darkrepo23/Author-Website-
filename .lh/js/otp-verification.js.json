{
    "sourceFile": "js/otp-verification.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1757049832211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757049902571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,20 +12,8 @@\n     const userPIN = JSON.parse(localStorage.getItem(\"userPIN\"));\r\n \r\n     const user = users.find(u => u.email === emailOTP);\r\n \r\n-    if (user) {\r\n-        if (selectedType === \"email\") {\r\n-            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n-                (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n-            );\r\n-            otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n-        } else {\r\n-            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n-            otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n-        }\r\n-    }\r\n-\r\n     // OTP input handling\r\n     otpInputs[0].focus();\r\n \r\n     otpInputs.forEach((input, index) => {\r\n"
                },
                {
                    "date": 1757050066680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,19 @@\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n     const userPIN = JSON.parse(localStorage.getItem(\"userPIN\"));\r\n \r\n     const user = users.find(u => u.email === emailOTP);\r\n+    if (user) {\r\n+    if (selectedType === \"email\") {\r\n+        const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n+            (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n+        );\r\n+        otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n+    } else {\r\n+        const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n+        otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n+    }\r\n+}\r\n \r\n     // OTP input handling\r\n     otpInputs[0].focus();\r\n \r\n"
                },
                {
                    "date": 1757050072340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n     const userPIN = JSON.parse(localStorage.getItem(\"userPIN\"));\r\n \r\n     const user = users.find(u => u.email === emailOTP);\r\n+    \r\n     if (user) {\r\n     if (selectedType === \"email\") {\r\n         const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n             (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n"
                },
                {
                    "date": 1757054799304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,36 +1,37 @@\n-document.addEventListener('DOMContentLoaded', function() {\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n     const otpForm = document.getElementById('otpForm');\r\n     const otpInputs = document.querySelectorAll('.otp-input');\r\n     const nextBtn = document.getElementById('nextBtn');\r\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n-    // Get user + selected option\r\n+    // Get user + emailOTP\r\n     const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-    const emailOTP = localStorage.getItem(\"emailOTP\");\r\n+    const emailOTPData = JSON.parse(localStorage.getItem(\"emailOTP\")); // { email, pin }\r\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n-    const userPIN = JSON.parse(localStorage.getItem(\"userPIN\"));\r\n \r\n-    const user = users.find(u => u.email === emailOTP);\r\n-    \r\n+    // Find the matching user\r\n+    const user = users.find(u => u.email === (emailOTPData ? emailOTPData.email : null));\r\n+\r\n+    // Show message depending on type\r\n     if (user) {\r\n-    if (selectedType === \"email\") {\r\n-        const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n-            (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n-        );\r\n-        otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n-    } else {\r\n-        const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n-        otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n+        if (selectedType === \"email\") {\r\n+            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n+                (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n+            );\r\n+            otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n+        } else {\r\n+            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n+            otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n+        }\r\n     }\r\n-}\r\n \r\n     // OTP input handling\r\n     otpInputs[0].focus();\r\n \r\n     otpInputs.forEach((input, index) => {\r\n-        input.addEventListener('input', function(e) {\r\n+        input.addEventListener('input', function (e) {\r\n             if (!/^\\d$/.test(e.target.value)) {\r\n                 e.target.value = '';\r\n                 return;\r\n             }\r\n@@ -39,9 +40,9 @@\n             }\r\n             checkOTPComplete();\r\n         });\r\n \r\n-        input.addEventListener('keydown', function(e) {\r\n+        input.addEventListener('keydown', function (e) {\r\n             if (e.key === 'Backspace' && !input.value && index > 0) {\r\n                 otpInputs[index - 1].focus();\r\n             }\r\n         });\r\n@@ -51,35 +52,51 @@\n         const isComplete = Array.from(otpInputs).every(input => input.value);\r\n         nextBtn.disabled = !isComplete;\r\n     }\r\n \r\n-    otpForm.addEventListener('submit', function(e) {\r\n+    // ✅ Verify OTP\r\n+    otpForm.addEventListener('submit', function (e) {\r\n         e.preventDefault();\r\n         const enteredOTP = Array.from(otpInputs).map(input => input.value).join('');\r\n \r\n-        if (!userPIN || enteredOTP !== userPIN.pin.toString()) {\r\n+        if (!emailOTPData || enteredOTP !== emailOTPData.pin.toString()) {\r\n             showError(\"Invalid OTP code. Please try again.\");\r\n             otpInputs.forEach(input => input.value = '');\r\n             otpInputs[0].focus();\r\n             nextBtn.disabled = true;\r\n             return;\r\n         }\r\n \r\n+        // ✅ OTP matched\r\n         showSuccess(\"OTP verified successfully!\");\r\n+\r\n+        // Pass email to new-password page\r\n+        localStorage.setItem(\"resetEmail\", emailOTPData.email);\r\n+\r\n+        // Remove emailOTP (security)\r\n+        localStorage.removeItem(\"emailOTP\");\r\n+\r\n         setTimeout(() => {\r\n             window.location.href = 'new-password.html';\r\n         }, 1500);\r\n     });\r\n \r\n-    // Resend OTP handler (generate new pin & update localStorage)\r\n-    resendBtn.addEventListener('click', function() {\r\n+    // ✅ Resend OTP\r\n+    resendBtn.addEventListener('click', function () {\r\n+        if (!user) return;\r\n+\r\n         const newPin = Math.floor(10000 + Math.random() * 90000);\r\n-        localStorage.setItem(\"userPIN\", JSON.stringify({\r\n+\r\n+        // Update emailOTP with new pin\r\n+        localStorage.setItem(\"emailOTP\", JSON.stringify({\r\n             email: user.email,\r\n             pin: newPin\r\n         }));\r\n \r\n         showSuccess(\"A new OTP has been sent.\");\r\n+        console.log(\"📨 Resent new OTP:\", newPin);\r\n+\r\n+        // Here you can re-use EmailJS to send `newPin` again\r\n     });\r\n \r\n     // Notification helpers\r\n     function showError(msg) { showNotification(msg, \"error\"); }\r\n"
                },
                {
                    "date": 1757054959262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,36 @@\n-document.addEventListener('DOMContentLoaded', function () {\r\n+document.addEventListener('DOMContentLoaded', function() {\r\n     const otpForm = document.getElementById('otpForm');\r\n     const otpInputs = document.querySelectorAll('.otp-input');\r\n     const nextBtn = document.getElementById('nextBtn');\r\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n-    // Get user + emailOTP\r\n+    // Get user + selected option\r\n     const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-    const emailOTPData = JSON.parse(localStorage.getItem(\"emailOTP\")); // { email, pin }\r\n+    const emailOTP = localStorage.getItem(\"emailOTP\");\r\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n+    const userPIN = JSON.parse(localStorage.getItem(\"userPIN\"));\r\n \r\n-    // Find the matching user\r\n-    const user = users.find(u => u.email === (emailOTPData ? emailOTPData.email : null));\r\n-\r\n-    // Show message depending on type\r\n+    const user = users.find(u => u.email === emailOTP);\r\n+    \r\n     if (user) {\r\n-        if (selectedType === \"email\") {\r\n-            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n-                (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n-            );\r\n-            otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n-        } else {\r\n-            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n-            otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n-        }\r\n+    if (selectedType === \"email\") {\r\n+        const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n+            (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n+        );\r\n+        otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n+    } else {\r\n+        const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n+        otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n     }\r\n+}\r\n \r\n     // OTP input handling\r\n     otpInputs[0].focus();\r\n \r\n     otpInputs.forEach((input, index) => {\r\n-        input.addEventListener('input', function (e) {\r\n+        input.addEventListener('input', function(e) {\r\n             if (!/^\\d$/.test(e.target.value)) {\r\n                 e.target.value = '';\r\n                 return;\r\n             }\r\n@@ -40,9 +39,9 @@\n             }\r\n             checkOTPComplete();\r\n         });\r\n \r\n-        input.addEventListener('keydown', function (e) {\r\n+        input.addEventListener('keydown', function(e) {\r\n             if (e.key === 'Backspace' && !input.value && index > 0) {\r\n                 otpInputs[index - 1].focus();\r\n             }\r\n         });\r\n@@ -52,51 +51,35 @@\n         const isComplete = Array.from(otpInputs).every(input => input.value);\r\n         nextBtn.disabled = !isComplete;\r\n     }\r\n \r\n-    // ✅ Verify OTP\r\n-    otpForm.addEventListener('submit', function (e) {\r\n+    otpForm.addEventListener('submit', function(e) {\r\n         e.preventDefault();\r\n         const enteredOTP = Array.from(otpInputs).map(input => input.value).join('');\r\n \r\n-        if (!emailOTPData || enteredOTP !== emailOTPData.pin.toString()) {\r\n+        if (!userPIN || enteredOTP !== userPIN.pin.toString()) {\r\n             showError(\"Invalid OTP code. Please try again.\");\r\n             otpInputs.forEach(input => input.value = '');\r\n             otpInputs[0].focus();\r\n             nextBtn.disabled = true;\r\n             return;\r\n         }\r\n \r\n-        // ✅ OTP matched\r\n         showSuccess(\"OTP verified successfully!\");\r\n-\r\n-        // Pass email to new-password page\r\n-        localStorage.setItem(\"resetEmail\", emailOTPData.email);\r\n-\r\n-        // Remove emailOTP (security)\r\n-        localStorage.removeItem(\"emailOTP\");\r\n-\r\n         setTimeout(() => {\r\n             window.location.href = 'new-password.html';\r\n         }, 1500);\r\n     });\r\n \r\n-    // ✅ Resend OTP\r\n-    resendBtn.addEventListener('click', function () {\r\n-        if (!user) return;\r\n-\r\n+    // Resend OTP handler (generate new pin & update localStorage)\r\n+    resendBtn.addEventListener('click', function() {\r\n         const newPin = Math.floor(10000 + Math.random() * 90000);\r\n-\r\n-        // Update emailOTP with new pin\r\n-        localStorage.setItem(\"emailOTP\", JSON.stringify({\r\n+        localStorage.setItem(\"userPIN\", JSON.stringify({\r\n             email: user.email,\r\n             pin: newPin\r\n         }));\r\n \r\n         showSuccess(\"A new OTP has been sent.\");\r\n-        console.log(\"📨 Resent new OTP:\", newPin);\r\n-\r\n-        // Here you can re-use EmailJS to send `newPin` again\r\n     });\r\n \r\n     // Notification helpers\r\n     function showError(msg) { showNotification(msg, \"error\"); }\r\n"
                },
                {
                    "date": 1757055100825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,43 @@\n-document.addEventListener('DOMContentLoaded', function() {\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n     const otpForm = document.getElementById('otpForm');\r\n     const otpInputs = document.querySelectorAll('.otp-input');\r\n     const nextBtn = document.getElementById('nextBtn');\r\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n-    // Get user + selected option\r\n+    // Load from localStorage\r\n     const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-    const emailOTP = localStorage.getItem(\"emailOTP\");\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); // { email, pin }\r\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n-    const userPIN = JSON.parse(localStorage.getItem(\"userPIN\"));\r\n \r\n-    const user = users.find(u => u.email === emailOTP);\r\n-    \r\n+    const user = users.find(u => u.email === emailOTP?.email);\r\n+\r\n+    // Show masked target\r\n     if (user) {\r\n-    if (selectedType === \"email\") {\r\n-        const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n-            (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n-        );\r\n-        otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n-    } else {\r\n-        const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n-        otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n+        if (selectedType === \"email\") {\r\n+            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n+                (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n+            );\r\n+            otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n+        } else {\r\n+            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n+            otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n+        }\r\n     }\r\n-}\r\n \r\n-    // OTP input handling\r\n+    // OTP input auto-focus\r\n     otpInputs[0].focus();\r\n-\r\n     otpInputs.forEach((input, index) => {\r\n-        input.addEventListener('input', function(e) {\r\n+        input.addEventListener('input', function (e) {\r\n             if (!/^\\d$/.test(e.target.value)) {\r\n                 e.target.value = '';\r\n                 return;\r\n             }\r\n-            if (index < otpInputs.length - 1) {\r\n-                otpInputs[index + 1].focus();\r\n-            }\r\n+            if (index < otpInputs.length - 1) otpInputs[index + 1].focus();\r\n             checkOTPComplete();\r\n         });\r\n-\r\n-        input.addEventListener('keydown', function(e) {\r\n+        input.addEventListener('keydown', function (e) {\r\n             if (e.key === 'Backspace' && !input.value && index > 0) {\r\n                 otpInputs[index - 1].focus();\r\n             }\r\n         });\r\n@@ -51,38 +47,68 @@\n         const isComplete = Array.from(otpInputs).every(input => input.value);\r\n         nextBtn.disabled = !isComplete;\r\n     }\r\n \r\n-    otpForm.addEventListener('submit', function(e) {\r\n+    // 🔹 Verify OTP\r\n+    otpForm.addEventListener('submit', function (e) {\r\n         e.preventDefault();\r\n         const enteredOTP = Array.from(otpInputs).map(input => input.value).join('');\r\n \r\n-        if (!userPIN || enteredOTP !== userPIN.pin.toString()) {\r\n+        if (!emailOTP || enteredOTP !== emailOTP.pin.toString()) {\r\n             showError(\"Invalid OTP code. Please try again.\");\r\n             otpInputs.forEach(input => input.value = '');\r\n             otpInputs[0].focus();\r\n             nextBtn.disabled = true;\r\n             return;\r\n         }\r\n \r\n         showSuccess(\"OTP verified successfully!\");\r\n+\r\n+        // ✅ Remove OTP after success\r\n+        localStorage.removeItem(\"emailOTP\");\r\n+\r\n         setTimeout(() => {\r\n             window.location.href = 'new-password.html';\r\n         }, 1500);\r\n     });\r\n \r\n-    // Resend OTP handler (generate new pin & update localStorage)\r\n-    resendBtn.addEventListener('click', function() {\r\n+    // 🔹 Resend OTP function\r\n+    resendBtn.addEventListener('click', resendOTP);\r\n+\r\n+    function resendOTP() {\r\n+        if (!user) {\r\n+            showError(\"No user found.\");\r\n+            return;\r\n+        }\r\n+\r\n         const newPin = Math.floor(10000 + Math.random() * 90000);\r\n-        localStorage.setItem(\"userPIN\", JSON.stringify({\r\n+\r\n+        // Update localStorage\r\n+        localStorage.setItem(\"emailOTP\", JSON.stringify({\r\n             email: user.email,\r\n             pin: newPin\r\n         }));\r\n \r\n-        showSuccess(\"A new OTP has been sent.\");\r\n-    });\r\n+        console.log(\"📨 Resent OTP to:\", user.email, \"Code:\", newPin);\r\n \r\n-    // Notification helpers\r\n+        // Send via EmailJS\r\n+        emailjs.send(\"service_b816d9f\", \"template_1yu5htt\", {\r\n+            to_email: user.email,\r\n+            to_name: user.fullName || user.name || \"User\",\r\n+            otp_code: newPin\r\n+        }).then(\r\n+            function (response) {\r\n+                console.log(\"✅ Resent OTP!\", response.status, response.text);\r\n+                showSuccess(\"A new OTP has been sent.\");\r\n+            },\r\n+            function (error) {\r\n+                console.error(\"❌ Failed to resend OTP\", error);\r\n+                showError(\"Failed to resend OTP.\");\r\n+            }\r\n+        );\r\n+    }\r\n+\r\n+    // Notifications\r\n     function showError(msg) { showNotification(msg, \"error\"); }\r\n     function showSuccess(msg) { showNotification(msg, \"success\"); }\r\n     function showNotification(message, type = 'info') {\r\n         const notification = document.createElement('div');\r\n"
                },
                {
                    "date": 1757055510443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,10 +63,10 @@\n \r\n         showSuccess(\"OTP verified successfully!\");\r\n \r\n         // ✅ Remove OTP after success\r\n-        localStorage.removeItem(\"emailOTP\");\r\n \r\n+\r\n         setTimeout(() => {\r\n             window.location.href = 'new-password.html';\r\n         }, 1500);\r\n     });\r\n"
                },
                {
                    "date": 1758621277441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,47 @@\n-document.addEventListener('DOMContentLoaded', function () {\r\n+document.addEventListener('DOMContentLoaded', async function () {\r\n     const otpForm = document.getElementById('otpForm');\r\n     const otpInputs = document.querySelectorAll('.otp-input');\r\n     const nextBtn = document.getElementById('nextBtn');\r\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n-    // Load from localStorage\r\n-    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); // { email, pin }\r\n+    // Load OTP data from localStorage (contains { email, pin })\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); \r\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n \r\n-    const user = users.find(u => u.email === emailOTP?.email);\r\n+    let user = null;\r\n \r\n-    // Show masked target\r\n+    if (emailOTP?.email) {\r\n+        try {\r\n+            // 🔹 Fetch user from DB (Flask backend)\r\n+            const res = await fetch(\"http://127.0.0.1:5000/get-user\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: emailOTP.email })\r\n+            });\r\n+            const result = await res.json();\r\n+\r\n+            if (result.success && result.user) {\r\n+                user = result.user;\r\n+            } else {\r\n+                console.warn(\"No user found in DB for:\", emailOTP.email);\r\n+            }\r\n+        } catch (err) {\r\n+            console.error(\"Error fetching user from DB:\", err);\r\n+        }\r\n+    }\r\n+\r\n+    // Show masked target (email or phone)\r\n     if (user) {\r\n         if (selectedType === \"email\") {\r\n-            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n+            const maskedEmail = user.Email.replace(\r\n+                /(.{2})(.*)(@.*)/,\r\n                 (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n             );\r\n             otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n-        } else {\r\n-            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n+        } else if (user.ContactNum) {\r\n+            const maskedPhone = \"••••\" + user.ContactNum.slice(-4);\r\n             otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n         }\r\n     }\r\n \r\n@@ -63,19 +83,19 @@\n \r\n         showSuccess(\"OTP verified successfully!\");\r\n \r\n         // ✅ Remove OTP after success\r\n+        localStorage.removeItem(\"emailOTP\");\r\n \r\n-\r\n         setTimeout(() => {\r\n             window.location.href = 'new-password.html';\r\n         }, 1500);\r\n     });\r\n \r\n     // 🔹 Resend OTP function\r\n     resendBtn.addEventListener('click', resendOTP);\r\n \r\n-    function resendOTP() {\r\n+    async function resendOTP() {\r\n         if (!user) {\r\n             showError(\"No user found.\");\r\n             return;\r\n         }\r\n@@ -83,29 +103,27 @@\n         const newPin = Math.floor(10000 + Math.random() * 90000);\r\n \r\n         // Update localStorage\r\n         localStorage.setItem(\"emailOTP\", JSON.stringify({\r\n-            email: user.email,\r\n+            email: user.Email,\r\n             pin: newPin\r\n         }));\r\n \r\n-        console.log(\"📨 Resent OTP to:\", user.email, \"Code:\", newPin);\r\n+        console.log(\"📨 Resent OTP to:\", user.Email, \"Code:\", newPin);\r\n \r\n         // Send via EmailJS\r\n-        emailjs.send(\"service_b816d9f\", \"template_1yu5htt\", {\r\n-            to_email: user.email,\r\n-            to_name: user.fullName || user.name || \"User\",\r\n-            otp_code: newPin\r\n-        }).then(\r\n-            function (response) {\r\n-                console.log(\"✅ Resent OTP!\", response.status, response.text);\r\n-                showSuccess(\"A new OTP has been sent.\");\r\n-            },\r\n-            function (error) {\r\n-                console.error(\"❌ Failed to resend OTP\", error);\r\n-                showError(\"Failed to resend OTP.\");\r\n-            }\r\n-        );\r\n+        try {\r\n+            await emailjs.send(\"service_b816d9f\", \"template_1yu5htt\", {\r\n+                to_email: user.Email,\r\n+                to_name: user.FullName || \"User\",\r\n+                otp_code: newPin\r\n+            });\r\n+            console.log(\"✅ Resent OTP!\");\r\n+            showSuccess(\"A new OTP has been sent.\");\r\n+        } catch (error) {\r\n+            console.error(\"❌ Failed to resend OTP\", error);\r\n+            showError(\"Failed to resend OTP.\");\r\n+        }\r\n     }\r\n \r\n     // Notifications\r\n     function showError(msg) { showNotification(msg, \"error\"); }\r\n"
                },
                {
                    "date": 1758621568149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,19 @@\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n     // Load OTP data from localStorage (contains { email, pin })\r\n-    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); \r\n-    const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n+ // Load OTP data from localStorage\r\n+let emailOTP = null;\r\n+try {\r\n+    const stored = localStorage.getItem(\"emailOTP\");\r\n+    if (stored) {\r\n+        emailOTP = JSON.parse(stored);\r\n+    }\r\n+} catch (err) {\r\n+    console.error(\"Invalid emailOTP format in localStorage:\", localStorage.getItem(\"emailOTP\"));\r\n+}\r\n \r\n-    let user = null;\r\n-\r\n     if (emailOTP?.email) {\r\n         try {\r\n             // 🔹 Fetch user from DB (Flask backend)\r\n             const res = await fetch(\"http://127.0.0.1:5000/get-user\", {\r\n"
                },
                {
                    "date": 1758621715129,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,39 +5,33 @@\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n     // Load OTP data from localStorage (contains { email, pin })\r\n- // Load OTP data from localStorage\r\n-let emailOTP = null;\r\n-try {\r\n-    const stored = localStorage.getItem(\"emailOTP\");\r\n-    if (stored) {\r\n-        emailOTP = JSON.parse(stored);\r\n-    }\r\n-} catch (err) {\r\n-    console.error(\"Invalid emailOTP format in localStorage:\", localStorage.getItem(\"emailOTP\"));\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); \r\n+const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n+let user = null;\r\n+\r\n+if (emailOTP && emailOTP.email) {\r\n+    fetch(\"http://127.0.0.1:5000/get-user\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email: emailOTP.email })\r\n+    })\r\n+    .then(res => res.json())\r\n+    .then(result => {\r\n+        if (result.success && result.user) {\r\n+            user = result.user;\r\n+            console.log(\"✅ User found:\", user);\r\n+        } else {\r\n+            console.warn(\"❌ No user found in DB for:\", emailOTP.email);\r\n+        }\r\n+    })\r\n+    .catch(err => {\r\n+        console.error(\"Error fetching user from DB:\", err);\r\n+    });\r\n }\r\n \r\n-    if (emailOTP?.email) {\r\n-        try {\r\n-            // 🔹 Fetch user from DB (Flask backend)\r\n-            const res = await fetch(\"http://127.0.0.1:5000/get-user\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: emailOTP.email })\r\n-            });\r\n-            const result = await res.json();\r\n \r\n-            if (result.success && result.user) {\r\n-                user = result.user;\r\n-            } else {\r\n-                console.warn(\"No user found in DB for:\", emailOTP.email);\r\n-            }\r\n-        } catch (err) {\r\n-            console.error(\"Error fetching user from DB:\", err);\r\n-        }\r\n-    }\r\n-\r\n     // Show masked target (email or phone)\r\n     if (user) {\r\n         if (selectedType === \"email\") {\r\n             const maskedEmail = user.Email.replace(\r\n"
                },
                {
                    "date": 1758621891851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,32 +6,32 @@\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n     // Load OTP data from localStorage (contains { email, pin })\r\n     const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); \r\n-const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n-let user = null;\r\n+    const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n \r\n-if (emailOTP && emailOTP.email) {\r\n-    fetch(\"http://127.0.0.1:5000/get-user\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email: emailOTP.email })\r\n-    })\r\n-    .then(res => res.json())\r\n-    .then(result => {\r\n-        if (result.success && result.user) {\r\n-            user = result.user;\r\n-            console.log(\"✅ User found:\", user);\r\n-        } else {\r\n-            console.warn(\"❌ No user found in DB for:\", emailOTP.email);\r\n+    let user = null;\r\n+\r\n+    if (emailOTP?.email) {\r\n+        try {\r\n+            // 🔹 Fetch user from DB (Flask backend)\r\n+            const res = await fetch(\"http://127.0.0.1:5000/get-user\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: emailOTP.email })\r\n+            });\r\n+            const result = await res.json();\r\n+\r\n+            if (result.success && result.user) {\r\n+                user = result.user;\r\n+            } else {\r\n+                console.warn(\"No user found in DB for:\", emailOTP.email);\r\n+            }\r\n+        } catch (err) {\r\n+            console.error(\"Error fetching user from DB:\", err);\r\n         }\r\n-    })\r\n-    .catch(err => {\r\n-        console.error(\"Error fetching user from DB:\", err);\r\n-    });\r\n-}\r\n+    }\r\n \r\n-\r\n     // Show masked target (email or phone)\r\n     if (user) {\r\n         if (selectedType === \"email\") {\r\n             const maskedEmail = user.Email.replace(\r\n"
                },
                {
                    "date": 1758621906419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,47 +1,27 @@\n-document.addEventListener('DOMContentLoaded', async function () {\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n     const otpForm = document.getElementById('otpForm');\r\n     const otpInputs = document.querySelectorAll('.otp-input');\r\n     const nextBtn = document.getElementById('nextBtn');\r\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n-    // Load OTP data from localStorage (contains { email, pin })\r\n-    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); \r\n+    // Load from localStorage\r\n+    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); // { email, pin }\r\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n \r\n-    let user = null;\r\n+    const user = users.find(u => u.email === emailOTP?.email);\r\n \r\n-    if (emailOTP?.email) {\r\n-        try {\r\n-            // 🔹 Fetch user from DB (Flask backend)\r\n-            const res = await fetch(\"http://127.0.0.1:5000/get-user\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: emailOTP.email })\r\n-            });\r\n-            const result = await res.json();\r\n-\r\n-            if (result.success && result.user) {\r\n-                user = result.user;\r\n-            } else {\r\n-                console.warn(\"No user found in DB for:\", emailOTP.email);\r\n-            }\r\n-        } catch (err) {\r\n-            console.error(\"Error fetching user from DB:\", err);\r\n-        }\r\n-    }\r\n-\r\n-    // Show masked target (email or phone)\r\n+    // Show masked target\r\n     if (user) {\r\n         if (selectedType === \"email\") {\r\n-            const maskedEmail = user.Email.replace(\r\n-                /(.{2})(.*)(@.*)/,\r\n+            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n                 (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n             );\r\n             otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n-        } else if (user.ContactNum) {\r\n-            const maskedPhone = \"••••\" + user.ContactNum.slice(-4);\r\n+        } else {\r\n+            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n             otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n         }\r\n     }\r\n \r\n@@ -83,19 +63,19 @@\n \r\n         showSuccess(\"OTP verified successfully!\");\r\n \r\n         // ✅ Remove OTP after success\r\n-        localStorage.removeItem(\"emailOTP\");\r\n \r\n+\r\n         setTimeout(() => {\r\n             window.location.href = 'new-password.html';\r\n         }, 1500);\r\n     });\r\n \r\n     // 🔹 Resend OTP function\r\n     resendBtn.addEventListener('click', resendOTP);\r\n \r\n-    async function resendOTP() {\r\n+    function resendOTP() {\r\n         if (!user) {\r\n             showError(\"No user found.\");\r\n             return;\r\n         }\r\n@@ -103,27 +83,29 @@\n         const newPin = Math.floor(10000 + Math.random() * 90000);\r\n \r\n         // Update localStorage\r\n         localStorage.setItem(\"emailOTP\", JSON.stringify({\r\n-            email: user.Email,\r\n+            email: user.email,\r\n             pin: newPin\r\n         }));\r\n \r\n-        console.log(\"📨 Resent OTP to:\", user.Email, \"Code:\", newPin);\r\n+        console.log(\"📨 Resent OTP to:\", user.email, \"Code:\", newPin);\r\n \r\n         // Send via EmailJS\r\n-        try {\r\n-            await emailjs.send(\"service_b816d9f\", \"template_1yu5htt\", {\r\n-                to_email: user.Email,\r\n-                to_name: user.FullName || \"User\",\r\n-                otp_code: newPin\r\n-            });\r\n-            console.log(\"✅ Resent OTP!\");\r\n-            showSuccess(\"A new OTP has been sent.\");\r\n-        } catch (error) {\r\n-            console.error(\"❌ Failed to resend OTP\", error);\r\n-            showError(\"Failed to resend OTP.\");\r\n-        }\r\n+        emailjs.send(\"service_b816d9f\", \"template_1yu5htt\", {\r\n+            to_email: user.email,\r\n+            to_name: user.fullName || user.name || \"User\",\r\n+            otp_code: newPin\r\n+        }).then(\r\n+            function (response) {\r\n+                console.log(\"✅ Resent OTP!\", response.status, response.text);\r\n+                showSuccess(\"A new OTP has been sent.\");\r\n+            },\r\n+            function (error) {\r\n+                console.error(\"❌ Failed to resend OTP\", error);\r\n+                showError(\"Failed to resend OTP.\");\r\n+            }\r\n+        );\r\n     }\r\n \r\n     // Notifications\r\n     function showError(msg) { showNotification(msg, \"error\"); }\r\n"
                },
                {
                    "date": 1758621935506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,47 @@\n-document.addEventListener('DOMContentLoaded', function () {\r\n+document.addEventListener('DOMContentLoaded', async function () {\r\n     const otpForm = document.getElementById('otpForm');\r\n     const otpInputs = document.querySelectorAll('.otp-input');\r\n     const nextBtn = document.getElementById('nextBtn');\r\n     const resendBtn = document.getElementById('resendBtn');\r\n     const otpSubtitle = document.getElementById('otpSubtitle');\r\n \r\n-    // Load from localStorage\r\n-    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); // { email, pin }\r\n+    // Load OTP data from localStorage (contains { email, pin })\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\")); \r\n     const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n \r\n-    const user = users.find(u => u.email === emailOTP?.email);\r\n+    let user = null;\r\n \r\n-    // Show masked target\r\n+    if (emailOTP?.email) {\r\n+        try {\r\n+            // 🔹 Fetch user from DB (Flask backend)\r\n+            const res = await fetch(\"http://127.0.0.1:5000/get-user\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: emailOTP.email })\r\n+            });\r\n+            const result = await res.json();\r\n+\r\n+            if (result.success && result.user) {\r\n+                user = result.user;\r\n+            } else {\r\n+                console.warn(\"No user found in DB for:\", emailOTP.email);\r\n+            }\r\n+        } catch (err) {\r\n+            console.error(\"Error fetching user from DB:\", err);\r\n+        }\r\n+    }\r\n+\r\n+    // Show masked target (email or phone)\r\n     if (user) {\r\n         if (selectedType === \"email\") {\r\n-            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n+            const maskedEmail = user.Email.replace(\r\n+                /(.{2})(.*)(@.*)/,\r\n                 (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n             );\r\n             otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n-        } else {\r\n-            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n+        } else if (user.ContactNum) {\r\n+            const maskedPhone = \"••••\" + user.ContactNum.slice(-4);\r\n             otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n         }\r\n     }\r\n \r\n@@ -63,19 +83,19 @@\n \r\n         showSuccess(\"OTP verified successfully!\");\r\n \r\n         // ✅ Remove OTP after success\r\n+        localStorage.removeItem(\"emailOTP\");\r\n \r\n-\r\n         setTimeout(() => {\r\n             window.location.href = 'new-password.html';\r\n         }, 1500);\r\n     });\r\n \r\n     // 🔹 Resend OTP function\r\n     resendBtn.addEventListener('click', resendOTP);\r\n \r\n-    function resendOTP() {\r\n+    async function resendOTP() {\r\n         if (!user) {\r\n             showError(\"No user found.\");\r\n             return;\r\n         }\r\n@@ -83,29 +103,27 @@\n         const newPin = Math.floor(10000 + Math.random() * 90000);\r\n \r\n         // Update localStorage\r\n         localStorage.setItem(\"emailOTP\", JSON.stringify({\r\n-            email: user.email,\r\n+            email: user.Email,\r\n             pin: newPin\r\n         }));\r\n \r\n-        console.log(\"📨 Resent OTP to:\", user.email, \"Code:\", newPin);\r\n+        console.log(\"📨 Resent OTP to:\", user.Email, \"Code:\", newPin);\r\n \r\n         // Send via EmailJS\r\n-        emailjs.send(\"service_b816d9f\", \"template_1yu5htt\", {\r\n-            to_email: user.email,\r\n-            to_name: user.fullName || user.name || \"User\",\r\n-            otp_code: newPin\r\n-        }).then(\r\n-            function (response) {\r\n-                console.log(\"✅ Resent OTP!\", response.status, response.text);\r\n-                showSuccess(\"A new OTP has been sent.\");\r\n-            },\r\n-            function (error) {\r\n-                console.error(\"❌ Failed to resend OTP\", error);\r\n-                showError(\"Failed to resend OTP.\");\r\n-            }\r\n-        );\r\n+        try {\r\n+            await emailjs.send(\"service_b816d9f\", \"template_1yu5htt\", {\r\n+                to_email: user.Email,\r\n+                to_name: user.FullName || \"User\",\r\n+                otp_code: newPin\r\n+            });\r\n+            console.log(\"✅ Resent OTP!\");\r\n+            showSuccess(\"A new OTP has been sent.\");\r\n+        } catch (error) {\r\n+            console.error(\"❌ Failed to resend OTP\", error);\r\n+            showError(\"Failed to resend OTP.\");\r\n+        }\r\n     }\r\n \r\n     // Notifications\r\n     function showError(msg) { showNotification(msg, \"error\"); }\r\n"
                },
                {
                    "date": 1758623078856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,4 +135,6 @@\n         document.body.appendChild(notification);\r\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n+\r\n+<console className=\"log\"></console>\r\n"
                },
                {
                    "date": 1758623085326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,5 +136,5 @@\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n \r\n-<console className=\"log\"></console>\r\n+console.log(\"\")\r\n"
                },
                {
                    "date": 1758623101173,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,5 +136,5 @@\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n \r\n-console.log(\"\")\r\n+console.log(localStorage.ge)\r\n"
                },
                {
                    "date": 1758623107845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,5 +136,5 @@\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n \r\n-console.log(localStorage.ge)\r\n+console.log(localStorage.getItem('emailOTP'))\r\n"
                },
                {
                    "date": 1758623125851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,6 +135,5 @@\n         document.body.appendChild(notification);\r\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n-\r\n-console.log(localStorage.getItem('emailOTP'))\r\n+localStorage\r\n"
                },
                {
                    "date": 1758623136893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,5 +135,6 @@\n         document.body.appendChild(notification);\r\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n-localStorage\r\n+\r\n+const otp = \r\n"
                },
                {
                    "date": 1758623143002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,5 +136,5 @@\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n \r\n-const otp = \r\n+const otp = localStorage.get\r\n"
                },
                {
                    "date": 1758623149763,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,5 +136,5 @@\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n \r\n-const otp = localStorage.get\r\n+const otp = localStorage.getItem('emailOTP')\r\n"
                },
                {
                    "date": 1758623154970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,4 +137,5 @@\n     }\r\n });\r\n \r\n const otp = localStorage.getItem('emailOTP')\r\n+console\r\n"
                },
                {
                    "date": 1758623162630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,5 +137,5 @@\n     }\r\n });\r\n \r\n const otp = localStorage.getItem('emailOTP')\r\n-console\r\n+console.log(otp)\r\n"
                },
                {
                    "date": 1758623219765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,7 +135,4 @@\n         document.body.appendChild(notification);\r\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n-\r\n-const otp = localStorage.getItem('emailOTP')\r\n-console.log(otp)\r\n"
                },
                {
                    "date": 1758623249780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,4 +135,6 @@\n         document.body.appendChild(notification);\r\n         setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n+\r\n+\r\n"
                },
                {
                    "date": 1758623260447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,5 +137,5 @@\n     }\r\n });\r\n \r\n \r\n-otp \n\\ No newline at end of file\n+otp\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758623765010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,6 +137,6 @@\n     }\r\n });\r\n \r\n \r\n-const otp = localStorage.getItem('usa')\r\n+const otp = localStorage.getItem('us')\r\n console.log(otp)\n\\ No newline at end of file\n"
                }
            ],
            "date": 1757049832211,
            "name": "Commit-0",
            "content": "document.addEventListener('DOMContentLoaded', function() {\r\n    const otpForm = document.getElementById('otpForm');\r\n    const otpInputs = document.querySelectorAll('.otp-input');\r\n    const nextBtn = document.getElementById('nextBtn');\r\n    const resendBtn = document.getElementById('resendBtn');\r\n    const otpSubtitle = document.getElementById('otpSubtitle');\r\n\r\n    // Get user + selected option\r\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n    const emailOTP = localStorage.getItem(\"emailOTP\");\r\n    const selectedType = localStorage.getItem(\"otpType\"); // \"email\" or \"phone\"\r\n    const userPIN = JSON.parse(localStorage.getItem(\"userPIN\"));\r\n\r\n    const user = users.find(u => u.email === emailOTP);\r\n\r\n    if (user) {\r\n        if (selectedType === \"email\") {\r\n            const maskedEmail = user.email.replace(/(.{2})(.*)(@.*)/,\r\n                (m, p1, p2, p3) => p1 + \"*\".repeat(p2.length) + p3\r\n            );\r\n            otpSubtitle.textContent = `We have sent the code to your email: ${maskedEmail}`;\r\n        } else {\r\n            const maskedPhone = \"••••\" + user.contactNum.slice(-4);\r\n            otpSubtitle.textContent = `We have sent the code to your phone: ${maskedPhone}`;\r\n        }\r\n    }\r\n\r\n    // OTP input handling\r\n    otpInputs[0].focus();\r\n\r\n    otpInputs.forEach((input, index) => {\r\n        input.addEventListener('input', function(e) {\r\n            if (!/^\\d$/.test(e.target.value)) {\r\n                e.target.value = '';\r\n                return;\r\n            }\r\n            if (index < otpInputs.length - 1) {\r\n                otpInputs[index + 1].focus();\r\n            }\r\n            checkOTPComplete();\r\n        });\r\n\r\n        input.addEventListener('keydown', function(e) {\r\n            if (e.key === 'Backspace' && !input.value && index > 0) {\r\n                otpInputs[index - 1].focus();\r\n            }\r\n        });\r\n    });\r\n\r\n    function checkOTPComplete() {\r\n        const isComplete = Array.from(otpInputs).every(input => input.value);\r\n        nextBtn.disabled = !isComplete;\r\n    }\r\n\r\n    otpForm.addEventListener('submit', function(e) {\r\n        e.preventDefault();\r\n        const enteredOTP = Array.from(otpInputs).map(input => input.value).join('');\r\n\r\n        if (!userPIN || enteredOTP !== userPIN.pin.toString()) {\r\n            showError(\"Invalid OTP code. Please try again.\");\r\n            otpInputs.forEach(input => input.value = '');\r\n            otpInputs[0].focus();\r\n            nextBtn.disabled = true;\r\n            return;\r\n        }\r\n\r\n        showSuccess(\"OTP verified successfully!\");\r\n        setTimeout(() => {\r\n            window.location.href = 'new-password.html';\r\n        }, 1500);\r\n    });\r\n\r\n    // Resend OTP handler (generate new pin & update localStorage)\r\n    resendBtn.addEventListener('click', function() {\r\n        const newPin = Math.floor(10000 + Math.random() * 90000);\r\n        localStorage.setItem(\"userPIN\", JSON.stringify({\r\n            email: user.email,\r\n            pin: newPin\r\n        }));\r\n\r\n        showSuccess(\"A new OTP has been sent.\");\r\n    });\r\n\r\n    // Notification helpers\r\n    function showError(msg) { showNotification(msg, \"error\"); }\r\n    function showSuccess(msg) { showNotification(msg, \"success\"); }\r\n    function showNotification(message, type = 'info') {\r\n        const notification = document.createElement('div');\r\n        notification.className = `notification notification-${type}`;\r\n        notification.textContent = message;\r\n        document.body.appendChild(notification);\r\n        setTimeout(() => notification.remove(), 3000);\r\n    }\r\n});\r\n"
        }
    ]
}
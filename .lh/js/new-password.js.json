{
    "sourceFile": "js/new-password.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1757054814611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757054961260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,259 @@\n-document.addEventListener('DOMContentLoaded', function () {\r\n+// New Password functionality\r\n+document.addEventListener('DOMContentLoaded', function() {\r\n     const passwordForm = document.getElementById('passwordForm');\r\n     const passwordInput = document.getElementById('password');\r\n     const confirmPasswordInput = document.getElementById('confirmPassword');\r\n     const changePasswordBtn = document.getElementById('changePasswordBtn');\r\n+    const togglePassword = document.getElementById('togglePassword');\r\n+    const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');\r\n+    const passwordStrength = document.getElementById('passwordStrength');\r\n+    const passwordMatch = document.getElementById('passwordMatch');\r\n \r\n-    // ✅ Get which email is resetting\r\n-    const resetEmail = localStorage.getItem(\"resetEmail\");\r\n-    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n+    // Toggle password visibility\r\n+    togglePassword.addEventListener('click', function() {\r\n+        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n+        passwordInput.setAttribute('type', type);\r\n+        this.innerHTML = type === 'password' ? '<i class=\"fas fa-eye\"></i>' : '<i class=\"fas fa-eye-slash\"></i>';\r\n+    });\r\n \r\n-    const userIndex = users.findIndex(u => u.email === resetEmail);\r\n-    if (userIndex === -1) {\r\n-        alert(\"No user found for this reset session.\");\r\n-        window.location.href = \"login.html\";\r\n-        return;\r\n+    toggleConfirmPassword.addEventListener('click', function() {\r\n+        const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n+        confirmPasswordInput.setAttribute('type', type);\r\n+        this.innerHTML = type === 'password' ? '<i class=\"fas fa-eye\"></i>' : '<i class=\"fas fa-eye-slash\"></i>';\r\n+    });\r\n+\r\n+    // Password strength validation\r\n+    passwordInput.addEventListener('input', function() {\r\n+        const password = this.value;\r\n+        const strength = checkPasswordStrength(password);\r\n+        updatePasswordStrength(strength);\r\n+        checkFormValidity();\r\n+    });\r\n+\r\n+    // Confirm password validation\r\n+    confirmPasswordInput.addEventListener('input', function() {\r\n+        checkPasswordMatch();\r\n+        checkFormValidity();\r\n+    });\r\n+\r\n+    // Check password strength\r\n+    function checkPasswordStrength(password) {\r\n+        let score = 0;\r\n+        let feedback = [];\r\n+\r\n+        // Length check\r\n+        if (password.length >= 8) {\r\n+            score += 1;\r\n+        } else {\r\n+            feedback.push('At least 8 characters');\r\n+        }\r\n+\r\n+        // Contains lowercase\r\n+        if (/[a-z]/.test(password)) {\r\n+            score += 1;\r\n+        } else {\r\n+            feedback.push('Lowercase letter');\r\n+        }\r\n+\r\n+        // Contains uppercase\r\n+        if (/[A-Z]/.test(password)) {\r\n+            score += 1;\r\n+        } else {\r\n+            feedback.push('Uppercase letter');\r\n+        }\r\n+\r\n+        // Contains number\r\n+        if (/\\d/.test(password)) {\r\n+            score += 1;\r\n+        } else {\r\n+            feedback.push('Number');\r\n+        }\r\n+\r\n+        // Contains special character\r\n+        if (/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n+            score += 1;\r\n+        } else {\r\n+            feedback.push('Special character');\r\n+        }\r\n+\r\n+        if (score <= 2) {\r\n+            return { level: 'weak', score, feedback };\r\n+        } else if (score <= 4) {\r\n+            return { level: 'medium', score, feedback };\r\n+        } else {\r\n+            return { level: 'strong', score, feedback };\r\n+        }\r\n     }\r\n \r\n-    passwordForm.addEventListener('submit', function (e) {\r\n+    // Update password strength display\r\n+    function updatePasswordStrength(strength) {\r\n+        passwordStrength.textContent = `Password strength: ${strength.level.charAt(0).toUpperCase() + strength.level.slice(1)}`;\r\n+        passwordStrength.className = `password-strength ${strength.level}`;\r\n+        \r\n+        // Add strength bar if not present\r\n+        if (!passwordStrength.querySelector('.password-strength-bar')) {\r\n+            const strengthBar = document.createElement('div');\r\n+            strengthBar.className = 'password-strength-bar';\r\n+            strengthBar.innerHTML = '<div class=\"password-strength-fill\"></div>';\r\n+            passwordStrength.appendChild(strengthBar);\r\n+        }\r\n+        \r\n+        const strengthFill = passwordStrength.querySelector('.password-strength-fill');\r\n+        strengthFill.className = `password-strength-fill ${strength.level}`;\r\n+    }\r\n+\r\n+    // Check if passwords match\r\n+    function checkPasswordMatch() {\r\n+        const password = passwordInput.value;\r\n+        const confirmPassword = confirmPasswordInput.value;\r\n+        \r\n+        if (confirmPassword === '') {\r\n+            passwordMatch.textContent = '';\r\n+            passwordMatch.className = 'password-match';\r\n+        } else if (password === confirmPassword) {\r\n+            passwordMatch.textContent = '✓ Passwords match';\r\n+            passwordMatch.className = 'password-match match';\r\n+        } else {\r\n+            passwordMatch.textContent = '✗ Passwords do not match';\r\n+            passwordMatch.className = 'password-match no-match';\r\n+        }\r\n+    }\r\n+\r\n+    // Check overall form validity\r\n+    function checkFormValidity() {\r\n+        const password = passwordInput.value;\r\n+        const confirmPassword = confirmPasswordInput.value;\r\n+        const strength = checkPasswordStrength(password);\r\n+        \r\n+        const isValid = password.length >= 8 && \r\n+                       confirmPassword === password && \r\n+                       confirmPassword !== '';\r\n+        \r\n+        if (isValid) {\r\n+            changePasswordBtn.disabled = false;\r\n+            changePasswordBtn.classList.add('enabled');\r\n+        } else {\r\n+            changePasswordBtn.disabled = true;\r\n+            changePasswordBtn.classList.remove('enabled');\r\n+        }\r\n+    }\r\n+\r\n+    // Handle form submission\r\n+    passwordForm.addEventListener('submit', function(e) {\r\n         e.preventDefault();\r\n+        \r\n         const password = passwordInput.value;\r\n         const confirmPassword = confirmPasswordInput.value;\r\n-\r\n+        \r\n+        // Final validation\r\n         if (password !== confirmPassword) {\r\n-            alert(\"Passwords do not match!\");\r\n+            showError('Passwords do not match');\r\n             return;\r\n         }\r\n+        \r\n         if (password.length < 8) {\r\n-            alert(\"Password must be at least 8 characters long!\");\r\n+            showError('Password must be at least 8 characters long');\r\n             return;\r\n         }\r\n+        \r\n+        // Simulate password change process\r\n+        changePasswordBtn.textContent = 'Changing Password...';\r\n+        changePasswordBtn.disabled = true;\r\n+        \r\n+        setTimeout(() => {\r\n+            showSuccess('Password changed successfully!');\r\n+            \r\n+            // Clear form\r\n+            passwordInput.value = '';\r\n+            confirmPasswordInput.value = '';\r\n+            passwordStrength.textContent = '';\r\n+            passwordMatch.textContent = '';\r\n+            \r\n+            // Reset button\r\n+            changePasswordBtn.textContent = 'Change Password';\r\n+            changePasswordBtn.disabled = true;\r\n+            changePasswordBtn.classList.remove('enabled');\r\n+            \r\n+            // Redirect to login page after success\r\n+            setTimeout(() => {\r\n+                window.location.href = 'login.html';\r\n+            }, 2000);\r\n+        }, 2000);\r\n+    });\r\n \r\n-        // ✅ Update user password\r\n-        users[userIndex].password = password;\r\n-        localStorage.setItem(\"users\", JSON.stringify(users));\r\n+    // Show error message\r\n+    function showError(message) {\r\n+        showNotification(message, 'error');\r\n+    }\r\n \r\n-        // Cleanup\r\n-        localStorage.removeItem(\"resetEmail\");\r\n+    // Show success message\r\n+    function showSuccess(message) {\r\n+        showNotification(message, 'success');\r\n+    }\r\n \r\n-        alert(\"Password changed successfully!\");\r\n-        window.location.href = \"login.html\";\r\n-    });\r\n+    // Notification system\r\n+    function showNotification(message, type = 'info') {\r\n+        // Remove existing notifications\r\n+        const existingNotifications = document.querySelectorAll('.notification');\r\n+        existingNotifications.forEach(notification => notification.remove());\r\n+\r\n+        // Create notification element\r\n+        const notification = document.createElement('div');\r\n+        notification.className = `notification notification-${type}`;\r\n+        notification.textContent = message;\r\n+        \r\n+        // Style based on type\r\n+        const styles = {\r\n+            position: 'fixed',\r\n+            top: '20px',\r\n+            right: '20px',\r\n+            padding: '1rem 2rem',\r\n+            borderRadius: '8px',\r\n+            color: 'white',\r\n+            fontWeight: '500',\r\n+            zIndex: '1001',\r\n+            animation: 'slideIn 0.3s ease-out',\r\n+            boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n+        };\r\n+        \r\n+        if (type === 'error') {\r\n+            styles.background = '#dc3545';\r\n+        } else if (type === 'success') {\r\n+            styles.background = '#28a745';\r\n+        } else {\r\n+            styles.background = '#17a2b8';\r\n+        }\r\n+        \r\n+        Object.assign(notification.style, styles);\r\n+        \r\n+        // Add animation CSS if not already present\r\n+        if (!document.querySelector('#notification-styles')) {\r\n+            const style = document.createElement('style');\r\n+            style.id = 'notification-styles';\r\n+            style.textContent = `\r\n+                @keyframes slideIn {\r\n+                    from { transform: translateX(100%); opacity: 0; }\r\n+                    to { transform: translateX(0); opacity: 1; }\r\n+                }\r\n+                @keyframes slideOut {\r\n+                    from { transform: translateX(0); opacity: 1; }\r\n+                    to { transform: translateX(100%); opacity: 0; }\r\n+                }\r\n+            `;\r\n+            document.head.appendChild(style);\r\n+        }\r\n+        \r\n+        document.body.appendChild(notification);\r\n+        \r\n+        // Remove notification after 5 seconds\r\n+        setTimeout(() => {\r\n+            notification.style.animation = 'slideOut 0.3s ease-in';\r\n+            setTimeout(() => {\r\n+                if (notification.parentNode) {\r\n+                    notification.parentNode.removeChild(notification);\r\n+                }\r\n+            }, 300);\r\n+        }, 5000);\r\n+    }\r\n });\r\n+\r\n"
                },
                {
                    "date": 1757055335636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,50 +138,66 @@\n         }\r\n     }\r\n \r\n     // Handle form submission\r\n-    passwordForm.addEventListener('submit', function(e) {\r\n-        e.preventDefault();\r\n-        \r\n-        const password = passwordInput.value;\r\n-        const confirmPassword = confirmPasswordInput.value;\r\n-        \r\n-        // Final validation\r\n-        if (password !== confirmPassword) {\r\n-            showError('Passwords do not match');\r\n-            return;\r\n-        }\r\n-        \r\n-        if (password.length < 8) {\r\n-            showError('Password must be at least 8 characters long');\r\n-            return;\r\n-        }\r\n-        \r\n-        // Simulate password change process\r\n-        changePasswordBtn.textContent = 'Changing Password...';\r\n+passwordForm.addEventListener('submit', function(e) {\r\n+    e.preventDefault();\r\n+\r\n+    const password = passwordInput.value;\r\n+    const confirmPassword = confirmPasswordInput.value;\r\n+\r\n+    // Final validation\r\n+    if (password !== confirmPassword) {\r\n+        showError('Passwords do not match');\r\n+        return;\r\n+    }\r\n+\r\n+    if (password.length < 8) {\r\n+        showError('Password must be at least 8 characters long');\r\n+        return;\r\n+    }\r\n+\r\n+    // 🔹 Get email from last OTP verification\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\"));\r\n+    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n+    const userIndex = users.findIndex(u => u.email === emailOTP?.email);\r\n+\r\n+    if (userIndex === -1) {\r\n+        showError(\"User not found. Please restart password reset.\");\r\n+        return;\r\n+    }\r\n+\r\n+    // 🔹 Update password in localStorage\r\n+    users[userIndex].password = password;\r\n+    localStorage.setItem(\"users\", JSON.stringify(users));\r\n+\r\n+    // 🔹 Clear OTP (cannot reuse)\r\n+    localStorage.removeItem(\"emailOTP\");\r\n+\r\n+    // Simulate password change process\r\n+    changePasswordBtn.textContent = 'Changing Password...';\r\n+    changePasswordBtn.disabled = true;\r\n+\r\n+    setTimeout(() => {\r\n+        showSuccess('Password changed successfully!');\r\n+\r\n+        // Clear form\r\n+        passwordInput.value = '';\r\n+        confirmPasswordInput.value = '';\r\n+        passwordStrength.textContent = '';\r\n+        passwordMatch.textContent = '';\r\n+\r\n+        // Reset button\r\n+        changePasswordBtn.textContent = 'Change Password';\r\n         changePasswordBtn.disabled = true;\r\n-        \r\n+        changePasswordBtn.classList.remove('enabled');\r\n+\r\n+        // Redirect to login page after success\r\n         setTimeout(() => {\r\n-            showSuccess('Password changed successfully!');\r\n-            \r\n-            // Clear form\r\n-            passwordInput.value = '';\r\n-            confirmPasswordInput.value = '';\r\n-            passwordStrength.textContent = '';\r\n-            passwordMatch.textContent = '';\r\n-            \r\n-            // Reset button\r\n-            changePasswordBtn.textContent = 'Change Password';\r\n-            changePasswordBtn.disabled = true;\r\n-            changePasswordBtn.classList.remove('enabled');\r\n-            \r\n-            // Redirect to login page after success\r\n-            setTimeout(() => {\r\n-                window.location.href = 'login.html';\r\n-            }, 2000);\r\n+            window.location.href = 'login.html';\r\n         }, 2000);\r\n-    });\r\n-\r\n+    }, 1500);\r\n+});\r\n     // Show error message\r\n     function showError(message) {\r\n         showNotification(message, 'error');\r\n     }\r\n"
                },
                {
                    "date": 1757055517087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // New Password functionality\r\n-document.addEventListener('DOMContentLoaded', function() {\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n     const passwordForm = document.getElementById('passwordForm');\r\n     const passwordInput = document.getElementById('password');\r\n     const confirmPasswordInput = document.getElementById('confirmPassword');\r\n     const changePasswordBtn = document.getElementById('changePasswordBtn');\r\n@@ -9,30 +9,30 @@\n     const passwordStrength = document.getElementById('passwordStrength');\r\n     const passwordMatch = document.getElementById('passwordMatch');\r\n \r\n     // Toggle password visibility\r\n-    togglePassword.addEventListener('click', function() {\r\n+    togglePassword.addEventListener('click', function () {\r\n         const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n         passwordInput.setAttribute('type', type);\r\n         this.innerHTML = type === 'password' ? '<i class=\"fas fa-eye\"></i>' : '<i class=\"fas fa-eye-slash\"></i>';\r\n     });\r\n \r\n-    toggleConfirmPassword.addEventListener('click', function() {\r\n+    toggleConfirmPassword.addEventListener('click', function () {\r\n         const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n         confirmPasswordInput.setAttribute('type', type);\r\n         this.innerHTML = type === 'password' ? '<i class=\"fas fa-eye\"></i>' : '<i class=\"fas fa-eye-slash\"></i>';\r\n     });\r\n \r\n     // Password strength validation\r\n-    passwordInput.addEventListener('input', function() {\r\n+    passwordInput.addEventListener('input', function () {\r\n         const password = this.value;\r\n         const strength = checkPasswordStrength(password);\r\n         updatePasswordStrength(strength);\r\n         checkFormValidity();\r\n     });\r\n \r\n     // Confirm password validation\r\n-    confirmPasswordInput.addEventListener('input', function() {\r\n+    confirmPasswordInput.addEventListener('input', function () {\r\n         checkPasswordMatch();\r\n         checkFormValidity();\r\n     });\r\n \r\n@@ -88,26 +88,26 @@\n     // Update password strength display\r\n     function updatePasswordStrength(strength) {\r\n         passwordStrength.textContent = `Password strength: ${strength.level.charAt(0).toUpperCase() + strength.level.slice(1)}`;\r\n         passwordStrength.className = `password-strength ${strength.level}`;\r\n-        \r\n+\r\n         // Add strength bar if not present\r\n         if (!passwordStrength.querySelector('.password-strength-bar')) {\r\n             const strengthBar = document.createElement('div');\r\n             strengthBar.className = 'password-strength-bar';\r\n             strengthBar.innerHTML = '<div class=\"password-strength-fill\"></div>';\r\n             passwordStrength.appendChild(strengthBar);\r\n         }\r\n-        \r\n+\r\n         const strengthFill = passwordStrength.querySelector('.password-strength-fill');\r\n         strengthFill.className = `password-strength-fill ${strength.level}`;\r\n     }\r\n \r\n     // Check if passwords match\r\n     function checkPasswordMatch() {\r\n         const password = passwordInput.value;\r\n         const confirmPassword = confirmPasswordInput.value;\r\n-        \r\n+\r\n         if (confirmPassword === '') {\r\n             passwordMatch.textContent = '';\r\n             passwordMatch.className = 'password-match';\r\n         } else if (password === confirmPassword) {\r\n@@ -123,13 +123,13 @@\n     function checkFormValidity() {\r\n         const password = passwordInput.value;\r\n         const confirmPassword = confirmPasswordInput.value;\r\n         const strength = checkPasswordStrength(password);\r\n-        \r\n-        const isValid = password.length >= 8 && \r\n-                       confirmPassword === password && \r\n-                       confirmPassword !== '';\r\n-        \r\n+\r\n+        const isValid = password.length >= 8 &&\r\n+            confirmPassword === password &&\r\n+            confirmPassword !== '';\r\n+\r\n         if (isValid) {\r\n             changePasswordBtn.disabled = false;\r\n             changePasswordBtn.classList.add('enabled');\r\n         } else {\r\n@@ -138,66 +138,67 @@\n         }\r\n     }\r\n \r\n     // Handle form submission\r\n-passwordForm.addEventListener('submit', function(e) {\r\n-    e.preventDefault();\r\n+    passwordForm.addEventListener('submit', function (e) {\r\n+        e.preventDefault();\r\n \r\n-    const password = passwordInput.value;\r\n-    const confirmPassword = confirmPasswordInput.value;\r\n+        const password = passwordInput.value;\r\n+        const confirmPassword = confirmPasswordInput.value;\r\n \r\n-    // Final validation\r\n-    if (password !== confirmPassword) {\r\n-        showError('Passwords do not match');\r\n-        return;\r\n-    }\r\n+        // Final validation\r\n+        if (password !== confirmPassword) {\r\n+            showError('Passwords do not match');\r\n+            return;\r\n+        }\r\n \r\n-    if (password.length < 8) {\r\n-        showError('Password must be at least 8 characters long');\r\n-        return;\r\n-    }\r\n+        if (password.length < 8) {\r\n+            showError('Password must be at least 8 characters long');\r\n+            return;\r\n+        }\r\n \r\n-    // 🔹 Get email from last OTP verification\r\n-    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\"));\r\n-    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-    const userIndex = users.findIndex(u => u.email === emailOTP?.email);\r\n+        // 🔹 Get email from last OTP verification\r\n+        const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\"));\r\n+        const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n+        const userIndex = users.findIndex(u => u.email === emailOTP?.email);\r\n \r\n-    if (userIndex === -1) {\r\n-        showError(\"User not found. Please restart password reset.\");\r\n-        return;\r\n-    }\r\n+        if (userIndex === -1) {\r\n+            showError(\"User not found. Please restart password reset.\");\r\n+            return;\r\n+        }\r\n \r\n-    // 🔹 Update password in localStorage\r\n-    users[userIndex].password = password;\r\n-    localStorage.setItem(\"users\", JSON.stringify(users));\r\n+        // 🔹 Update password in localStorage\r\n+        users[userIndex].password = password;\r\n+        localStorage.setItem(\"users\", JSON.stringify(users));\r\n \r\n-    // 🔹 Clear OTP (cannot reuse)\r\n-    localStorage.removeItem(\"emailOTP\");\r\n+        // 🔹 Clear OTP (cannot reuse)\r\n+        localStorage.removeItem(\"emailOTP\");\r\n \r\n-    // Simulate password change process\r\n-    changePasswordBtn.textContent = 'Changing Password...';\r\n-    changePasswordBtn.disabled = true;\r\n+        // Simulate password change process\r\n+        changePasswordBtn.textContent = 'Changing Password...';\r\n+        changePasswordBtn.disabled = true;\r\n \r\n-    setTimeout(() => {\r\n-        showSuccess('Password changed successfully!');\r\n+        setTimeout(() => {\r\n+            showSuccess('Password changed successfully!');\r\n \r\n-        // Clear form\r\n-        passwordInput.value = '';\r\n-        confirmPasswordInput.value = '';\r\n-        passwordStrength.textContent = '';\r\n-        passwordMatch.textContent = '';\r\n+            // Clear form\r\n+            passwordInput.value = '';\r\n+            confirmPasswordInput.value = '';\r\n+            passwordStrength.textContent = '';\r\n+            passwordMatch.textContent = '';\r\n \r\n-        // Reset button\r\n-        changePasswordBtn.textContent = 'Change Password';\r\n-        changePasswordBtn.disabled = true;\r\n-        changePasswordBtn.classList.remove('enabled');\r\n+            // Reset button\r\n+            changePasswordBtn.textContent = 'Change Password';\r\n+            changePasswordBtn.disabled = true;\r\n+            changePasswordBtn.classList.remove('enabled');\r\n \r\n-        // Redirect to login page after success\r\n-        setTimeout(() => {\r\n-            window.location.href = 'login.html';\r\n-        }, 2000);\r\n-    }, 1500);\r\n-});\r\n+            // Redirect to login page after success\r\n+                    localStorage.removeItem(\"emailOTP\");\r\n+            setTimeout(() => {\r\n+                window.location.href = 'login.html';\r\n+            }, 2000);\r\n+        }, 1500);\r\n+    });\r\n     // Show error message\r\n     function showError(message) {\r\n         showNotification(message, 'error');\r\n     }\r\n@@ -216,9 +217,9 @@\n         // Create notification element\r\n         const notification = document.createElement('div');\r\n         notification.className = `notification notification-${type}`;\r\n         notification.textContent = message;\r\n-        \r\n+\r\n         // Style based on type\r\n         const styles = {\r\n             position: 'fixed',\r\n             top: '20px',\r\n@@ -230,19 +231,19 @@\n             zIndex: '1001',\r\n             animation: 'slideIn 0.3s ease-out',\r\n             boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n         };\r\n-        \r\n+\r\n         if (type === 'error') {\r\n             styles.background = '#dc3545';\r\n         } else if (type === 'success') {\r\n             styles.background = '#28a745';\r\n         } else {\r\n             styles.background = '#17a2b8';\r\n         }\r\n-        \r\n+\r\n         Object.assign(notification.style, styles);\r\n-        \r\n+\r\n         // Add animation CSS if not already present\r\n         if (!document.querySelector('#notification-styles')) {\r\n             const style = document.createElement('style');\r\n             style.id = 'notification-styles';\r\n@@ -257,11 +258,11 @@\n                 }\r\n             `;\r\n             document.head.appendChild(style);\r\n         }\r\n-        \r\n+\r\n         document.body.appendChild(notification);\r\n-        \r\n+\r\n         // Remove notification after 5 seconds\r\n         setTimeout(() => {\r\n             notification.style.animation = 'slideOut 0.3s ease-in';\r\n             setTimeout(() => {\r\n"
                },
                {
                    "date": 1757055528091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -191,9 +191,9 @@\n             changePasswordBtn.disabled = true;\r\n             changePasswordBtn.classList.remove('enabled');\r\n \r\n             // Redirect to login page after success\r\n-                    localStorage.removeItem(\"emailOTP\");\r\n+            localStorage.removeItem(\"emailOTP\");\r\n             setTimeout(() => {\r\n                 window.location.href = 'login.html';\r\n             }, 2000);\r\n         }, 1500);\r\n"
                },
                {
                    "date": 1757252508072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,67 +138,91 @@\n         }\r\n     }\r\n \r\n     // Handle form submission\r\n-    passwordForm.addEventListener('submit', function (e) {\r\n-        e.preventDefault();\r\n+passwordForm.addEventListener('submit', async function (e) {\r\n+    e.preventDefault();\r\n \r\n-        const password = passwordInput.value;\r\n-        const confirmPassword = confirmPasswordInput.value;\r\n+    const password = passwordInput.value;\r\n+    const confirmPassword = confirmPasswordInput.value;\r\n \r\n-        // Final validation\r\n-        if (password !== confirmPassword) {\r\n-            showError('Passwords do not match');\r\n-            return;\r\n-        }\r\n+    // Final validation\r\n+    if (password !== confirmPassword) {\r\n+        showError('Passwords do not match');\r\n+        return;\r\n+    }\r\n \r\n-        if (password.length < 8) {\r\n-            showError('Password must be at least 8 characters long');\r\n-            return;\r\n-        }\r\n+    if (password.length < 8) {\r\n+        showError('Password must be at least 8 characters long');\r\n+        return;\r\n+    }\r\n \r\n-        // 🔹 Get email from last OTP verification\r\n-        const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\"));\r\n-        const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-        const userIndex = users.findIndex(u => u.email === emailOTP?.email);\r\n+    // 🔹 Get email from last OTP verification\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\"));\r\n+    if (!emailOTP?.email) {\r\n+        showError(\"OTP verification not found. Please restart password reset.\");\r\n+        return;\r\n+    }\r\n \r\n-        if (userIndex === -1) {\r\n-            showError(\"User not found. Please restart password reset.\");\r\n+    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n+    const userIndex = users.findIndex(u => u.email === emailOTP.email);\r\n+\r\n+    if (userIndex === -1) {\r\n+        showError(\"User not found. Please restart password reset.\");\r\n+        return;\r\n+    }\r\n+\r\n+    // 🔹 Update password in localStorage\r\n+    users[userIndex].password = password;\r\n+    localStorage.setItem(\"users\", JSON.stringify(users));\r\n+\r\n+    // 🔹 Update password in DBCRUD via backend\r\n+    try {\r\n+        const response = await fetch('http://127.0.0.1:5000/update-password', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify({ email: emailOTP.email, password: password })\r\n+        });\r\n+\r\n+        const result = await response.json();\r\n+        if (!response.ok) {\r\n+            showError(result.message || 'Failed to update password in database.');\r\n             return;\r\n         }\r\n+    } catch (err) {\r\n+        console.error(err);\r\n+        showError('Error connecting to server. Please try again later.');\r\n+        return;\r\n+    }\r\n \r\n-        // 🔹 Update password in localStorage\r\n-        users[userIndex].password = password;\r\n-        localStorage.setItem(\"users\", JSON.stringify(users));\r\n+    // 🔹 Clear OTP (cannot reuse)\r\n+    localStorage.removeItem(\"emailOTP\");\r\n \r\n-        // 🔹 Clear OTP (cannot reuse)\r\n-        localStorage.removeItem(\"emailOTP\");\r\n+    // Simulate password change process\r\n+    changePasswordBtn.textContent = 'Changing Password...';\r\n+    changePasswordBtn.disabled = true;\r\n \r\n-        // Simulate password change process\r\n-        changePasswordBtn.textContent = 'Changing Password...';\r\n+    setTimeout(() => {\r\n+        showSuccess('Password changed successfully!');\r\n+\r\n+        // Clear form\r\n+        passwordInput.value = '';\r\n+        confirmPasswordInput.value = '';\r\n+        passwordStrength.textContent = '';\r\n+        passwordMatch.textContent = '';\r\n+\r\n+        // Reset button\r\n+        changePasswordBtn.textContent = 'Change Password';\r\n         changePasswordBtn.disabled = true;\r\n+        changePasswordBtn.classList.remove('enabled');\r\n \r\n+        // Redirect to login page after success\r\n         setTimeout(() => {\r\n-            showSuccess('Password changed successfully!');\r\n+            window.location.href = 'login.html';\r\n+        }, 2000);\r\n+    }, 1500);\r\n+});\r\n \r\n-            // Clear form\r\n-            passwordInput.value = '';\r\n-            confirmPasswordInput.value = '';\r\n-            passwordStrength.textContent = '';\r\n-            passwordMatch.textContent = '';\r\n-\r\n-            // Reset button\r\n-            changePasswordBtn.textContent = 'Change Password';\r\n-            changePasswordBtn.disabled = true;\r\n-            changePasswordBtn.classList.remove('enabled');\r\n-\r\n-            // Redirect to login page after success\r\n-            localStorage.removeItem(\"emailOTP\");\r\n-            setTimeout(() => {\r\n-                window.location.href = 'login.html';\r\n-            }, 2000);\r\n-        }, 1500);\r\n-    });\r\n     // Show error message\r\n     function showError(message) {\r\n         showNotification(message, 'error');\r\n     }\r\n"
                },
                {
                    "date": 1758622230447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,18 +8,28 @@\n     const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');\r\n     const passwordStrength = document.getElementById('passwordStrength');\r\n     const passwordMatch = document.getElementById('passwordMatch');\r\n \r\n+    // ✅ Email saved during OTP verification (still needed for context)\r\n+    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\"));\r\n+\r\n+    // If no email in OTP, block page\r\n+    if (!emailOTP?.email) {\r\n+        showError(\"No verification found. Please restart password reset.\");\r\n+        setTimeout(() => window.location.href = \"forgot.html\", 2000);\r\n+        return;\r\n+    }\r\n+\r\n     // Toggle password visibility\r\n     togglePassword.addEventListener('click', function () {\r\n-        const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n-        passwordInput.setAttribute('type', type);\r\n+        const type = passwordInput.type === 'password' ? 'text' : 'password';\r\n+        passwordInput.type = type;\r\n         this.innerHTML = type === 'password' ? '<i class=\"fas fa-eye\"></i>' : '<i class=\"fas fa-eye-slash\"></i>';\r\n     });\r\n \r\n     toggleConfirmPassword.addEventListener('click', function () {\r\n-        const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n-        confirmPasswordInput.setAttribute('type', type);\r\n+        const type = confirmPasswordInput.type === 'password' ? 'text' : 'password';\r\n+        confirmPasswordInput.type = type;\r\n         this.innerHTML = type === 'password' ? '<i class=\"fas fa-eye\"></i>' : '<i class=\"fas fa-eye-slash\"></i>';\r\n     });\r\n \r\n     // Password strength validation\r\n@@ -29,88 +39,38 @@\n         updatePasswordStrength(strength);\r\n         checkFormValidity();\r\n     });\r\n \r\n-    // Confirm password validation\r\n     confirmPasswordInput.addEventListener('input', function () {\r\n         checkPasswordMatch();\r\n         checkFormValidity();\r\n     });\r\n \r\n     // Check password strength\r\n     function checkPasswordStrength(password) {\r\n         let score = 0;\r\n-        let feedback = [];\r\n+        if (password.length >= 8) score++;\r\n+        if (/[a-z]/.test(password)) score++;\r\n+        if (/[A-Z]/.test(password)) score++;\r\n+        if (/\\d/.test(password)) score++;\r\n+        if (/[!@#$%^&*(),.?\":{}|<>]/.test(password)) score++;\r\n \r\n-        // Length check\r\n-        if (password.length >= 8) {\r\n-            score += 1;\r\n-        } else {\r\n-            feedback.push('At least 8 characters');\r\n-        }\r\n-\r\n-        // Contains lowercase\r\n-        if (/[a-z]/.test(password)) {\r\n-            score += 1;\r\n-        } else {\r\n-            feedback.push('Lowercase letter');\r\n-        }\r\n-\r\n-        // Contains uppercase\r\n-        if (/[A-Z]/.test(password)) {\r\n-            score += 1;\r\n-        } else {\r\n-            feedback.push('Uppercase letter');\r\n-        }\r\n-\r\n-        // Contains number\r\n-        if (/\\d/.test(password)) {\r\n-            score += 1;\r\n-        } else {\r\n-            feedback.push('Number');\r\n-        }\r\n-\r\n-        // Contains special character\r\n-        if (/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n-            score += 1;\r\n-        } else {\r\n-            feedback.push('Special character');\r\n-        }\r\n-\r\n-        if (score <= 2) {\r\n-            return { level: 'weak', score, feedback };\r\n-        } else if (score <= 4) {\r\n-            return { level: 'medium', score, feedback };\r\n-        } else {\r\n-            return { level: 'strong', score, feedback };\r\n-        }\r\n+        if (score <= 2) return { level: 'weak' };\r\n+        if (score <= 4) return { level: 'medium' };\r\n+        return { level: 'strong' };\r\n     }\r\n \r\n-    // Update password strength display\r\n     function updatePasswordStrength(strength) {\r\n-        passwordStrength.textContent = `Password strength: ${strength.level.charAt(0).toUpperCase() + strength.level.slice(1)}`;\r\n+        passwordStrength.textContent = `Password strength: ${strength.level}`;\r\n         passwordStrength.className = `password-strength ${strength.level}`;\r\n-\r\n-        // Add strength bar if not present\r\n-        if (!passwordStrength.querySelector('.password-strength-bar')) {\r\n-            const strengthBar = document.createElement('div');\r\n-            strengthBar.className = 'password-strength-bar';\r\n-            strengthBar.innerHTML = '<div class=\"password-strength-fill\"></div>';\r\n-            passwordStrength.appendChild(strengthBar);\r\n-        }\r\n-\r\n-        const strengthFill = passwordStrength.querySelector('.password-strength-fill');\r\n-        strengthFill.className = `password-strength-fill ${strength.level}`;\r\n     }\r\n \r\n-    // Check if passwords match\r\n     function checkPasswordMatch() {\r\n         const password = passwordInput.value;\r\n         const confirmPassword = confirmPasswordInput.value;\r\n \r\n         if (confirmPassword === '') {\r\n             passwordMatch.textContent = '';\r\n-            passwordMatch.className = 'password-match';\r\n         } else if (password === confirmPassword) {\r\n             passwordMatch.textContent = '✓ Passwords match';\r\n             passwordMatch.className = 'password-match match';\r\n         } else {\r\n@@ -118,183 +78,67 @@\n             passwordMatch.className = 'password-match no-match';\r\n         }\r\n     }\r\n \r\n-    // Check overall form validity\r\n     function checkFormValidity() {\r\n         const password = passwordInput.value;\r\n         const confirmPassword = confirmPasswordInput.value;\r\n-        const strength = checkPasswordStrength(password);\r\n+        const isValid = password.length >= 8 && password === confirmPassword;\r\n \r\n-        const isValid = password.length >= 8 &&\r\n-            confirmPassword === password &&\r\n-            confirmPassword !== '';\r\n-\r\n-        if (isValid) {\r\n-            changePasswordBtn.disabled = false;\r\n-            changePasswordBtn.classList.add('enabled');\r\n-        } else {\r\n-            changePasswordBtn.disabled = true;\r\n-            changePasswordBtn.classList.remove('enabled');\r\n-        }\r\n+        changePasswordBtn.disabled = !isValid;\r\n+        changePasswordBtn.classList.toggle('enabled', isValid);\r\n     }\r\n \r\n-    // Handle form submission\r\n-passwordForm.addEventListener('submit', async function (e) {\r\n-    e.preventDefault();\r\n+    // ✅ Handle form submission (update password in DB only)\r\n+    passwordForm.addEventListener('submit', async function (e) {\r\n+        e.preventDefault();\r\n \r\n-    const password = passwordInput.value;\r\n-    const confirmPassword = confirmPasswordInput.value;\r\n+        const password = passwordInput.value;\r\n+        const confirmPassword = confirmPasswordInput.value;\r\n \r\n-    // Final validation\r\n-    if (password !== confirmPassword) {\r\n-        showError('Passwords do not match');\r\n-        return;\r\n-    }\r\n-\r\n-    if (password.length < 8) {\r\n-        showError('Password must be at least 8 characters long');\r\n-        return;\r\n-    }\r\n-\r\n-    // 🔹 Get email from last OTP verification\r\n-    const emailOTP = JSON.parse(localStorage.getItem(\"emailOTP\"));\r\n-    if (!emailOTP?.email) {\r\n-        showError(\"OTP verification not found. Please restart password reset.\");\r\n-        return;\r\n-    }\r\n-\r\n-    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n-    const userIndex = users.findIndex(u => u.email === emailOTP.email);\r\n-\r\n-    if (userIndex === -1) {\r\n-        showError(\"User not found. Please restart password reset.\");\r\n-        return;\r\n-    }\r\n-\r\n-    // 🔹 Update password in localStorage\r\n-    users[userIndex].password = password;\r\n-    localStorage.setItem(\"users\", JSON.stringify(users));\r\n-\r\n-    // 🔹 Update password in DBCRUD via backend\r\n-    try {\r\n-        const response = await fetch('http://127.0.0.1:5000/update-password', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify({ email: emailOTP.email, password: password })\r\n-        });\r\n-\r\n-        const result = await response.json();\r\n-        if (!response.ok) {\r\n-            showError(result.message || 'Failed to update password in database.');\r\n+        if (password !== confirmPassword) {\r\n+            showError('Passwords do not match');\r\n             return;\r\n         }\r\n-    } catch (err) {\r\n-        console.error(err);\r\n-        showError('Error connecting to server. Please try again later.');\r\n-        return;\r\n-    }\r\n \r\n-    // 🔹 Clear OTP (cannot reuse)\r\n-    localStorage.removeItem(\"emailOTP\");\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/update-password', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({\r\n+                    email: emailOTP.email,   // comes from OTP process\r\n+                    password: password       // send to backend\r\n+                })\r\n+            });\r\n \r\n-    // Simulate password change process\r\n-    changePasswordBtn.textContent = 'Changing Password...';\r\n-    changePasswordBtn.disabled = true;\r\n+            const result = await response.json();\r\n \r\n-    setTimeout(() => {\r\n-        showSuccess('Password changed successfully!');\r\n+            if (!result.success) {\r\n+                showError(result.message || 'Failed to update password in database.');\r\n+                return;\r\n+            }\r\n \r\n-        // Clear form\r\n-        passwordInput.value = '';\r\n-        confirmPasswordInput.value = '';\r\n-        passwordStrength.textContent = '';\r\n-        passwordMatch.textContent = '';\r\n+            // ✅ Password changed successfully\r\n+            showSuccess('Password changed successfully!');\r\n+            localStorage.removeItem(\"emailOTP\"); // clear OTP, cannot reuse\r\n \r\n-        // Reset button\r\n-        changePasswordBtn.textContent = 'Change Password';\r\n-        changePasswordBtn.disabled = true;\r\n-        changePasswordBtn.classList.remove('enabled');\r\n+            setTimeout(() => {\r\n+                window.location.href = 'login.html';\r\n+            }, 2000);\r\n \r\n-        // Redirect to login page after success\r\n-        setTimeout(() => {\r\n-            window.location.href = 'login.html';\r\n-        }, 2000);\r\n-    }, 1500);\r\n-});\r\n+        } catch (err) {\r\n+            console.error(err);\r\n+            showError('Error connecting to server. Please try again later.');\r\n+        }\r\n+    });\r\n \r\n-    // Show error message\r\n-    function showError(message) {\r\n-        showNotification(message, 'error');\r\n-    }\r\n-\r\n-    // Show success message\r\n-    function showSuccess(message) {\r\n-        showNotification(message, 'success');\r\n-    }\r\n-\r\n-    // Notification system\r\n+    // Notifications\r\n+    function showError(msg) { showNotification(msg, \"error\"); }\r\n+    function showSuccess(msg) { showNotification(msg, \"success\"); }\r\n     function showNotification(message, type = 'info') {\r\n-        // Remove existing notifications\r\n-        const existingNotifications = document.querySelectorAll('.notification');\r\n-        existingNotifications.forEach(notification => notification.remove());\r\n-\r\n-        // Create notification element\r\n         const notification = document.createElement('div');\r\n         notification.className = `notification notification-${type}`;\r\n         notification.textContent = message;\r\n-\r\n-        // Style based on type\r\n-        const styles = {\r\n-            position: 'fixed',\r\n-            top: '20px',\r\n-            right: '20px',\r\n-            padding: '1rem 2rem',\r\n-            borderRadius: '8px',\r\n-            color: 'white',\r\n-            fontWeight: '500',\r\n-            zIndex: '1001',\r\n-            animation: 'slideIn 0.3s ease-out',\r\n-            boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n-        };\r\n-\r\n-        if (type === 'error') {\r\n-            styles.background = '#dc3545';\r\n-        } else if (type === 'success') {\r\n-            styles.background = '#28a745';\r\n-        } else {\r\n-            styles.background = '#17a2b8';\r\n-        }\r\n-\r\n-        Object.assign(notification.style, styles);\r\n-\r\n-        // Add animation CSS if not already present\r\n-        if (!document.querySelector('#notification-styles')) {\r\n-            const style = document.createElement('style');\r\n-            style.id = 'notification-styles';\r\n-            style.textContent = `\r\n-                @keyframes slideIn {\r\n-                    from { transform: translateX(100%); opacity: 0; }\r\n-                    to { transform: translateX(0); opacity: 1; }\r\n-                }\r\n-                @keyframes slideOut {\r\n-                    from { transform: translateX(0); opacity: 1; }\r\n-                    to { transform: translateX(100%); opacity: 0; }\r\n-                }\r\n-            `;\r\n-            document.head.appendChild(style);\r\n-        }\r\n-\r\n         document.body.appendChild(notification);\r\n-\r\n-        // Remove notification after 5 seconds\r\n-        setTimeout(() => {\r\n-            notification.style.animation = 'slideOut 0.3s ease-in';\r\n-            setTimeout(() => {\r\n-                if (notification.parentNode) {\r\n-                    notification.parentNode.removeChild(notification);\r\n-                }\r\n-            }, 300);\r\n-        }, 5000);\r\n+        setTimeout(() => notification.remove(), 3000);\r\n     }\r\n });\r\n-\r\n"
                }
            ],
            "date": 1757054814611,
            "name": "Commit-0",
            "content": "document.addEventListener('DOMContentLoaded', function () {\r\n    const passwordForm = document.getElementById('passwordForm');\r\n    const passwordInput = document.getElementById('password');\r\n    const confirmPasswordInput = document.getElementById('confirmPassword');\r\n    const changePasswordBtn = document.getElementById('changePasswordBtn');\r\n\r\n    // ✅ Get which email is resetting\r\n    const resetEmail = localStorage.getItem(\"resetEmail\");\r\n    const users = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\n    const userIndex = users.findIndex(u => u.email === resetEmail);\r\n    if (userIndex === -1) {\r\n        alert(\"No user found for this reset session.\");\r\n        window.location.href = \"login.html\";\r\n        return;\r\n    }\r\n\r\n    passwordForm.addEventListener('submit', function (e) {\r\n        e.preventDefault();\r\n        const password = passwordInput.value;\r\n        const confirmPassword = confirmPasswordInput.value;\r\n\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords do not match!\");\r\n            return;\r\n        }\r\n        if (password.length < 8) {\r\n            alert(\"Password must be at least 8 characters long!\");\r\n            return;\r\n        }\r\n\r\n        // ✅ Update user password\r\n        users[userIndex].password = password;\r\n        localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n        // Cleanup\r\n        localStorage.removeItem(\"resetEmail\");\r\n\r\n        alert(\"Password changed successfully!\");\r\n        window.location.href = \"login.html\";\r\n    });\r\n});\r\n"
        }
    ]
}
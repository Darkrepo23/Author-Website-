{
    "sourceFile": "js/login.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1756827466317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756827499214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,9 +39,9 @@\n         \r\n         // Simulate API call delay\r\n         setTimeout(() => {\r\n             // For demo purposes, accept any valid email/password combination\r\n-          // Inside your successful login block:\r\n+         // Inside your successful login block:\r\n if (email && password) {\r\n     // Save email if remember me is checked\r\n     if (remember) {\r\n         localStorage.setItem('rememberEmail', email);\r\n@@ -64,10 +64,8 @@\n \r\n     setTimeout(() => {\r\n         window.location.href = '../../index.html';\r\n     }, 1500);\r\n-}\r\n-\r\n             } else {\r\n                 showError('Invalid credentials. Please try again.');\r\n             }\r\n         }, 2000);\r\n"
                },
                {
                    "date": 1756833555667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n // Login functionality\r\n-document.addEventListener('DOMContentLoaded', function() {\r\n+document.addEventListener('DOMContentLoaded', function () {\r\n     const loginForm = document.getElementById('loginForm');\r\n     const emailInput = document.getElementById('email');\r\n     const passwordInput = document.getElementById('password');\r\n     const rememberCheckbox = document.getElementById('remember');\r\n@@ -10,11 +10,11 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', function(e) {\r\n+    loginForm.addEventListener('submit', function (e) {\r\n         e.preventDefault();\r\n-        \r\n+\r\n         const email = emailInput.value.trim();\r\n         const password = passwordInput.value.trim();\r\n         const remember = rememberCheckbox.checked;\r\n \r\n@@ -33,73 +33,63 @@\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-        // Simulate login process\r\n-        showSuccess('Signing in...');\r\n-        \r\n-        // Simulate API call delay\r\n-        setTimeout(() => {\r\n-            // For demo purposes, accept any valid email/password combination\r\n-         // Inside your successful login block:\r\n-if (email && password) {\r\n-    // Save email if remember me is checked\r\n-    if (remember) {\r\n-        localStorage.setItem('rememberEmail', email);\r\n-    } else {\r\n-        localStorage.removeItem('rememberEmail');\r\n-    }\r\n+        // ✅ Check credentials against users array in localStorage\r\n+        const users = JSON.parse(localStorage.getItem('users')) || [];\r\n+        const foundUser = users.find(u => u.email === email && u.password === password);\r\n \r\n-    // Store login state\r\n-    localStorage.setItem('isLoggedIn', 'true');\r\n-    localStorage.setItem('userEmail', email);\r\n+        if (!foundUser) {\r\n+            showError('Invalid email or password');\r\n+            return;\r\n+        }\r\n \r\n-    // ✅ Save current user object (you can also store other info like cart)\r\n-    const currentUser = {\r\n-        email: email,\r\n-        // cart: [], // optional, if you want to store cart here\r\n-    };\r\n-    localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n+        // Save email if remember me is checked\r\n+        if (remember) {\r\n+            localStorage.setItem('rememberEmail', email);\r\n+        } else {\r\n+            localStorage.removeItem('rememberEmail');\r\n+        }\r\n \r\n-    showSuccess('Login successful! Redirecting...');\r\n+        // Store login state\r\n+        localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-    setTimeout(() => {\r\n-        window.location.href = '../../index.html';\r\n-    }, 1500);\r\n-            } else {\r\n-                showError('Invalid credentials. Please try again.');\r\n-            }\r\n-        }, 2000);\r\n+        // ✅ Save current user (keep same structure everywhere)\r\n+        const currentUser = {\r\n+            email: foundUser.email,\r\n+        };\r\n+        localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n+\r\n+        showSuccess('Login successful! Redirecting...');\r\n+\r\n+        setTimeout(() => {\r\n+            window.location.href = '../../index.html';\r\n+        }, 1500);\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n     }\r\n \r\n-    // Show error message\r\n     function showError(message) {\r\n         showNotification(message, 'error');\r\n     }\r\n \r\n-    // Show success message\r\n     function showSuccess(message) {\r\n         showNotification(message, 'success');\r\n     }\r\n \r\n     // Notification system\r\n     function showNotification(message, type = 'info') {\r\n-        // Remove existing notifications\r\n         const existingNotifications = document.querySelectorAll('.notification');\r\n         existingNotifications.forEach(notification => notification.remove());\r\n \r\n-        // Create notification element\r\n         const notification = document.createElement('div');\r\n         notification.className = `notification notification-${type}`;\r\n         notification.textContent = message;\r\n-        \r\n-        // Style based on type\r\n+\r\n         const styles = {\r\n             position: 'fixed',\r\n             top: '20px',\r\n             right: '20px',\r\n@@ -121,9 +111,8 @@\n         }\r\n \r\n         Object.assign(notification.style, styles);\r\n \r\n-        // Add animation CSS if not already present\r\n         if (!document.querySelector('#notification-styles')) {\r\n             const style = document.createElement('style');\r\n             style.id = 'notification-styles';\r\n             style.textContent = `\r\n@@ -140,9 +129,8 @@\n         }\r\n \r\n         document.body.appendChild(notification);\r\n \r\n-        // Remove notification after 5 seconds\r\n         setTimeout(() => {\r\n             notification.style.animation = 'slideOut 0.3s ease-in';\r\n             setTimeout(() => {\r\n                 if (notification.parentNode) {\r\n@@ -151,19 +139,18 @@\n             }, 300);\r\n         }, 5000);\r\n     }\r\n \r\n-    // Add input focus effects\r\n+    // Input focus effects\r\n     const inputs = document.querySelectorAll('input');\r\n     inputs.forEach(input => {\r\n-        input.addEventListener('focus', function() {\r\n+        input.addEventListener('focus', function () {\r\n             this.parentElement.classList.add('focused');\r\n         });\r\n \r\n-        input.addEventListener('blur', function() {\r\n+        input.addEventListener('blur', function () {\r\n             if (!this.value) {\r\n                 this.parentElement.classList.remove('focused');\r\n             }\r\n         });\r\n     });\r\n });\r\n-\r\n"
                },
                {
                    "date": 1756833600546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \r\n         showSuccess('Login successful! Redirecting...');\r\n \r\n         setTimeout(() => {\r\n-            window.location.href = '../../index.html';\r\n+            window.location.href = '../../browse.html';\r\n         }, 1500);\r\n     });\r\n \r\n     // Email validation function\r\n"
                },
                {
                    "date": 1756833611424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \r\n         showSuccess('Login successful! Redirecting...');\r\n \r\n         setTimeout(() => {\r\n-            window.location.href = '../../browse.html';\r\n+            window.location.href = '../../browse-book.html';\r\n         }, 1500);\r\n     });\r\n \r\n     // Email validation function\r\n"
                },
                {
                    "date": 1756833785679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-        // ✅ Check credentials against users array in localStorage\r\n+        // ✅ Check against users in localStorage\r\n         const users = JSON.parse(localStorage.getItem('users')) || [];\r\n         const foundUser = users.find(u => u.email === email && u.password === password);\r\n \r\n         if (!foundUser) {\r\n@@ -49,21 +49,18 @@\n         } else {\r\n             localStorage.removeItem('rememberEmail');\r\n         }\r\n \r\n-        // Store login state\r\n+        // ✅ Store current user (only the email, consistent everywhere)\r\n+        localStorage.setItem('currentUser', JSON.stringify({ email: foundUser.email }));\r\n+\r\n+        // Store login state if you want to check it elsewhere\r\n         localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-        // ✅ Save current user (keep same structure everywhere)\r\n-        const currentUser = {\r\n-            email: foundUser.email,\r\n-        };\r\n-        localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n-\r\n         showSuccess('Login successful! Redirecting...');\r\n \r\n         setTimeout(() => {\r\n-            window.location.href = '../../browse-book.html';\r\n+            window.location.href = '../../browse-book.html'; // redirect after login\r\n         }, 1500);\r\n     });\r\n \r\n     // Email validation function\r\n"
                },
                {
                    "date": 1757048342015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,8 +136,25 @@\n             }, 300);\r\n         }, 5000);\r\n     }\r\n \r\n+    const forgotLink = document.getElementById(\"forgotLink\");\r\n+const emailInput = document.getElementById(\"email\");\r\n+\r\n+forgotLink.addEventListener(\"click\", function (e) {\r\n+    const email = emailInput.value.trim();\r\n+\r\n+    if (!email) {\r\n+        e.preventDefault(); // stop redirect\r\n+        alert(\"Please enter your email before proceeding to forgot password.\");\r\n+        return;\r\n+    }\r\n+\r\n+    // Save email to localStorage\r\n+    localStorage.setItem(\"emailOTP\", email);\r\n+});\r\n+\r\n+\r\n     // Input focus effects\r\n     const inputs = document.querySelectorAll('input');\r\n     inputs.forEach(input => {\r\n         input.addEventListener('focus', function () {\r\n"
                },
                {
                    "date": 1757048348007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,22 +137,21 @@\n         }, 5000);\r\n     }\r\n \r\n     const forgotLink = document.getElementById(\"forgotLink\");\r\n-const emailInput = document.getElementById(\"email\");\r\n \r\n-forgotLink.addEventListener(\"click\", function (e) {\r\n-    const email = emailInput.value.trim();\r\n+    forgotLink.addEventListener(\"click\", function (e) {\r\n+        const email = emailInput.value.trim();\r\n \r\n-    if (!email) {\r\n-        e.preventDefault(); // stop redirect\r\n-        alert(\"Please enter your email before proceeding to forgot password.\");\r\n-        return;\r\n-    }\r\n+        if (!email) {\r\n+            e.preventDefault(); // stop redirect\r\n+            alert(\"Please enter your email before proceeding to forgot password.\");\r\n+            return;\r\n+        }\r\n \r\n-    // Save email to localStorage\r\n-    localStorage.setItem(\"emailOTP\", email);\r\n-});\r\n+        // Save email to localStorage\r\n+        localStorage.setItem(\"emailOTP\", email);\r\n+    });\r\n \r\n \r\n     // Input focus effects\r\n     const inputs = document.querySelectorAll('input');\r\n"
                },
                {
                    "date": 1757238616677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', function (e) {\r\n+    loginForm.addEventListener('submit', async function (e) {\r\n         e.preventDefault();\r\n \r\n         const email = emailInput.value.trim();\r\n         const password = passwordInput.value.trim();\r\n@@ -22,46 +22,53 @@\n         if (!email || !password) {\r\n             showError('Please fill in all fields');\r\n             return;\r\n         }\r\n-\r\n         if (!isValidEmail(email)) {\r\n             showError('Please enter a valid email address');\r\n             return;\r\n         }\r\n-\r\n         if (password.length < 6) {\r\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-        // ✅ Check against users in localStorage\r\n-        const users = JSON.parse(localStorage.getItem('users')) || [];\r\n-        const foundUser = users.find(u => u.email === email && u.password === password);\r\n+        try {\r\n+            // ✅ Call Flask backend for login\r\n+            const response = await fetch(\"http://127.0.0.1:5000/login\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-        if (!foundUser) {\r\n-            showError('Invalid email or password');\r\n-            return;\r\n-        }\r\n+            if (!response.ok) {\r\n+                showError(\"Invalid email or password\");\r\n+                return;\r\n+            }\r\n \r\n-        // Save email if remember me is checked\r\n-        if (remember) {\r\n-            localStorage.setItem('rememberEmail', email);\r\n-        } else {\r\n-            localStorage.removeItem('rememberEmail');\r\n-        }\r\n+            const user = await response.json();\r\n \r\n-        // ✅ Store current user (only the email, consistent everywhere)\r\n-        localStorage.setItem('currentUser', JSON.stringify({ email: foundUser.email }));\r\n+            // Save email if remember me is checked\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n \r\n-        // Store login state if you want to check it elsewhere\r\n-        localStorage.setItem('isLoggedIn', 'true');\r\n+            // ✅ Save logged-in user in sessionStorage (not localStorage)\r\n+            sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n+            sessionStorage.setItem('isLoggedIn', 'true');\r\n \r\n-        showSuccess('Login successful! Redirecting...');\r\n+            showSuccess('Login successful! Redirecting...');\r\n \r\n-        setTimeout(() => {\r\n-            window.location.href = '../../browse-book.html'; // redirect after login\r\n-        }, 1500);\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html'; // redirect after login\r\n+            }, 1500);\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Login error:\", err);\r\n+            showError(\"Server error. Please try again later.\");\r\n+        }\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n@@ -98,15 +105,11 @@\n             animation: 'slideIn 0.3s ease-out',\r\n             boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n         };\r\n \r\n-        if (type === 'error') {\r\n-            styles.background = '#dc3545';\r\n-        } else if (type === 'success') {\r\n-            styles.background = '#28a745';\r\n-        } else {\r\n-            styles.background = '#17a2b8';\r\n-        }\r\n+        if (type === 'error') styles.background = '#dc3545';\r\n+        else if (type === 'success') styles.background = '#28a745';\r\n+        else styles.background = '#17a2b8';\r\n \r\n         Object.assign(notification.style, styles);\r\n \r\n         if (!document.querySelector('#notification-styles')) {\r\n@@ -136,34 +139,27 @@\n             }, 300);\r\n         }, 5000);\r\n     }\r\n \r\n+    // Forgot password link\r\n     const forgotLink = document.getElementById(\"forgotLink\");\r\n-\r\n     forgotLink.addEventListener(\"click\", function (e) {\r\n         const email = emailInput.value.trim();\r\n-\r\n         if (!email) {\r\n-            e.preventDefault(); // stop redirect\r\n+            e.preventDefault();\r\n             alert(\"Please enter your email before proceeding to forgot password.\");\r\n             return;\r\n         }\r\n-\r\n-        // Save email to localStorage\r\n         localStorage.setItem(\"emailOTP\", email);\r\n     });\r\n \r\n-\r\n     // Input focus effects\r\n     const inputs = document.querySelectorAll('input');\r\n     inputs.forEach(input => {\r\n         input.addEventListener('focus', function () {\r\n             this.parentElement.classList.add('focused');\r\n         });\r\n-\r\n         input.addEventListener('blur', function () {\r\n-            if (!this.value) {\r\n-                this.parentElement.classList.remove('focused');\r\n-            }\r\n+            if (!this.value) this.parentElement.classList.remove('focused');\r\n         });\r\n     });\r\n });\r\n"
                },
                {
                    "date": 1757243083665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// Login functionality\r\n document.addEventListener('DOMContentLoaded', function () {\r\n     const loginForm = document.getElementById('loginForm');\r\n     const emailInput = document.getElementById('email');\r\n     const passwordInput = document.getElementById('password');\r\n"
                },
                {
                    "date": 1757243139412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+// Login functionality\r\n document.addEventListener('DOMContentLoaded', function () {\r\n     const loginForm = document.getElementById('loginForm');\r\n     const emailInput = document.getElementById('email');\r\n     const passwordInput = document.getElementById('password');\r\n@@ -9,9 +10,9 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', async function (e) {\r\n+    loginForm.addEventListener('submit', function (e) {\r\n         e.preventDefault();\r\n \r\n         const email = emailInput.value.trim();\r\n         const password = passwordInput.value.trim();\r\n@@ -21,53 +22,46 @@\n         if (!email || !password) {\r\n             showError('Please fill in all fields');\r\n             return;\r\n         }\r\n+\r\n         if (!isValidEmail(email)) {\r\n             showError('Please enter a valid email address');\r\n             return;\r\n         }\r\n+\r\n         if (password.length < 6) {\r\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-        try {\r\n-            // ✅ Call Flask backend for login\r\n-            const response = await fetch(\"http://127.0.0.1:5000/login\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n+        // ✅ Check against users in localStorage\r\n+        const users = JSON.parse(localStorage.getItem('users')) || [];\r\n+        const foundUser = users.find(u => u.email === email && u.password === password);\r\n \r\n-            if (!response.ok) {\r\n-                showError(\"Invalid email or password\");\r\n-                return;\r\n-            }\r\n+        if (!foundUser) {\r\n+            showError('Invalid email or password');\r\n+            return;\r\n+        }\r\n \r\n-            const user = await response.json();\r\n+        // Save email if remember me is checked\r\n+        if (remember) {\r\n+            localStorage.setItem('rememberEmail', email);\r\n+        } else {\r\n+            localStorage.removeItem('rememberEmail');\r\n+        }\r\n \r\n-            // Save email if remember me is checked\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n+        // ✅ Store current user (only the email, consistent everywhere)\r\n+        localStorage.setItem('currentUser', JSON.stringify({ email: foundUser.email }));\r\n \r\n-            // ✅ Save logged-in user in sessionStorage (not localStorage)\r\n-            sessionStorage.setItem('currentUser', JSON.stringify(user));\r\n-            sessionStorage.setItem('isLoggedIn', 'true');\r\n+        // Store login state if you want to check it elsewhere\r\n+        localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-            showSuccess('Login successful! Redirecting...');\r\n+        showSuccess('Login successful! Redirecting...');\r\n \r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html'; // redirect after login\r\n-            }, 1500);\r\n-\r\n-        } catch (err) {\r\n-            console.error(\"Login error:\", err);\r\n-            showError(\"Server error. Please try again later.\");\r\n-        }\r\n+        setTimeout(() => {\r\n+            window.location.href = '../../browse-book.html'; // redirect after login\r\n+        }, 1500);\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n@@ -104,11 +98,15 @@\n             animation: 'slideIn 0.3s ease-out',\r\n             boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n         };\r\n \r\n-        if (type === 'error') styles.background = '#dc3545';\r\n-        else if (type === 'success') styles.background = '#28a745';\r\n-        else styles.background = '#17a2b8';\r\n+        if (type === 'error') {\r\n+            styles.background = '#dc3545';\r\n+        } else if (type === 'success') {\r\n+            styles.background = '#28a745';\r\n+        } else {\r\n+            styles.background = '#17a2b8';\r\n+        }\r\n \r\n         Object.assign(notification.style, styles);\r\n \r\n         if (!document.querySelector('#notification-styles')) {\r\n@@ -138,27 +136,34 @@\n             }, 300);\r\n         }, 5000);\r\n     }\r\n \r\n-    // Forgot password link\r\n     const forgotLink = document.getElementById(\"forgotLink\");\r\n+\r\n     forgotLink.addEventListener(\"click\", function (e) {\r\n         const email = emailInput.value.trim();\r\n+\r\n         if (!email) {\r\n-            e.preventDefault();\r\n+            e.preventDefault(); // stop redirect\r\n             alert(\"Please enter your email before proceeding to forgot password.\");\r\n             return;\r\n         }\r\n+\r\n+        // Save email to localStorage\r\n         localStorage.setItem(\"emailOTP\", email);\r\n     });\r\n \r\n+\r\n     // Input focus effects\r\n     const inputs = document.querySelectorAll('input');\r\n     inputs.forEach(input => {\r\n         input.addEventListener('focus', function () {\r\n             this.parentElement.classList.add('focused');\r\n         });\r\n+\r\n         input.addEventListener('blur', function () {\r\n-            if (!this.value) this.parentElement.classList.remove('focused');\r\n+            if (!this.value) {\r\n+                this.parentElement.classList.remove('focused');\r\n+            }\r\n         });\r\n     });\r\n });\r\n"
                },
                {
                    "date": 1757246603972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,60 +10,65 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', function (e) {\r\n-        e.preventDefault();\r\n+  loginForm.addEventListener('submit', async function (e) {\r\n+    e.preventDefault();\r\n \r\n-        const email = emailInput.value.trim();\r\n-        const password = passwordInput.value.trim();\r\n-        const remember = rememberCheckbox.checked;\r\n+    const email = emailInput.value.trim();\r\n+    const password = passwordInput.value.trim();\r\n+    const remember = rememberCheckbox.checked;\r\n \r\n-        // Basic validation\r\n-        if (!email || !password) {\r\n-            showError('Please fill in all fields');\r\n-            return;\r\n-        }\r\n+    // Basic validation\r\n+    if (!email || !password) {\r\n+        showError('Please fill in all fields');\r\n+        return;\r\n+    }\r\n+    if (!isValidEmail(email)) {\r\n+        showError('Please enter a valid email address');\r\n+        return;\r\n+    }\r\n+    if (password.length < 6) {\r\n+        showError('Password must be at least 6 characters long');\r\n+        return;\r\n+    }\r\n \r\n-        if (!isValidEmail(email)) {\r\n-            showError('Please enter a valid email address');\r\n-            return;\r\n-        }\r\n+    try {\r\n+        const response = await fetch('http://127.0.0.1:5000/login', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify({ email, password })\r\n+        });\r\n+        const result = await response.json();\r\n \r\n-        if (password.length < 6) {\r\n-            showError('Password must be at least 6 characters long');\r\n+        if (!result.success) {\r\n+            showError(result.message);\r\n             return;\r\n         }\r\n \r\n-        // ✅ Check against users in localStorage\r\n-        const users = JSON.parse(localStorage.getItem('users')) || [];\r\n-        const foundUser = users.find(u => u.email === email && u.password === password);\r\n-\r\n-        if (!foundUser) {\r\n-            showError('Invalid email or password');\r\n-            return;\r\n-        }\r\n-\r\n         // Save email if remember me is checked\r\n         if (remember) {\r\n             localStorage.setItem('rememberEmail', email);\r\n         } else {\r\n             localStorage.removeItem('rememberEmail');\r\n         }\r\n \r\n-        // ✅ Store current user (only the email, consistent everywhere)\r\n-        localStorage.setItem('currentUser', JSON.stringify({ email: foundUser.email }));\r\n+        // Store current user email\r\n+        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n \r\n-        // Store login state if you want to check it elsewhere\r\n         localStorage.setItem('isLoggedIn', 'true');\r\n \r\n         showSuccess('Login successful! Redirecting...');\r\n-\r\n         setTimeout(() => {\r\n-            window.location.href = '../../browse-book.html'; // redirect after login\r\n+            window.location.href = '../../browse-book.html';\r\n         }, 1500);\r\n-    });\r\n \r\n+    } catch (error) {\r\n+        showError('Server error. Try again later.');\r\n+        console.error(error);\r\n+    }\r\n+});\r\n+\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n"
                },
                {
                    "date": 1757246715035,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,65 +10,72 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-  loginForm.addEventListener('submit', async function (e) {\r\n-    e.preventDefault();\r\n+    loginForm.addEventListener('submit', async function (e) {\r\n+        e.preventDefault();\r\n \r\n-    const email = emailInput.value.trim();\r\n-    const password = passwordInput.value.trim();\r\n-    const remember = rememberCheckbox.checked;\r\n+        const email = emailInput.value.trim();\r\n+        const password = passwordInput.value.trim();\r\n+        const remember = rememberCheckbox.checked;\r\n \r\n-    // Basic validation\r\n-    if (!email || !password) {\r\n-        showError('Please fill in all fields');\r\n-        return;\r\n-    }\r\n-    if (!isValidEmail(email)) {\r\n-        showError('Please enter a valid email address');\r\n-        return;\r\n-    }\r\n-    if (password.length < 6) {\r\n-        showError('Password must be at least 6 characters long');\r\n-        return;\r\n-    }\r\n-\r\n-    try {\r\n-        const response = await fetch('http://127.0.0.1:5000/login', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify({ email, password })\r\n-        });\r\n-        const result = await response.json();\r\n-\r\n-        if (!result.success) {\r\n-            showError(result.message);\r\n+        // Basic validation\r\n+        if (!email || !password) {\r\n+            showError('Please fill in all fields');\r\n             return;\r\n         }\r\n-\r\n-        // Save email if remember me is checked\r\n-        if (remember) {\r\n-            localStorage.setItem('rememberEmail', email);\r\n-        } else {\r\n-            localStorage.removeItem('rememberEmail');\r\n+        if (!isValidEmail(email)) {\r\n+            showError('Please enter a valid email address');\r\n+            return;\r\n         }\r\n+        if (password.length < 6) {\r\n+            showError('Password must be at least 6 characters long');\r\n+            return;\r\n+        }\r\n \r\n-        // Store current user email\r\n-        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+        if (!result.success) {\r\n+    // Show a uniform error message\r\n+    showError('Email or password is wrong');\r\n+    return;\r\n+}\r\n \r\n-        localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-        showSuccess('Login successful! Redirecting...');\r\n-        setTimeout(() => {\r\n-            window.location.href = '../../browse-book.html';\r\n-        }, 1500);\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/login', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n+            const result = await response.json();\r\n \r\n-    } catch (error) {\r\n-        showError('Server error. Try again later.');\r\n-        console.error(error);\r\n-    }\r\n-});\r\n+            if (!result.success) {\r\n+                showError(result.message);\r\n+                return;\r\n+            }\r\n \r\n+            // Save email if remember me is checked\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n+\r\n+            // Store current user email\r\n+            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+\r\n+            localStorage.setItem('isLoggedIn', 'true');\r\n+\r\n+            showSuccess('Login successful! Redirecting...');\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html';\r\n+            }, 1500);\r\n+\r\n+        } catch (error) {\r\n+            showError('Server error. Try again later.');\r\n+            console.error(error);\r\n+        }\r\n+    });\r\n+\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n"
                },
                {
                    "date": 1757246727820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,15 +31,11 @@\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-        if (!result.success) {\r\n-    // Show a uniform error message\r\n-    showError('Email or password is wrong');\r\n-    return;\r\n-}\r\n \r\n \r\n+\r\n         try {\r\n             const response = await fetch('http://127.0.0.1:5000/login', {\r\n                 method: 'POST',\r\n                 headers: { 'Content-Type': 'application/json' },\r\n"
                },
                {
                    "date": 1757246736396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,8 +54,14 @@\n             } else {\r\n                 localStorage.removeItem('rememberEmail');\r\n             }\r\n \r\n+                    if (!result.success) {\r\n+            // Show a uniform error message\r\n+            showError('Email or password is wrong');\r\n+            return;\r\n+        }\r\n+\r\n             // Store current user email\r\n             localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n \r\n             localStorage.setItem('isLoggedIn', 'true');\r\n"
                },
                {
                    "date": 1757989966546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,74 +10,74 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', async function (e) {\r\n-        e.preventDefault();\r\n+  loginForm.addEventListener('submit', async function (e) {\r\n+    e.preventDefault();\r\n \r\n-        const email = emailInput.value.trim();\r\n-        const password = passwordInput.value.trim();\r\n-        const remember = rememberCheckbox.checked;\r\n+    const email = emailInput.value.trim();\r\n+    const password = passwordInput.value.trim();\r\n+    const remember = rememberCheckbox.checked;\r\n \r\n-        // Basic validation\r\n-        if (!email || !password) {\r\n-            showError('Please fill in all fields');\r\n+    // Basic validation\r\n+    if (!email || !password) {\r\n+        showError('Please fill in all fields');\r\n+        return;\r\n+    }\r\n+    if (!isValidEmail(email)) {\r\n+        showError('Please enter a valid email address');\r\n+        return;\r\n+    }\r\n+    if (password.length < 6) {\r\n+        showError('Password must be at least 6 characters long');\r\n+        return;\r\n+    }\r\n+\r\n+    try {\r\n+        const response = await fetch('http://127.0.0.1:5000/login', {\r\n+            method: 'POST',\r\n+            headers: { 'Content-Type': 'application/json' },\r\n+            body: JSON.stringify({ email, password })\r\n+        });\r\n+\r\n+        // Check if backend is reachable\r\n+        if (!response.ok) {\r\n+            showError('Server error. Try again later.');\r\n             return;\r\n         }\r\n-        if (!isValidEmail(email)) {\r\n-            showError('Please enter a valid email address');\r\n-            return;\r\n-        }\r\n-        if (password.length < 6) {\r\n-            showError('Password must be at least 6 characters long');\r\n-            return;\r\n-        }\r\n \r\n+        const result = await response.json();\r\n \r\n-\r\n-\r\n-        try {\r\n-            const response = await fetch('http://127.0.0.1:5000/login', {\r\n-                method: 'POST',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n-            const result = await response.json();\r\n-\r\n-            if (!result.success) {\r\n-                showError(result.message);\r\n-                return;\r\n-            }\r\n-\r\n-            // Save email if remember me is checked\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n-\r\n-                    if (!result.success) {\r\n-            // Show a uniform error message\r\n+        // Check credentials validity\r\n+        if (!result.success) {\r\n             showError('Email or password is wrong');\r\n             return;\r\n         }\r\n \r\n-            // Store current user email\r\n-            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+        // ✅ Only save if login is valid\r\n+        if (remember) {\r\n+            localStorage.setItem('rememberEmail', email);\r\n+        } else {\r\n+            localStorage.removeItem('rememberEmail');\r\n+        }\r\n \r\n-            localStorage.setItem('isLoggedIn', 'true');\r\n+        // Store current user email\r\n+        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+        localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-            showSuccess('Login successful! Redirecting...');\r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html';\r\n-            }, 1500);\r\n+        showSuccess('Login successful! Redirecting...');\r\n+        setTimeout(() => {\r\n+            window.location.href = '../../browse-book.html';\r\n+        }, 1500);\r\n \r\n-        } catch (error) {\r\n-            showError('Server error. Try again later.');\r\n-            console.error(error);\r\n-        }\r\n-    });\r\n+    } catch (error) {\r\n+        // Backend offline or fetch failed\r\n+        showError('Server is offline. Please try again later.');\r\n+        console.error(error);\r\n+    }\r\n+});\r\n \r\n+\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n"
                },
                {
                    "date": 1758619291111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,74 +10,74 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-  loginForm.addEventListener('submit', async function (e) {\r\n-    e.preventDefault();\r\n+    loginForm.addEventListener('submit', async function (e) {\r\n+        e.preventDefault();\r\n \r\n-    const email = emailInput.value.trim();\r\n-    const password = passwordInput.value.trim();\r\n-    const remember = rememberCheckbox.checked;\r\n+        const email = emailInput.value.trim();\r\n+        const password = passwordInput.value.trim();\r\n+        const remember = rememberCheckbox.checked;\r\n \r\n-    // Basic validation\r\n-    if (!email || !password) {\r\n-        showError('Please fill in all fields');\r\n-        return;\r\n-    }\r\n-    if (!isValidEmail(email)) {\r\n-        showError('Please enter a valid email address');\r\n-        return;\r\n-    }\r\n-    if (password.length < 6) {\r\n-        showError('Password must be at least 6 characters long');\r\n-        return;\r\n-    }\r\n-\r\n-    try {\r\n-        const response = await fetch('http://127.0.0.1:5000/login', {\r\n-            method: 'POST',\r\n-            headers: { 'Content-Type': 'application/json' },\r\n-            body: JSON.stringify({ email, password })\r\n-        });\r\n-\r\n-        // Check if backend is reachable\r\n-        if (!response.ok) {\r\n-            showError('Server error. Try again later.');\r\n+        // Basic validation\r\n+        if (!email || !password) {\r\n+            showError('Please fill in all fields');\r\n             return;\r\n         }\r\n-\r\n-        const result = await response.json();\r\n-\r\n-        // Check credentials validity\r\n-        if (!result.success) {\r\n-            showError('Email or password is wrong');\r\n+        if (!isValidEmail(email)) {\r\n+            showError('Please enter a valid email address');\r\n             return;\r\n         }\r\n-\r\n-        // ✅ Only save if login is valid\r\n-        if (remember) {\r\n-            localStorage.setItem('rememberEmail', email);\r\n-        } else {\r\n-            localStorage.removeItem('rememberEmail');\r\n+        if (password.length < 6) {\r\n+            showError('Password must be at least 6 characters long');\r\n+            return;\r\n         }\r\n \r\n-        // Store current user email\r\n-        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-        localStorage.setItem('isLoggedIn', 'true');\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/login', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-        showSuccess('Login successful! Redirecting...');\r\n-        setTimeout(() => {\r\n-            window.location.href = '../../browse-book.html';\r\n-        }, 1500);\r\n+            // Check if backend is reachable\r\n+            if (!response.ok) {\r\n+                showError('Server error. Try again later.');\r\n+                return;\r\n+            }\r\n \r\n-    } catch (error) {\r\n-        // Backend offline or fetch failed\r\n-        showError('Server is offline. Please try again later.');\r\n-        console.error(error);\r\n-    }\r\n-});\r\n+            const result = await response.json();\r\n \r\n+            // Check credentials validity\r\n+            if (!result.success) {\r\n+                showError('Email or password is wrong');\r\n+                return;\r\n+            }\r\n \r\n+            // ✅ Only save if login is valid\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n+\r\n+            // Store current user email\r\n+            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem('isLoggedIn', 'true');\r\n+\r\n+            showSuccess('Login successful! Redirecting...');\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html';\r\n+            }, 1500);\r\n+\r\n+        } catch (error) {\r\n+            // Backend offline or fetch failed\r\n+            showError('Server is offline. Please try again later.');\r\n+            console.error(error);\r\n+        }\r\n+    });\r\n+\r\n+\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n@@ -153,19 +153,19 @@\n \r\n     const forgotLink = document.getElementById(\"forgotLink\");\r\n \r\n     forgotLink.addEventListener(\"click\", function (e) {\r\n-        const email = emailInput.value.trim();\r\n+    const email = emailInput.value.trim();\r\n \r\n-        if (!email) {\r\n-            e.preventDefault(); // stop redirect\r\n-            alert(\"Please enter your email before proceeding to forgot password.\");\r\n-            return;\r\n-        }\r\n+    if (!email) {\r\n+        e.preventDefault(); // stop redirect\r\n+        alert(\"Please enter your email before proceeding to forgot password.\");\r\n+        return;\r\n+    }\r\n \r\n-        // Save email to localStorage\r\n-        localStorage.setItem(\"emailOTP\", email);\r\n-    });\r\n+    // Save email to localStorage in JSON format\r\n+    localStorage.setItem(\"emailOTP\", JSON.stringify({ email }));\r\n+});\r\n \r\n \r\n     // Input focus effects\r\n     const inputs = document.querySelectorAll('input');\r\n"
                },
                {
                    "date": 1758621068847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,19 +153,19 @@\n \r\n     const forgotLink = document.getElementById(\"forgotLink\");\r\n \r\n     forgotLink.addEventListener(\"click\", function (e) {\r\n-    const email = emailInput.value.trim();\r\n+        const email = emailInput.value.trim();\r\n \r\n-    if (!email) {\r\n-        e.preventDefault(); // stop redirect\r\n-        alert(\"Please enter your email before proceeding to forgot password.\");\r\n-        return;\r\n-    }\r\n+        if (!email) {\r\n+            e.preventDefault(); // stop redirect\r\n+            alert(\"Please enter your email before proceeding to forgot password.\");\r\n+            return;\r\n+        }\r\n \r\n-    // Save email to localStorage in JSON format\r\n-    localStorage.setItem(\"emailOTP\", JSON.stringify({ email }));\r\n-});\r\n+        // Save email to localStorage in JSON format\r\n+        localStorage.setItem(\"emailOTP\", JSON.stringify({ email }));\r\n+    });\r\n \r\n \r\n     // Input focus effects\r\n     const inputs = document.querySelectorAll('input');\r\n@@ -180,4 +180,7 @@\n             }\r\n         });\r\n     });\r\n });\r\n+\r\n+\r\n+localStorage.cle\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758621073945,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,5 +182,5 @@\n     });\r\n });\r\n \r\n \r\n-localStorage.cle\n\\ No newline at end of file\n+localStorage.clear('')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758621087617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,6 +181,4 @@\n         });\r\n     });\r\n });\r\n \r\n-\r\n-localStorage.clear('')\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758698624154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,8 +48,9 @@\n             const result = await response.json();\r\n \r\n             // Check credentials validity\r\n             if (!result.success) {\r\n+                alert('Email or password is incorrect'); // ✅ Alert box added\r\n                 showError('Email or password is wrong');\r\n                 return;\r\n             }\r\n \r\n@@ -74,8 +75,9 @@\n             showError('Server is offline. Please try again later.');\r\n             console.error(error);\r\n         }\r\n     });\r\n+});\r\n \r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758698649942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,8 @@\n             const result = await response.json();\r\n \r\n             // Check credentials validity\r\n             if (!result.success) {\r\n-                alert('Email or password is incorrect'); // ✅ Alert box added\r\n                 showError('Email or password is wrong');\r\n                 return;\r\n             }\r\n \r\n@@ -75,9 +74,8 @@\n             showError('Server is offline. Please try again later.');\r\n             console.error(error);\r\n         }\r\n     });\r\n-});\r\n \r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758698689931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n     const passwordInput = document.getElementById('password');\r\n     const rememberCheckbox = document.getElementById('remember');\r\n \r\n     // Load saved email if \"Remember Me\" was checked\r\n-    if (localStorage.getItem('rememberEmail')) {\r\n+     if (localStorage.getItem('rememberEmail')) {\r\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n@@ -48,8 +48,9 @@\n             const result = await response.json();\r\n \r\n             // Check credentials validity\r\n             if (!result.success) {\r\n+                alert('Email or password is incorrect'); // ✅ Alert box added\r\n                 showError('Email or password is wrong');\r\n                 return;\r\n             }\r\n \r\n"
                },
                {
                    "date": 1758698779973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,51 +31,46 @@\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-        try {\r\n-            const response = await fetch('http://127.0.0.1:5000/login', {\r\n-                method: 'POST',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n+       try {\r\n+    const response = await fetch('http://127.0.0.1:5000/login', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({ email, password })\r\n+    });\r\n \r\n-            // Check if backend is reachable\r\n-            if (!response.ok) {\r\n-                showError('Server error. Try again later.');\r\n-                return;\r\n-            }\r\n+    const result = await response.json();\r\n \r\n-            const result = await response.json();\r\n+    // Check credentials validity\r\n+    if (!result.success) {\r\n+        alert(result.message || 'Email or password is incorrect');\r\n+        showError(result.message || 'Email or password is wrong');\r\n+        return;\r\n+    }\r\n \r\n-            // Check credentials validity\r\n-            if (!result.success) {\r\n-                alert('Email or password is incorrect'); // ✅ Alert box added\r\n-                showError('Email or password is wrong');\r\n-                return;\r\n-            }\r\n+    // ✅ Only save if login is valid\r\n+    if (remember) {\r\n+        localStorage.setItem('rememberEmail', email);\r\n+    } else {\r\n+        localStorage.removeItem('rememberEmail');\r\n+    }\r\n \r\n-            // ✅ Only save if login is valid\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n+    // Store current user email\r\n+    localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+    localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-            // Store current user email\r\n-            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-            localStorage.setItem('isLoggedIn', 'true');\r\n+    showSuccess('Login successful! Redirecting...');\r\n+    setTimeout(() => {\r\n+        window.location.href = '../../browse-book.html';\r\n+    }, 1500);\r\n \r\n-            showSuccess('Login successful! Redirecting...');\r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html';\r\n-            }, 1500);\r\n+} catch (error) {\r\n+    // Backend offline or fetch failed\r\n+    showError('Server is offline. Please try again later.');\r\n+    console.error(error);\r\n+}\r\n \r\n-        } catch (error) {\r\n-            // Backend offline or fetch failed\r\n-            showError('Server is offline. Please try again later.');\r\n-            console.error(error);\r\n-        }\r\n     });\r\n \r\n \r\n     // Email validation function\r\n"
                },
                {
                    "date": 1758698806832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n     const passwordInput = document.getElementById('password');\r\n     const rememberCheckbox = document.getElementById('remember');\r\n \r\n     // Load saved email if \"Remember Me\" was checked\r\n-     if (localStorage.getItem('rememberEmail')) {\r\n+    if (localStorage.getItem('rememberEmail')) {\r\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n@@ -31,45 +31,44 @@\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-       try {\r\n-    const response = await fetch('http://127.0.0.1:5000/login', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({ email, password })\r\n-    });\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/login', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-    const result = await response.json();\r\n+            const result = await response.json();\r\n \r\n-    // Check credentials validity\r\n-    if (!result.success) {\r\n-        alert(result.message || 'Email or password is incorrect');\r\n-        showError(result.message || 'Email or password is wrong');\r\n-        return;\r\n-    }\r\n+            // Check credentials validity\r\n+            if (!result.success) {\r\n+                showError(result.message || 'Email or password is wrong');\r\n+                return;\r\n+            }\r\n \r\n-    // ✅ Only save if login is valid\r\n-    if (remember) {\r\n-        localStorage.setItem('rememberEmail', email);\r\n-    } else {\r\n-        localStorage.removeItem('rememberEmail');\r\n-    }\r\n+            // ✅ Only save if login is valid\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n \r\n-    // Store current user email\r\n-    localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-    localStorage.setItem('isLoggedIn', 'true');\r\n+            // Store current user email\r\n+            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-    showSuccess('Login successful! Redirecting...');\r\n-    setTimeout(() => {\r\n-        window.location.href = '../../browse-book.html';\r\n-    }, 1500);\r\n+            showSuccess('Login successful! Redirecting...');\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html';\r\n+            }, 1500);\r\n \r\n-} catch (error) {\r\n-    // Backend offline or fetch failed\r\n-    showError('Server is offline. Please try again later.');\r\n-    console.error(error);\r\n-}\r\n+        } catch (error) {\r\n+            // Backend offline or fetch failed\r\n+            showError('Server is offline. Please try again later.');\r\n+            console.error(error);\r\n+        }\r\n \r\n     });\r\n \r\n \r\n"
                },
                {
                    "date": 1758723878581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,17 @@\n             });\r\n \r\n             const result = await response.json();\r\n \r\n+\r\n+                // ✅ If blocked, show modal\r\n+    if (result.blocked) {\r\n+        document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+        document.getElementById('blockModal').classList.remove('hidden');\r\n+        return; // stop login flow\r\n+    }\r\n+\r\n+\r\n             // Check credentials validity\r\n             if (!result.success) {\r\n                 showError(result.message || 'Email or password is wrong');\r\n                 return;\r\n"
                },
                {
                    "date": 1758724047554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,52 +31,49 @@\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-        try {\r\n-            const response = await fetch('http://127.0.0.1:5000/login', {\r\n-                method: 'POST',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n+       try {\r\n+    const response = await fetch('http://127.0.0.1:5000/login', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({ email, password })\r\n+    });\r\n \r\n-            const result = await response.json();\r\n+    const result = await response.json();\r\n \r\n+    if (!response.ok) {\r\n+        // Even on 403 or 401 we still get JSON with details\r\n+        if (result.blocked) {\r\n+            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+            document.getElementById('blockModal').classList.remove('hidden');\r\n+            return;\r\n+        }\r\n \r\n-                // ✅ If blocked, show modal\r\n-    if (result.blocked) {\r\n-        document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-        document.getElementById('blockModal').classList.remove('hidden');\r\n-        return; // stop login flow\r\n+        showError(result.message || 'Login failed');\r\n+        return;\r\n     }\r\n \r\n+    // Normal success flow\r\n+    if (remember) {\r\n+        localStorage.setItem('rememberEmail', email);\r\n+    } else {\r\n+        localStorage.removeItem('rememberEmail');\r\n+    }\r\n \r\n-            // Check credentials validity\r\n-            if (!result.success) {\r\n-                showError(result.message || 'Email or password is wrong');\r\n-                return;\r\n-            }\r\n+    localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+    localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-            // ✅ Only save if login is valid\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n+    showSuccess('Login successful! Redirecting...');\r\n+    setTimeout(() => {\r\n+        window.location.href = '../../browse-book.html';\r\n+    }, 1500);\r\n \r\n-            // Store current user email\r\n-            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-            localStorage.setItem('isLoggedIn', 'true');\r\n+} catch (error) {\r\n+    showError('Server is offline. Please try again later.');\r\n+    console.error(error);\r\n+}\r\n \r\n-            showSuccess('Login successful! Redirecting...');\r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html';\r\n-            }, 1500);\r\n-\r\n-        } catch (error) {\r\n-            // Backend offline or fetch failed\r\n-            showError('Server is offline. Please try again later.');\r\n-            console.error(error);\r\n         }\r\n \r\n     });\r\n \r\n"
                },
                {
                    "date": 1758724054086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,51 +31,51 @@\n             showError('Password must be at least 6 characters long');\r\n             return;\r\n         }\r\n \r\n-       try {\r\n-    const response = await fetch('http://127.0.0.1:5000/login', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({ email, password })\r\n-    });\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/login', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-    const result = await response.json();\r\n+            const result = await response.json();\r\n \r\n-    if (!response.ok) {\r\n-        // Even on 403 or 401 we still get JSON with details\r\n-        if (result.blocked) {\r\n-            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-            document.getElementById('blockModal').classList.remove('hidden');\r\n-            return;\r\n-        }\r\n+            if (!response.ok) {\r\n+                // Even on 403 or 401 we still get JSON with details\r\n+                if (result.blocked) {\r\n+                    document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+                    document.getElementById('blockModal').classList.remove('hidden');\r\n+                    return;\r\n+                }\r\n \r\n-        showError(result.message || 'Login failed');\r\n-        return;\r\n-    }\r\n+                showError(result.message || 'Login failed');\r\n+                return;\r\n+            }\r\n \r\n-    // Normal success flow\r\n-    if (remember) {\r\n-        localStorage.setItem('rememberEmail', email);\r\n-    } else {\r\n-        localStorage.removeItem('rememberEmail');\r\n-    }\r\n+            // Normal success flow\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n \r\n-    localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-    localStorage.setItem('isLoggedIn', 'true');\r\n+            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-    showSuccess('Login successful! Redirecting...');\r\n-    setTimeout(() => {\r\n-        window.location.href = '../../browse-book.html';\r\n-    }, 1500);\r\n+            showSuccess('Login successful! Redirecting...');\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html';\r\n+            }, 1500);\r\n \r\n-} catch (error) {\r\n-    showError('Server is offline. Please try again later.');\r\n-    console.error(error);\r\n-}\r\n-\r\n+        } catch (error) {\r\n+            showError('Server is offline. Please try again later.');\r\n+            console.error(error);\r\n         }\r\n \r\n+\r\n+\r\n     });\r\n \r\n \r\n     // Email validation function\r\n"
                },
                {
                    "date": 1758724216716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,27 +40,22 @@\n             });\r\n \r\n             const result = await response.json();\r\n \r\n-            if (!response.ok) {\r\n-                // Even on 403 or 401 we still get JSON with details\r\n-                if (result.blocked) {\r\n-                    document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-                    document.getElementById('blockModal').classList.remove('hidden');\r\n-                    return;\r\n-                }\r\n-\r\n-                showError(result.message || 'Login failed');\r\n+            // Check credentials validity\r\n+            if (!result.success) {\r\n+                showError(result.message || 'Email or password is wrong');\r\n                 return;\r\n             }\r\n \r\n-            // Normal success flow\r\n+            // ✅ Only save if login is valid\r\n             if (remember) {\r\n                 localStorage.setItem('rememberEmail', email);\r\n             } else {\r\n                 localStorage.removeItem('rememberEmail');\r\n             }\r\n \r\n+            // Store current user email\r\n             localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n             localStorage.setItem('isLoggedIn', 'true');\r\n \r\n             showSuccess('Login successful! Redirecting...');\r\n@@ -68,17 +63,15 @@\n                 window.location.href = '../../browse-book.html';\r\n             }, 1500);\r\n \r\n         } catch (error) {\r\n+            // Backend offline or fetch failed\r\n             showError('Server is offline. Please try again later.');\r\n             console.error(error);\r\n         }\r\n \r\n-\r\n-\r\n     });\r\n \r\n-\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n"
                },
                {
                    "date": 1758724474839,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,66 +10,49 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', async function (e) {\r\n-        e.preventDefault();\r\n+    try {\r\n+    const response = await fetch('http://127.0.0.1:5000/login', {\r\n+        method: 'POST',\r\n+        headers: { 'Content-Type': 'application/json' },\r\n+        body: JSON.stringify({ email, password })\r\n+    });\r\n \r\n-        const email = emailInput.value.trim();\r\n-        const password = passwordInput.value.trim();\r\n-        const remember = rememberCheckbox.checked;\r\n+    const result = await response.json();\r\n \r\n-        // Basic validation\r\n-        if (!email || !password) {\r\n-            showError('Please fill in all fields');\r\n-            return;\r\n-        }\r\n-        if (!isValidEmail(email)) {\r\n-            showError('Please enter a valid email address');\r\n-            return;\r\n-        }\r\n-        if (password.length < 6) {\r\n-            showError('Password must be at least 6 characters long');\r\n-            return;\r\n-        }\r\n+    // ✅ If blocked, show modal\r\n+    if (result.blocked) {\r\n+        document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+        document.getElementById('blockModal').classList.remove('hidden');\r\n+        return; // stop login flow\r\n+    }\r\n \r\n-        try {\r\n-            const response = await fetch('http://127.0.0.1:5000/login', {\r\n-                method: 'POST',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n+    if (!result.success) {\r\n+        showError(result.message || 'Email or password is wrong');\r\n+        return;\r\n+    }\r\n \r\n-            const result = await response.json();\r\n+    // ✅ Only save if login is valid\r\n+    if (remember) {\r\n+        localStorage.setItem('rememberEmail', email);\r\n+    } else {\r\n+        localStorage.removeItem('rememberEmail');\r\n+    }\r\n \r\n-            // Check credentials validity\r\n-            if (!result.success) {\r\n-                showError(result.message || 'Email or password is wrong');\r\n-                return;\r\n-            }\r\n+    // Store current user email\r\n+    localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+    localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-            // ✅ Only save if login is valid\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n+    showSuccess('Login successful! Redirecting...');\r\n+    setTimeout(() => {\r\n+        window.location.href = '../../browse-book.html';\r\n+    }, 1500);\r\n \r\n-            // Store current user email\r\n-            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-            localStorage.setItem('isLoggedIn', 'true');\r\n-\r\n-            showSuccess('Login successful! Redirecting...');\r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html';\r\n-            }, 1500);\r\n-\r\n-        } catch (error) {\r\n-            // Backend offline or fetch failed\r\n-            showError('Server is offline. Please try again later.');\r\n-            console.error(error);\r\n-        }\r\n-\r\n+} catch (error) {\r\n+    showError('Server is offline. Please try again later.');\r\n+    console.error(error);\r\n+}\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758724492031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,30 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    try {\r\n+    loginForm.addEventListener('submit', async function (e) {\r\n+        e.preventDefault();\r\n+\r\n+        const email = emailInput.value.trim();\r\n+        const password = passwordInput.value.trim();\r\n+        const remember = rememberCheckbox.checked;\r\n+\r\n+        // Basic validation\r\n+        if (!email || !password) {\r\n+            showError('Please fill in all fields');\r\n+            return;\r\n+        }\r\n+        if (!isValidEmail(email)) {\r\n+            showError('Please enter a valid email address');\r\n+            return;\r\n+        }\r\n+        if (password.length < 6) {\r\n+            showError('Password must be at least 6 characters long');\r\n+            return;\r\n+        }\r\n+\r\n+try {\r\n     const response = await fetch('http://127.0.0.1:5000/login', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({ email, password })\r\n@@ -51,8 +72,10 @@\n } catch (error) {\r\n     showError('Server is offline. Please try again later.');\r\n     console.error(error);\r\n }\r\n+\r\n+\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758726254307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,72 +10,53 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', async function (e) {\r\n-        e.preventDefault();\r\n+  let isSubmitting = false;\r\n \r\n-        const email = emailInput.value.trim();\r\n-        const password = passwordInput.value.trim();\r\n-        const remember = rememberCheckbox.checked;\r\n+loginForm.addEventListener('submit', async function (e) {\r\n+    e.preventDefault();\r\n+    if (isSubmitting) return; // prevent spam\r\n+    isSubmitting = true;\r\n \r\n-        // Basic validation\r\n-        if (!email || !password) {\r\n-            showError('Please fill in all fields');\r\n+    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n+    submitBtn.disabled = true;\r\n+    submitBtn.textContent = \"Logging in...\";\r\n+\r\n+    try {\r\n+        const response = await fetch(\"http://127.0.0.1:5000/login\", { ... });\r\n+        const result = await response.json();\r\n+\r\n+        if (result.blocked) {\r\n+            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+            document.getElementById('blockModal').classList.remove('hidden');\r\n             return;\r\n         }\r\n-        if (!isValidEmail(email)) {\r\n-            showError('Please enter a valid email address');\r\n+\r\n+        if (!result.success) {\r\n+            showError(result.message || \"Email or password is wrong\");\r\n             return;\r\n         }\r\n-        if (password.length < 6) {\r\n-            showError('Password must be at least 6 characters long');\r\n-            return;\r\n-        }\r\n \r\n-try {\r\n-    const response = await fetch('http://127.0.0.1:5000/login', {\r\n-        method: 'POST',\r\n-        headers: { 'Content-Type': 'application/json' },\r\n-        body: JSON.stringify({ email, password })\r\n-    });\r\n+        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+        localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-    const result = await response.json();\r\n-\r\n-    // ✅ If blocked, show modal\r\n-    if (result.blocked) {\r\n-        document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-        document.getElementById('blockModal').classList.remove('hidden');\r\n-        return; // stop login flow\r\n+        showSuccess(\"Login successful! Redirecting...\");\r\n+        setTimeout(() => {\r\n+            window.location.href = \"../../browse-book.html\";\r\n+        }, 1500);\r\n+    } catch (error) {\r\n+        showError(\"Server is offline. Please try again later.\");\r\n+        console.error(error);\r\n+    } finally {\r\n+        isSubmitting = false;\r\n+        submitBtn.disabled = false;\r\n+        submitBtn.textContent = \"Login\";\r\n     }\r\n+});\r\n \r\n-    if (!result.success) {\r\n-        showError(result.message || 'Email or password is wrong');\r\n-        return;\r\n-    }\r\n \r\n-    // ✅ Only save if login is valid\r\n-    if (remember) {\r\n-        localStorage.setItem('rememberEmail', email);\r\n-    } else {\r\n-        localStorage.removeItem('rememberEmail');\r\n-    }\r\n \r\n-    // Store current user email\r\n-    localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-    localStorage.setItem('isLoggedIn', 'true');\r\n-\r\n-    showSuccess('Login successful! Redirecting...');\r\n-    setTimeout(() => {\r\n-        window.location.href = '../../browse-book.html';\r\n-    }, 1500);\r\n-\r\n-} catch (error) {\r\n-    showError('Server is offline. Please try again later.');\r\n-    console.error(error);\r\n-}\r\n-\r\n-\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758726259931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,53 +10,72 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-  let isSubmitting = false;\r\n+    loginForm.addEventListener('submit', async function (e) {\r\n+        e.preventDefault();\r\n \r\n-loginForm.addEventListener('submit', async function (e) {\r\n-    e.preventDefault();\r\n-    if (isSubmitting) return; // prevent spam\r\n-    isSubmitting = true;\r\n+        const email = emailInput.value.trim();\r\n+        const password = passwordInput.value.trim();\r\n+        const remember = rememberCheckbox.checked;\r\n \r\n-    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n-    submitBtn.disabled = true;\r\n-    submitBtn.textContent = \"Logging in...\";\r\n-\r\n-    try {\r\n-        const response = await fetch(\"http://127.0.0.1:5000/login\", { ... });\r\n-        const result = await response.json();\r\n-\r\n-        if (result.blocked) {\r\n-            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-            document.getElementById('blockModal').classList.remove('hidden');\r\n+        // Basic validation\r\n+        if (!email || !password) {\r\n+            showError('Please fill in all fields');\r\n             return;\r\n         }\r\n-\r\n-        if (!result.success) {\r\n-            showError(result.message || \"Email or password is wrong\");\r\n+        if (!isValidEmail(email)) {\r\n+            showError('Please enter a valid email address');\r\n             return;\r\n         }\r\n+        if (password.length < 6) {\r\n+            showError('Password must be at least 6 characters long');\r\n+            return;\r\n+        }\r\n \r\n-        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-        localStorage.setItem('isLoggedIn', 'true');\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/login', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-        showSuccess(\"Login successful! Redirecting...\");\r\n-        setTimeout(() => {\r\n-            window.location.href = \"../../browse-book.html\";\r\n-        }, 1500);\r\n-    } catch (error) {\r\n-        showError(\"Server is offline. Please try again later.\");\r\n-        console.error(error);\r\n-    } finally {\r\n-        isSubmitting = false;\r\n-        submitBtn.disabled = false;\r\n-        submitBtn.textContent = \"Login\";\r\n-    }\r\n-});\r\n+            const result = await response.json();\r\n \r\n+            // ✅ If blocked, show modal\r\n+            if (result.blocked) {\r\n+                document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+                document.getElementById('blockModal').classList.remove('hidden');\r\n+                return; // stop login flow\r\n+            }\r\n \r\n+            if (!result.success) {\r\n+                showError(result.message || 'Email or password is wrong');\r\n+                return;\r\n+            }\r\n \r\n+            // ✅ Only save if login is valid\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n+\r\n+            // Store current user email\r\n+            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem('isLoggedIn', 'true');\r\n+\r\n+            showSuccess('Login successful! Redirecting...');\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html';\r\n+            }, 1500);\r\n+\r\n+        } catch (error) {\r\n+            showError('Server is offline. Please try again later.');\r\n+            console.error(error);\r\n+        }\r\n+\r\n+\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758726274907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,74 +10,52 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', async function (e) {\r\n-        e.preventDefault();\r\n+let isSubmitting = false;\r\n \r\n-        const email = emailInput.value.trim();\r\n-        const password = passwordInput.value.trim();\r\n-        const remember = rememberCheckbox.checked;\r\n+loginForm.addEventListener('submit', async function (e) {\r\n+    e.preventDefault();\r\n+    if (isSubmitting) return; // prevent spam\r\n+    isSubmitting = true;\r\n \r\n-        // Basic validation\r\n-        if (!email || !password) {\r\n-            showError('Please fill in all fields');\r\n+    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n+    submitBtn.disabled = true;\r\n+    submitBtn.textContent = \"Logging in...\";\r\n+\r\n+    try {\r\n+        const response = await fetch(\"http://127.0.0.1:5000/login\", { ... });\r\n+        const result = await response.json();\r\n+\r\n+        if (result.blocked) {\r\n+            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+            document.getElementById('blockModal').classList.remove('hidden');\r\n             return;\r\n         }\r\n-        if (!isValidEmail(email)) {\r\n-            showError('Please enter a valid email address');\r\n+\r\n+        if (!result.success) {\r\n+            showError(result.message || \"Email or password is wrong\");\r\n             return;\r\n         }\r\n-        if (password.length < 6) {\r\n-            showError('Password must be at least 6 characters long');\r\n-            return;\r\n-        }\r\n \r\n-        try {\r\n-            const response = await fetch('http://127.0.0.1:5000/login', {\r\n-                method: 'POST',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n+        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+        localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-            const result = await response.json();\r\n+        showSuccess(\"Login successful! Redirecting...\");\r\n+        setTimeout(() => {\r\n+            window.location.href = \"../../browse-book.html\";\r\n+        }, 1500);\r\n+    } catch (error) {\r\n+        showError(\"Server is offline. Please try again later.\");\r\n+        console.error(error);\r\n+    } finally {\r\n+        isSubmitting = false;\r\n+        submitBtn.disabled = false;\r\n+        submitBtn.textContent = \"Login\";\r\n+    }\r\n+});\r\n \r\n-            // ✅ If blocked, show modal\r\n-            if (result.blocked) {\r\n-                document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-                document.getElementById('blockModal').classList.remove('hidden');\r\n-                return; // stop login flow\r\n-            }\r\n \r\n-            if (!result.success) {\r\n-                showError(result.message || 'Email or password is wrong');\r\n-                return;\r\n-            }\r\n-\r\n-            // ✅ Only save if login is valid\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n-\r\n-            // Store current user email\r\n-            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-            localStorage.setItem('isLoggedIn', 'true');\r\n-\r\n-            showSuccess('Login successful! Redirecting...');\r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html';\r\n-            }, 1500);\r\n-\r\n-        } catch (error) {\r\n-            showError('Server is offline. Please try again later.');\r\n-            console.error(error);\r\n-        }\r\n-\r\n-\r\n-    });\r\n-\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n"
                },
                {
                    "date": 1758726282450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,9 @@\n         submitBtn.textContent = \"Login\";\r\n     }\r\n });\r\n \r\n+}\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n"
                },
                {
                    "date": 1758726298639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,53 +10,74 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-let isSubmitting = false;\r\n+    loginForm.addEventListener('submit', async function (e) {\r\n+        e.preventDefault();\r\n \r\n-loginForm.addEventListener('submit', async function (e) {\r\n-    e.preventDefault();\r\n-    if (isSubmitting) return; // prevent spam\r\n-    isSubmitting = true;\r\n+        const email = emailInput.value.trim();\r\n+        const password = passwordInput.value.trim();\r\n+        const remember = rememberCheckbox.checked;\r\n \r\n-    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n-    submitBtn.disabled = true;\r\n-    submitBtn.textContent = \"Logging in...\";\r\n-\r\n-    try {\r\n-        const response = await fetch(\"http://127.0.0.1:5000/login\", { ... });\r\n-        const result = await response.json();\r\n-\r\n-        if (result.blocked) {\r\n-            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-            document.getElementById('blockModal').classList.remove('hidden');\r\n+        // Basic validation\r\n+        if (!email || !password) {\r\n+            showError('Please fill in all fields');\r\n             return;\r\n         }\r\n-\r\n-        if (!result.success) {\r\n-            showError(result.message || \"Email or password is wrong\");\r\n+        if (!isValidEmail(email)) {\r\n+            showError('Please enter a valid email address');\r\n             return;\r\n         }\r\n+        if (password.length < 6) {\r\n+            showError('Password must be at least 6 characters long');\r\n+            return;\r\n+        }\r\n \r\n-        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-        localStorage.setItem('isLoggedIn', 'true');\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/login', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-        showSuccess(\"Login successful! Redirecting...\");\r\n-        setTimeout(() => {\r\n-            window.location.href = \"../../browse-book.html\";\r\n-        }, 1500);\r\n-    } catch (error) {\r\n-        showError(\"Server is offline. Please try again later.\");\r\n-        console.error(error);\r\n-    } finally {\r\n-        isSubmitting = false;\r\n-        submitBtn.disabled = false;\r\n-        submitBtn.textContent = \"Login\";\r\n-    }\r\n-});\r\n+            const result = await response.json();\r\n \r\n-}\r\n+            // ✅ If blocked, show modal\r\n+            if (result.blocked) {\r\n+                document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+                document.getElementById('blockModal').classList.remove('hidden');\r\n+                return; // stop login flow\r\n+            }\r\n \r\n+            if (!result.success) {\r\n+                showError(result.message || 'Email or password is wrong');\r\n+                return;\r\n+            }\r\n+\r\n+            // ✅ Only save if login is valid\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n+\r\n+            // Store current user email\r\n+            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem('isLoggedIn', 'true');\r\n+\r\n+            showSuccess('Login successful! Redirecting...');\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html';\r\n+            }, 1500);\r\n+\r\n+        } catch (error) {\r\n+            showError('Server is offline. Please try again later.');\r\n+            console.error(error);\r\n+        }\r\n+\r\n+\r\n+    });\r\n+\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n"
                },
                {
                    "date": 1758726316211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,72 +10,49 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', async function (e) {\r\n-        e.preventDefault();\r\n+   loginForm.addEventListener('submit', async function (e) {\r\n+    e.preventDefault();\r\n+    if (isSubmitting) return; // prevent spam\r\n+    isSubmitting = true;\r\n \r\n-        const email = emailInput.value.trim();\r\n-        const password = passwordInput.value.trim();\r\n-        const remember = rememberCheckbox.checked;\r\n+    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n+    submitBtn.disabled = true;\r\n+    submitBtn.textContent = \"Logging in...\";\r\n \r\n-        // Basic validation\r\n-        if (!email || !password) {\r\n-            showError('Please fill in all fields');\r\n+    try {\r\n+        const response = await fetch(\"http://127.0.0.1:5000/login\", { ... });\r\n+        const result = await response.json();\r\n+\r\n+        if (result.blocked) {\r\n+            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+            document.getElementById('blockModal').classList.remove('hidden');\r\n             return;\r\n         }\r\n-        if (!isValidEmail(email)) {\r\n-            showError('Please enter a valid email address');\r\n+\r\n+        if (!result.success) {\r\n+            showError(result.message || \"Email or password is wrong\");\r\n             return;\r\n         }\r\n-        if (password.length < 6) {\r\n-            showError('Password must be at least 6 characters long');\r\n-            return;\r\n-        }\r\n \r\n-        try {\r\n-            const response = await fetch('http://127.0.0.1:5000/login', {\r\n-                method: 'POST',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n+        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+        localStorage.setItem('isLoggedIn', 'true');\r\n \r\n-            const result = await response.json();\r\n+        showSuccess(\"Login successful! Redirecting...\");\r\n+        setTimeout(() => {\r\n+            window.location.href = \"../../browse-book.html\";\r\n+        }, 1500);\r\n+    } catch (error) {\r\n+        showError(\"Server is offline. Please try again later.\");\r\n+        console.error(error);\r\n+    } finally {\r\n+        isSubmitting = false;\r\n+        submitBtn.disabled = false;\r\n+        submitBtn.textContent = \"Login\";\r\n+    }\r\n \r\n-            // ✅ If blocked, show modal\r\n-            if (result.blocked) {\r\n-                document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-                document.getElementById('blockModal').classList.remove('hidden');\r\n-                return; // stop login flow\r\n-            }\r\n \r\n-            if (!result.success) {\r\n-                showError(result.message || 'Email or password is wrong');\r\n-                return;\r\n-            }\r\n-\r\n-            // ✅ Only save if login is valid\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n-\r\n-            // Store current user email\r\n-            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-            localStorage.setItem('isLoggedIn', 'true');\r\n-\r\n-            showSuccess('Login successful! Redirecting...');\r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html';\r\n-            }, 1500);\r\n-\r\n-        } catch (error) {\r\n-            showError('Server is offline. Please try again later.');\r\n-            console.error(error);\r\n-        }\r\n-\r\n-\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758726326988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,49 +10,72 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-   loginForm.addEventListener('submit', async function (e) {\r\n-    e.preventDefault();\r\n-    if (isSubmitting) return; // prevent spam\r\n-    isSubmitting = true;\r\n+    loginForm.addEventListener('submit', async function (e) {\r\n+        e.preventDefault();\r\n \r\n-    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n-    submitBtn.disabled = true;\r\n-    submitBtn.textContent = \"Logging in...\";\r\n+        const email = emailInput.value.trim();\r\n+        const password = passwordInput.value.trim();\r\n+        const remember = rememberCheckbox.checked;\r\n \r\n-    try {\r\n-        const response = await fetch(\"http://127.0.0.1:5000/login\", { ... });\r\n-        const result = await response.json();\r\n-\r\n-        if (result.blocked) {\r\n-            document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-            document.getElementById('blockModal').classList.remove('hidden');\r\n+        // Basic validation\r\n+        if (!email || !password) {\r\n+            showError('Please fill in all fields');\r\n             return;\r\n         }\r\n-\r\n-        if (!result.success) {\r\n-            showError(result.message || \"Email or password is wrong\");\r\n+        if (!isValidEmail(email)) {\r\n+            showError('Please enter a valid email address');\r\n             return;\r\n         }\r\n+        if (password.length < 6) {\r\n+            showError('Password must be at least 6 characters long');\r\n+            return;\r\n+        }\r\n \r\n-        localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-        localStorage.setItem('isLoggedIn', 'true');\r\n+        try {\r\n+            const response = await fetch('http://127.0.0.1:5000/login', {\r\n+                method: 'POST',\r\n+                headers: { 'Content-Type': 'application/json' },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-        showSuccess(\"Login successful! Redirecting...\");\r\n-        setTimeout(() => {\r\n-            window.location.href = \"../../browse-book.html\";\r\n-        }, 1500);\r\n-    } catch (error) {\r\n-        showError(\"Server is offline. Please try again later.\");\r\n-        console.error(error);\r\n-    } finally {\r\n-        isSubmitting = false;\r\n-        submitBtn.disabled = false;\r\n-        submitBtn.textContent = \"Login\";\r\n-    }\r\n+            const result = await response.json();\r\n \r\n+            // ✅ If blocked, show modal\r\n+            if (result.blocked) {\r\n+                document.getElementById('blockedDays').textContent = result.blockedDays;\r\n+                document.getElementById('blockModal').classList.remove('hidden');\r\n+                return; // stop login flow\r\n+            }\r\n \r\n+            if (!result.success) {\r\n+                showError(result.message || 'Email or password is wrong');\r\n+                return;\r\n+            }\r\n+\r\n+            // ✅ Only save if login is valid\r\n+            if (remember) {\r\n+                localStorage.setItem('rememberEmail', email);\r\n+            } else {\r\n+                localStorage.removeItem('rememberEmail');\r\n+            }\r\n+\r\n+            // Store current user email\r\n+            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem('isLoggedIn', 'true');\r\n+\r\n+            showSuccess('Login successful! Redirecting...');\r\n+            setTimeout(() => {\r\n+                window.location.href = '../../browse-book.html';\r\n+            }, 1500);\r\n+\r\n+        } catch (error) {\r\n+            showError('Server is offline. Please try again later.');\r\n+            console.error(error);\r\n+        }\r\n+\r\n+\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758726418093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,72 +10,86 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    loginForm.addEventListener('submit', async function (e) {\r\n-        e.preventDefault();\r\n+    llet isSubmitting = false;\r\n \r\n-        const email = emailInput.value.trim();\r\n-        const password = passwordInput.value.trim();\r\n-        const remember = rememberCheckbox.checked;\r\n+loginForm.addEventListener(\"submit\", async function (e) {\r\n+    e.preventDefault();\r\n+    if (isSubmitting) return; // block spam\r\n+    isSubmitting = true;\r\n \r\n-        // Basic validation\r\n-        if (!email || !password) {\r\n-            showError('Please fill in all fields');\r\n+    const email = emailInput.value.trim();\r\n+    const password = passwordInput.value.trim();\r\n+    const remember = rememberCheckbox.checked;\r\n+\r\n+    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n+    submitBtn.disabled = true;\r\n+    submitBtn.textContent = \"Logging in...\";\r\n+\r\n+    // ✅ Basic validation\r\n+    if (!email || !password) {\r\n+        showError(\"Please fill in all fields\");\r\n+        resetSubmitBtn();\r\n+        return;\r\n+    }\r\n+    if (!isValidEmail(email)) {\r\n+        showError(\"Please enter a valid email address\");\r\n+        resetSubmitBtn();\r\n+        return;\r\n+    }\r\n+    if (password.length < 6) {\r\n+        showError(\"Password must be at least 6 characters long\");\r\n+        resetSubmitBtn();\r\n+        return;\r\n+    }\r\n+\r\n+    try {\r\n+        const response = await fetch(\"http://127.0.0.1:5000/login\", {\r\n+            method: \"POST\",\r\n+            headers: { \"Content-Type\": \"application/json\" },\r\n+            body: JSON.stringify({ email, password })\r\n+        });\r\n+\r\n+        const result = await response.json();\r\n+\r\n+        // ✅ If blocked, show modal\r\n+        if (result.blocked) {\r\n+            document.getElementById(\"blockedDays\").textContent = result.blockedDays;\r\n+            document.getElementById(\"blockModal\").classList.remove(\"hidden\");\r\n+            resetSubmitBtn();\r\n             return;\r\n         }\r\n-        if (!isValidEmail(email)) {\r\n-            showError('Please enter a valid email address');\r\n+\r\n+        if (!result.success) {\r\n+            showError(result.message || \"Email or password is wrong\");\r\n+            resetSubmitBtn();\r\n             return;\r\n         }\r\n-        if (password.length < 6) {\r\n-            showError('Password must be at least 6 characters long');\r\n-            return;\r\n+\r\n+        // ✅ Remember email only if checked\r\n+        if (remember) {\r\n+            localStorage.setItem(\"rememberEmail\", email);\r\n+        } else {\r\n+            localStorage.removeItem(\"rememberEmail\");\r\n         }\r\n \r\n-        try {\r\n-            const response = await fetch('http://127.0.0.1:5000/login', {\r\n-                method: 'POST',\r\n-                headers: { 'Content-Type': 'application/json' },\r\n-                body: JSON.stringify({ email, password })\r\n-            });\r\n+        // ✅ Save user session\r\n+        localStorage.setItem(\"currentUser\", JSON.stringify({ email: result.email }));\r\n+        localStorage.setItem(\"isLoggedIn\", \"true\");\r\n \r\n-            const result = await response.json();\r\n+        showSuccess(\"Login successful! Redirecting...\");\r\n+        setTimeout(() => {\r\n+            window.location.href = \"../../browse-book.html\";\r\n+        }, 1500);\r\n \r\n-            // ✅ If blocked, show modal\r\n-            if (result.blocked) {\r\n-                document.getElementById('blockedDays').textContent = result.blockedDays;\r\n-                document.getElementById('blockModal').classList.remove('hidden');\r\n-                return; // stop login flow\r\n-            }\r\n+    } catch (error) {\r\n+        showError(\"Server is offline. Please try again later.\");\r\n+        console.error(error);\r\n+        resetSubmitBtn();\r\n+    }\r\n \r\n-            if (!result.success) {\r\n-                showError(result.message || 'Email or password is wrong');\r\n-                return;\r\n-            }\r\n \r\n-            // ✅ Only save if login is valid\r\n-            if (remember) {\r\n-                localStorage.setItem('rememberEmail', email);\r\n-            } else {\r\n-                localStorage.removeItem('rememberEmail');\r\n-            }\r\n-\r\n-            // Store current user email\r\n-            localStorage.setItem('currentUser', JSON.stringify({ email: result.email }));\r\n-            localStorage.setItem('isLoggedIn', 'true');\r\n-\r\n-            showSuccess('Login successful! Redirecting...');\r\n-            setTimeout(() => {\r\n-                window.location.href = '../../browse-book.html';\r\n-            }, 1500);\r\n-\r\n-        } catch (error) {\r\n-            showError('Server is offline. Please try again later.');\r\n-            console.error(error);\r\n-        }\r\n-\r\n-\r\n     });\r\n \r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n"
                },
                {
                    "date": 1758726425898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,9 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-    llet isSubmitting = false;\r\n+let isSubmitting = false;\r\n \r\n loginForm.addEventListener(\"submit\", async function (e) {\r\n     e.preventDefault();\r\n     if (isSubmitting) return; // block spam\r\n"
                },
                {
                    "date": 1758726442038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,88 +10,95 @@\n         emailInput.value = localStorage.getItem('rememberEmail');\r\n         rememberCheckbox.checked = true;\r\n     }\r\n \r\n-let isSubmitting = false;\r\n+    let isSubmitting = false;\r\n \r\n-loginForm.addEventListener(\"submit\", async function (e) {\r\n-    e.preventDefault();\r\n-    if (isSubmitting) return; // block spam\r\n-    isSubmitting = true;\r\n+    loginForm.addEventListener(\"submit\", async function (e) {\r\n+        e.preventDefault();\r\n+        if (isSubmitting) return; // block spam\r\n+        isSubmitting = true;\r\n \r\n-    const email = emailInput.value.trim();\r\n-    const password = passwordInput.value.trim();\r\n-    const remember = rememberCheckbox.checked;\r\n+        const email = emailInput.value.trim();\r\n+        const password = passwordInput.value.trim();\r\n+        const remember = rememberCheckbox.checked;\r\n \r\n-    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n-    submitBtn.disabled = true;\r\n-    submitBtn.textContent = \"Logging in...\";\r\n+        const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n+        submitBtn.disabled = true;\r\n+        submitBtn.textContent = \"Logging in...\";\r\n \r\n-    // ✅ Basic validation\r\n-    if (!email || !password) {\r\n-        showError(\"Please fill in all fields\");\r\n-        resetSubmitBtn();\r\n-        return;\r\n-    }\r\n-    if (!isValidEmail(email)) {\r\n-        showError(\"Please enter a valid email address\");\r\n-        resetSubmitBtn();\r\n-        return;\r\n-    }\r\n-    if (password.length < 6) {\r\n-        showError(\"Password must be at least 6 characters long\");\r\n-        resetSubmitBtn();\r\n-        return;\r\n-    }\r\n-\r\n-    try {\r\n-        const response = await fetch(\"http://127.0.0.1:5000/login\", {\r\n-            method: \"POST\",\r\n-            headers: { \"Content-Type\": \"application/json\" },\r\n-            body: JSON.stringify({ email, password })\r\n-        });\r\n-\r\n-        const result = await response.json();\r\n-\r\n-        // ✅ If blocked, show modal\r\n-        if (result.blocked) {\r\n-            document.getElementById(\"blockedDays\").textContent = result.blockedDays;\r\n-            document.getElementById(\"blockModal\").classList.remove(\"hidden\");\r\n+        // ✅ Basic validation\r\n+        if (!email || !password) {\r\n+            showError(\"Please fill in all fields\");\r\n             resetSubmitBtn();\r\n             return;\r\n         }\r\n-\r\n-        if (!result.success) {\r\n-            showError(result.message || \"Email or password is wrong\");\r\n+        if (!isValidEmail(email)) {\r\n+            showError(\"Please enter a valid email address\");\r\n             resetSubmitBtn();\r\n             return;\r\n         }\r\n-\r\n-        // ✅ Remember email only if checked\r\n-        if (remember) {\r\n-            localStorage.setItem(\"rememberEmail\", email);\r\n-        } else {\r\n-            localStorage.removeItem(\"rememberEmail\");\r\n+        if (password.length < 6) {\r\n+            showError(\"Password must be at least 6 characters long\");\r\n+            resetSubmitBtn();\r\n+            return;\r\n         }\r\n \r\n-        // ✅ Save user session\r\n-        localStorage.setItem(\"currentUser\", JSON.stringify({ email: result.email }));\r\n-        localStorage.setItem(\"isLoggedIn\", \"true\");\r\n+        try {\r\n+            const response = await fetch(\"http://127.0.0.1:5000/login\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email, password })\r\n+            });\r\n \r\n-        showSuccess(\"Login successful! Redirecting...\");\r\n-        setTimeout(() => {\r\n-            window.location.href = \"../../browse-book.html\";\r\n-        }, 1500);\r\n+            const result = await response.json();\r\n \r\n-    } catch (error) {\r\n-        showError(\"Server is offline. Please try again later.\");\r\n-        console.error(error);\r\n-        resetSubmitBtn();\r\n-    }\r\n+            // ✅ If blocked, show modal\r\n+            if (result.blocked) {\r\n+                document.getElementById(\"blockedDays\").textContent = result.blockedDays;\r\n+                document.getElementById(\"blockModal\").classList.remove(\"hidden\");\r\n+                resetSubmitBtn();\r\n+                return;\r\n+            }\r\n \r\n+            if (!result.success) {\r\n+                showError(result.message || \"Email or password is wrong\");\r\n+                resetSubmitBtn();\r\n+                return;\r\n+            }\r\n \r\n+            // ✅ Remember email only if checked\r\n+            if (remember) {\r\n+                localStorage.setItem(\"rememberEmail\", email);\r\n+            } else {\r\n+                localStorage.removeItem(\"rememberEmail\");\r\n+            }\r\n+\r\n+            // ✅ Save user session\r\n+            localStorage.setItem(\"currentUser\", JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem(\"isLoggedIn\", \"true\");\r\n+\r\n+            showSuccess(\"Login successful! Redirecting...\");\r\n+            setTimeout(() => {\r\n+                window.location.href = \"../../browse-book.html\";\r\n+            }, 1500);\r\n+\r\n+        } catch (error) {\r\n+            showError(\"Server is offline. Please try again later.\");\r\n+            console.error(error);\r\n+            resetSubmitBtn();\r\n+        }\r\n+\r\n+\r\n     });\r\n \r\n+    function resetSubmitBtn() {\r\n+    isSubmitting = false;\r\n+    const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n+    submitBtn.disabled = false;\r\n+    submitBtn.textContent = \"Login\";\r\n+}\r\n+\r\n     // Email validation function\r\n     function isValidEmail(email) {\r\n         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n         return emailRegex.test(email);\r\n"
                },
                {
                    "date": 1760970202662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,25 +73,42 @@\n                 localStorage.removeItem(\"rememberEmail\");\r\n             }\r\n \r\n             // ✅ Save user session\r\n-            localStorage.setItem(\"currentUser\", JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem(\"currentUser\", JSON.stringify({\r\n+                email: result.email,\r\n+                fullName: result.fullName,\r\n+                userId: result.userId // we'll return this from backend\r\n+            }));\r\n             localStorage.setItem(\"isLoggedIn\", \"true\");\r\n \r\n             showSuccess(\"Login successful! Redirecting...\");\r\n+\r\n+            // ✅ Redirect logic\r\n             setTimeout(() => {\r\n-                window.location.href = \"../../browse-book.html\";\r\n+                if (result.userId === 14) {\r\n+                    window.location.href = \"../pages/Admin/admin.html\";\r\n+                } else {\r\n+                    window.location.href = \"../../browse-book.html\";\r\n+                }\r\n             }, 1500);\r\n \r\n         } catch (error) {\r\n             showError(\"Server is offline. Please try again later.\");\r\n             console.error(error);\r\n             resetSubmitBtn();\r\n         }\r\n \r\n+        function resetSubmitBtn() {\r\n+            isSubmitting = false;\r\n+            submitBtn.disabled = false;\r\n+            submitBtn.textContent = \"Login\";\r\n+        }\r\n \r\n     });\r\n+});\r\n \r\n+\r\n     function resetSubmitBtn() {\r\n     isSubmitting = false;\r\n     const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n     submitBtn.disabled = false;\r\n"
                },
                {
                    "date": 1760970212054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,75 +97,70 @@\n             console.error(error);\r\n             resetSubmitBtn();\r\n         }\r\n \r\n-        function resetSubmitBtn() {\r\n-            isSubmitting = false;\r\n-            submitBtn.disabled = false;\r\n-            submitBtn.textContent = \"Login\";\r\n-        }\r\n \r\n     });\r\n });\r\n \r\n \r\n-    function resetSubmitBtn() {\r\n+function resetSubmitBtn() {\r\n     isSubmitting = false;\r\n     const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n     submitBtn.disabled = false;\r\n     submitBtn.textContent = \"Login\";\r\n }\r\n \r\n-    // Email validation function\r\n-    function isValidEmail(email) {\r\n-        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n-        return emailRegex.test(email);\r\n-    }\r\n+// Email validation function\r\n+function isValidEmail(email) {\r\n+    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n+    return emailRegex.test(email);\r\n+}\r\n \r\n-    function showError(message) {\r\n-        showNotification(message, 'error');\r\n-    }\r\n+function showError(message) {\r\n+    showNotification(message, 'error');\r\n+}\r\n \r\n-    function showSuccess(message) {\r\n-        showNotification(message, 'success');\r\n-    }\r\n+function showSuccess(message) {\r\n+    showNotification(message, 'success');\r\n+}\r\n \r\n-    // Notification system\r\n-    function showNotification(message, type = 'info') {\r\n-        const existingNotifications = document.querySelectorAll('.notification');\r\n-        existingNotifications.forEach(notification => notification.remove());\r\n+// Notification system\r\n+function showNotification(message, type = 'info') {\r\n+    const existingNotifications = document.querySelectorAll('.notification');\r\n+    existingNotifications.forEach(notification => notification.remove());\r\n \r\n-        const notification = document.createElement('div');\r\n-        notification.className = `notification notification-${type}`;\r\n-        notification.textContent = message;\r\n+    const notification = document.createElement('div');\r\n+    notification.className = `notification notification-${type}`;\r\n+    notification.textContent = message;\r\n \r\n-        const styles = {\r\n-            position: 'fixed',\r\n-            top: '20px',\r\n-            right: '20px',\r\n-            padding: '1rem 2rem',\r\n-            borderRadius: '8px',\r\n-            color: 'white',\r\n-            fontWeight: '500',\r\n-            zIndex: '1001',\r\n-            animation: 'slideIn 0.3s ease-out',\r\n-            boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n-        };\r\n+    const styles = {\r\n+        position: 'fixed',\r\n+        top: '20px',\r\n+        right: '20px',\r\n+        padding: '1rem 2rem',\r\n+        borderRadius: '8px',\r\n+        color: 'white',\r\n+        fontWeight: '500',\r\n+        zIndex: '1001',\r\n+        animation: 'slideIn 0.3s ease-out',\r\n+        boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n+    };\r\n \r\n-        if (type === 'error') {\r\n-            styles.background = '#dc3545';\r\n-        } else if (type === 'success') {\r\n-            styles.background = '#28a745';\r\n-        } else {\r\n-            styles.background = '#17a2b8';\r\n-        }\r\n+    if (type === 'error') {\r\n+        styles.background = '#dc3545';\r\n+    } else if (type === 'success') {\r\n+        styles.background = '#28a745';\r\n+    } else {\r\n+        styles.background = '#17a2b8';\r\n+    }\r\n \r\n-        Object.assign(notification.style, styles);\r\n+    Object.assign(notification.style, styles);\r\n \r\n-        if (!document.querySelector('#notification-styles')) {\r\n-            const style = document.createElement('style');\r\n-            style.id = 'notification-styles';\r\n-            style.textContent = `\r\n+    if (!document.querySelector('#notification-styles')) {\r\n+        const style = document.createElement('style');\r\n+        style.id = 'notification-styles';\r\n+        style.textContent = `\r\n                 @keyframes slideIn {\r\n                     from { transform: translateX(100%); opacity: 0; }\r\n                     to { transform: translateX(0); opacity: 1; }\r\n                 }\r\n@@ -173,50 +168,50 @@\n                     from { transform: translateX(0); opacity: 1; }\r\n                     to { transform: translateX(100%); opacity: 0; }\r\n                 }\r\n             `;\r\n-            document.head.appendChild(style);\r\n-        }\r\n+        document.head.appendChild(style);\r\n+    }\r\n \r\n-        document.body.appendChild(notification);\r\n+    document.body.appendChild(notification);\r\n \r\n+    setTimeout(() => {\r\n+        notification.style.animation = 'slideOut 0.3s ease-in';\r\n         setTimeout(() => {\r\n-            notification.style.animation = 'slideOut 0.3s ease-in';\r\n-            setTimeout(() => {\r\n-                if (notification.parentNode) {\r\n-                    notification.parentNode.removeChild(notification);\r\n-                }\r\n-            }, 300);\r\n-        }, 5000);\r\n-    }\r\n+            if (notification.parentNode) {\r\n+                notification.parentNode.removeChild(notification);\r\n+            }\r\n+        }, 300);\r\n+    }, 5000);\r\n+}\r\n \r\n-    const forgotLink = document.getElementById(\"forgotLink\");\r\n+const forgotLink = document.getElementById(\"forgotLink\");\r\n \r\n-    forgotLink.addEventListener(\"click\", function (e) {\r\n-        const email = emailInput.value.trim();\r\n+forgotLink.addEventListener(\"click\", function (e) {\r\n+    const email = emailInput.value.trim();\r\n \r\n-        if (!email) {\r\n-            e.preventDefault(); // stop redirect\r\n-            alert(\"Please enter your email before proceeding to forgot password.\");\r\n-            return;\r\n-        }\r\n+    if (!email) {\r\n+        e.preventDefault(); // stop redirect\r\n+        alert(\"Please enter your email before proceeding to forgot password.\");\r\n+        return;\r\n+    }\r\n \r\n-        // Save email to localStorage in JSON format\r\n-        localStorage.setItem(\"emailOTP\", JSON.stringify({ email }));\r\n-    });\r\n+    // Save email to localStorage in JSON format\r\n+    localStorage.setItem(\"emailOTP\", JSON.stringify({ email }));\r\n+});\r\n \r\n \r\n-    // Input focus effects\r\n-    const inputs = document.querySelectorAll('input');\r\n-    inputs.forEach(input => {\r\n-        input.addEventListener('focus', function () {\r\n-            this.parentElement.classList.add('focused');\r\n-        });\r\n+// Input focus effects\r\n+const inputs = document.querySelectorAll('input');\r\n+inputs.forEach(input => {\r\n+    input.addEventListener('focus', function () {\r\n+        this.parentElement.classList.add('focused');\r\n+    });\r\n \r\n-        input.addEventListener('blur', function () {\r\n-            if (!this.value) {\r\n-                this.parentElement.classList.remove('focused');\r\n-            }\r\n-        });\r\n+    input.addEventListener('blur', function () {\r\n+        if (!this.value) {\r\n+            this.parentElement.classList.remove('focused');\r\n+        }\r\n     });\r\n });\r\n+});\r\n \r\n"
                },
                {
                    "date": 1760970227071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,8 @@\n             console.error(error);\r\n             resetSubmitBtn();\r\n         }\r\n \r\n-\r\n     });\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1760970282222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,8 +97,14 @@\n             console.error(error);\r\n             resetSubmitBtn();\r\n         }\r\n \r\n+        function resetSubmitBtn() {\r\n+            isSubmitting = false;\r\n+            submitBtn.disabled = false;\r\n+            submitBtn.textContent = \"Login\";\r\n+        }\r\n+\r\n     });\r\n });\r\n \r\n \r\n"
                },
                {
                    "date": 1760970297765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,99 +73,82 @@\n                 localStorage.removeItem(\"rememberEmail\");\r\n             }\r\n \r\n             // ✅ Save user session\r\n-            localStorage.setItem(\"currentUser\", JSON.stringify({\r\n-                email: result.email,\r\n-                fullName: result.fullName,\r\n-                userId: result.userId // we'll return this from backend\r\n-            }));\r\n+            localStorage.setItem(\"currentUser\", JSON.stringify({ email: result.email }));\r\n             localStorage.setItem(\"isLoggedIn\", \"true\");\r\n \r\n             showSuccess(\"Login successful! Redirecting...\");\r\n-\r\n-            // ✅ Redirect logic\r\n             setTimeout(() => {\r\n-                if (result.userId === 14) {\r\n-                    window.location.href = \"../pages/Admin/admin.html\";\r\n-                } else {\r\n-                    window.location.href = \"../../browse-book.html\";\r\n-                }\r\n+                window.location.href = \"../../browse-book.html\";\r\n             }, 1500);\r\n \r\n         } catch (error) {\r\n             showError(\"Server is offline. Please try again later.\");\r\n             console.error(error);\r\n             resetSubmitBtn();\r\n         }\r\n \r\n-        function resetSubmitBtn() {\r\n-            isSubmitting = false;\r\n-            submitBtn.disabled = false;\r\n-            submitBtn.textContent = \"Login\";\r\n-        }\r\n \r\n     });\r\n-});\r\n \r\n-\r\n-function resetSubmitBtn() {\r\n+    function resetSubmitBtn() {\r\n     isSubmitting = false;\r\n     const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n     submitBtn.disabled = false;\r\n     submitBtn.textContent = \"Login\";\r\n }\r\n \r\n-// Email validation function\r\n-function isValidEmail(email) {\r\n-    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n-    return emailRegex.test(email);\r\n-}\r\n+    // Email validation function\r\n+    function isValidEmail(email) {\r\n+        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n+        return emailRegex.test(email);\r\n+    }\r\n \r\n-function showError(message) {\r\n-    showNotification(message, 'error');\r\n-}\r\n+    function showError(message) {\r\n+        showNotification(message, 'error');\r\n+    }\r\n \r\n-function showSuccess(message) {\r\n-    showNotification(message, 'success');\r\n-}\r\n+    function showSuccess(message) {\r\n+        showNotification(message, 'success');\r\n+    }\r\n \r\n-// Notification system\r\n-function showNotification(message, type = 'info') {\r\n-    const existingNotifications = document.querySelectorAll('.notification');\r\n-    existingNotifications.forEach(notification => notification.remove());\r\n+    // Notification system\r\n+    function showNotification(message, type = 'info') {\r\n+        const existingNotifications = document.querySelectorAll('.notification');\r\n+        existingNotifications.forEach(notification => notification.remove());\r\n \r\n-    const notification = document.createElement('div');\r\n-    notification.className = `notification notification-${type}`;\r\n-    notification.textContent = message;\r\n+        const notification = document.createElement('div');\r\n+        notification.className = `notification notification-${type}`;\r\n+        notification.textContent = message;\r\n \r\n-    const styles = {\r\n-        position: 'fixed',\r\n-        top: '20px',\r\n-        right: '20px',\r\n-        padding: '1rem 2rem',\r\n-        borderRadius: '8px',\r\n-        color: 'white',\r\n-        fontWeight: '500',\r\n-        zIndex: '1001',\r\n-        animation: 'slideIn 0.3s ease-out',\r\n-        boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n-    };\r\n+        const styles = {\r\n+            position: 'fixed',\r\n+            top: '20px',\r\n+            right: '20px',\r\n+            padding: '1rem 2rem',\r\n+            borderRadius: '8px',\r\n+            color: 'white',\r\n+            fontWeight: '500',\r\n+            zIndex: '1001',\r\n+            animation: 'slideIn 0.3s ease-out',\r\n+            boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n+        };\r\n \r\n-    if (type === 'error') {\r\n-        styles.background = '#dc3545';\r\n-    } else if (type === 'success') {\r\n-        styles.background = '#28a745';\r\n-    } else {\r\n-        styles.background = '#17a2b8';\r\n-    }\r\n+        if (type === 'error') {\r\n+            styles.background = '#dc3545';\r\n+        } else if (type === 'success') {\r\n+            styles.background = '#28a745';\r\n+        } else {\r\n+            styles.background = '#17a2b8';\r\n+        }\r\n \r\n-    Object.assign(notification.style, styles);\r\n+        Object.assign(notification.style, styles);\r\n \r\n-    if (!document.querySelector('#notification-styles')) {\r\n-        const style = document.createElement('style');\r\n-        style.id = 'notification-styles';\r\n-        style.textContent = `\r\n+        if (!document.querySelector('#notification-styles')) {\r\n+            const style = document.createElement('style');\r\n+            style.id = 'notification-styles';\r\n+            style.textContent = `\r\n                 @keyframes slideIn {\r\n                     from { transform: translateX(100%); opacity: 0; }\r\n                     to { transform: translateX(0); opacity: 1; }\r\n                 }\r\n@@ -173,50 +156,50 @@\n                     from { transform: translateX(0); opacity: 1; }\r\n                     to { transform: translateX(100%); opacity: 0; }\r\n                 }\r\n             `;\r\n-        document.head.appendChild(style);\r\n-    }\r\n+            document.head.appendChild(style);\r\n+        }\r\n \r\n-    document.body.appendChild(notification);\r\n+        document.body.appendChild(notification);\r\n \r\n-    setTimeout(() => {\r\n-        notification.style.animation = 'slideOut 0.3s ease-in';\r\n         setTimeout(() => {\r\n-            if (notification.parentNode) {\r\n-                notification.parentNode.removeChild(notification);\r\n-            }\r\n-        }, 300);\r\n-    }, 5000);\r\n-}\r\n+            notification.style.animation = 'slideOut 0.3s ease-in';\r\n+            setTimeout(() => {\r\n+                if (notification.parentNode) {\r\n+                    notification.parentNode.removeChild(notification);\r\n+                }\r\n+            }, 300);\r\n+        }, 5000);\r\n+    }\r\n \r\n-const forgotLink = document.getElementById(\"forgotLink\");\r\n+    const forgotLink = document.getElementById(\"forgotLink\");\r\n \r\n-forgotLink.addEventListener(\"click\", function (e) {\r\n-    const email = emailInput.value.trim();\r\n+    forgotLink.addEventListener(\"click\", function (e) {\r\n+        const email = emailInput.value.trim();\r\n \r\n-    if (!email) {\r\n-        e.preventDefault(); // stop redirect\r\n-        alert(\"Please enter your email before proceeding to forgot password.\");\r\n-        return;\r\n-    }\r\n+        if (!email) {\r\n+            e.preventDefault(); // stop redirect\r\n+            alert(\"Please enter your email before proceeding to forgot password.\");\r\n+            return;\r\n+        }\r\n \r\n-    // Save email to localStorage in JSON format\r\n-    localStorage.setItem(\"emailOTP\", JSON.stringify({ email }));\r\n-});\r\n+        // Save email to localStorage in JSON format\r\n+        localStorage.setItem(\"emailOTP\", JSON.stringify({ email }));\r\n+    });\r\n \r\n \r\n-// Input focus effects\r\n-const inputs = document.querySelectorAll('input');\r\n-inputs.forEach(input => {\r\n-    input.addEventListener('focus', function () {\r\n-        this.parentElement.classList.add('focused');\r\n-    });\r\n+    // Input focus effects\r\n+    const inputs = document.querySelectorAll('input');\r\n+    inputs.forEach(input => {\r\n+        input.addEventListener('focus', function () {\r\n+            this.parentElement.classList.add('focused');\r\n+        });\r\n \r\n-    input.addEventListener('blur', function () {\r\n-        if (!this.value) {\r\n-            this.parentElement.classList.remove('focused');\r\n-        }\r\n+        input.addEventListener('blur', function () {\r\n+            if (!this.value) {\r\n+                this.parentElement.classList.remove('focused');\r\n+            }\r\n+        });\r\n     });\r\n });\r\n-});\r\n \r\n"
                },
                {
                    "date": 1760970323718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// Login functionality\r\n document.addEventListener('DOMContentLoaded', function () {\r\n     const loginForm = document.getElementById('loginForm');\r\n     const emailInput = document.getElementById('email');\r\n     const passwordInput = document.getElementById('password');\r\n@@ -73,24 +72,40 @@\n                 localStorage.removeItem(\"rememberEmail\");\r\n             }\r\n \r\n             // ✅ Save user session\r\n-            localStorage.setItem(\"currentUser\", JSON.stringify({ email: result.email }));\r\n+            localStorage.setItem(\"currentUser\", JSON.stringify({\r\n+                email: result.email,\r\n+                fullName: result.fullName,\r\n+                userId: result.userId // we'll return this from backend\r\n+            }));\r\n             localStorage.setItem(\"isLoggedIn\", \"true\");\r\n \r\n             showSuccess(\"Login successful! Redirecting...\");\r\n+\r\n+            // ✅ Redirect logic\r\n             setTimeout(() => {\r\n-                window.location.href = \"../../browse-book.html\";\r\n+                if (result.userId === 14) {\r\n+                    window.location.href = \"../pages/Admin/admin.html\";\r\n+                } else {\r\n+                    window.location.href = \"../../browse-book.html\";\r\n+                }\r\n             }, 1500);\r\n \r\n         } catch (error) {\r\n             showError(\"Server is offline. Please try again later.\");\r\n             console.error(error);\r\n             resetSubmitBtn();\r\n         }\r\n \r\n+        function resetSubmitBtn() {\r\n+            isSubmitting = false;\r\n+            submitBtn.disabled = false;\r\n+            submitBtn.textContent = \"Login\";\r\n+        }\r\n \r\n     });\r\n+});\r\n \r\n     function resetSubmitBtn() {\r\n     isSubmitting = false;\r\n     const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n"
                },
                {
                    "date": 1760970329024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,10 +103,8 @@\n             submitBtn.textContent = \"Login\";\r\n         }\r\n \r\n     });\r\n-});\r\n-\r\n     function resetSubmitBtn() {\r\n     isSubmitting = false;\r\n     const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n     submitBtn.disabled = false;\r\n"
                },
                {
                    "date": 1760970337643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,15 +96,17 @@\n             console.error(error);\r\n             resetSubmitBtn();\r\n         }\r\n \r\n-        function resetSubmitBtn() {\r\n-            isSubmitting = false;\r\n-            submitBtn.disabled = false;\r\n-            submitBtn.textContent = \"Login\";\r\n-        }\r\n+        // function resetSubmitBtn() {\r\n+        //     isSubmitting = false;\r\n+        //     submitBtn.disabled = false;\r\n+        //     submitBtn.textContent = \"Login\";\r\n+        // }\r\n \r\n     });\r\n+\r\n+\r\n     function resetSubmitBtn() {\r\n     isSubmitting = false;\r\n     const submitBtn = loginForm.querySelector('button[type=\"submit\"]');\r\n     submitBtn.disabled = false;\r\n"
                },
                {
                    "date": 1761052109569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n             setTimeout(() => {\r\n                 if (result.userId === 14) {\r\n                     window.location.href = \"../pages/Admin/admin.html\";\r\n                 } else {\r\n-                    window.location.href = \"../../browse-book.html\";\r\n+                    window.location.href = \"..browse-book.html\";\r\n                 }\r\n             }, 1500);\r\n \r\n         } catch (error) {\r\n"
                }
            ],
            "date": 1756827466317,
            "name": "Commit-0",
            "content": "// Login functionality\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const loginForm = document.getElementById('loginForm');\r\n    const emailInput = document.getElementById('email');\r\n    const passwordInput = document.getElementById('password');\r\n    const rememberCheckbox = document.getElementById('remember');\r\n\r\n    // Load saved email if \"Remember Me\" was checked\r\n    if (localStorage.getItem('rememberEmail')) {\r\n        emailInput.value = localStorage.getItem('rememberEmail');\r\n        rememberCheckbox.checked = true;\r\n    }\r\n\r\n    loginForm.addEventListener('submit', function(e) {\r\n        e.preventDefault();\r\n        \r\n        const email = emailInput.value.trim();\r\n        const password = passwordInput.value.trim();\r\n        const remember = rememberCheckbox.checked;\r\n\r\n        // Basic validation\r\n        if (!email || !password) {\r\n            showError('Please fill in all fields');\r\n            return;\r\n        }\r\n\r\n        if (!isValidEmail(email)) {\r\n            showError('Please enter a valid email address');\r\n            return;\r\n        }\r\n\r\n        if (password.length < 6) {\r\n            showError('Password must be at least 6 characters long');\r\n            return;\r\n        }\r\n\r\n        // Simulate login process\r\n        showSuccess('Signing in...');\r\n        \r\n        // Simulate API call delay\r\n        setTimeout(() => {\r\n            // For demo purposes, accept any valid email/password combination\r\n          // Inside your successful login block:\r\nif (email && password) {\r\n    // Save email if remember me is checked\r\n    if (remember) {\r\n        localStorage.setItem('rememberEmail', email);\r\n    } else {\r\n        localStorage.removeItem('rememberEmail');\r\n    }\r\n\r\n    // Store login state\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n    localStorage.setItem('userEmail', email);\r\n\r\n    // ✅ Save current user object (you can also store other info like cart)\r\n    const currentUser = {\r\n        email: email,\r\n        // cart: [], // optional, if you want to store cart here\r\n    };\r\n    localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n\r\n    showSuccess('Login successful! Redirecting...');\r\n\r\n    setTimeout(() => {\r\n        window.location.href = '../../index.html';\r\n    }, 1500);\r\n}\r\n\r\n            } else {\r\n                showError('Invalid credentials. Please try again.');\r\n            }\r\n        }, 2000);\r\n    });\r\n\r\n    // Email validation function\r\n    function isValidEmail(email) {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailRegex.test(email);\r\n    }\r\n\r\n    // Show error message\r\n    function showError(message) {\r\n        showNotification(message, 'error');\r\n    }\r\n\r\n    // Show success message\r\n    function showSuccess(message) {\r\n        showNotification(message, 'success');\r\n    }\r\n\r\n    // Notification system\r\n    function showNotification(message, type = 'info') {\r\n        // Remove existing notifications\r\n        const existingNotifications = document.querySelectorAll('.notification');\r\n        existingNotifications.forEach(notification => notification.remove());\r\n\r\n        // Create notification element\r\n        const notification = document.createElement('div');\r\n        notification.className = `notification notification-${type}`;\r\n        notification.textContent = message;\r\n        \r\n        // Style based on type\r\n        const styles = {\r\n            position: 'fixed',\r\n            top: '20px',\r\n            right: '20px',\r\n            padding: '1rem 2rem',\r\n            borderRadius: '8px',\r\n            color: 'white',\r\n            fontWeight: '500',\r\n            zIndex: '1001',\r\n            animation: 'slideIn 0.3s ease-out',\r\n            boxShadow: '0 4px 12px rgba(0,0,0,0.15)'\r\n        };\r\n\r\n        if (type === 'error') {\r\n            styles.background = '#dc3545';\r\n        } else if (type === 'success') {\r\n            styles.background = '#28a745';\r\n        } else {\r\n            styles.background = '#17a2b8';\r\n        }\r\n\r\n        Object.assign(notification.style, styles);\r\n\r\n        // Add animation CSS if not already present\r\n        if (!document.querySelector('#notification-styles')) {\r\n            const style = document.createElement('style');\r\n            style.id = 'notification-styles';\r\n            style.textContent = `\r\n                @keyframes slideIn {\r\n                    from { transform: translateX(100%); opacity: 0; }\r\n                    to { transform: translateX(0); opacity: 1; }\r\n                }\r\n                @keyframes slideOut {\r\n                    from { transform: translateX(0); opacity: 1; }\r\n                    to { transform: translateX(100%); opacity: 0; }\r\n                }\r\n            `;\r\n            document.head.appendChild(style);\r\n        }\r\n\r\n        document.body.appendChild(notification);\r\n\r\n        // Remove notification after 5 seconds\r\n        setTimeout(() => {\r\n            notification.style.animation = 'slideOut 0.3s ease-in';\r\n            setTimeout(() => {\r\n                if (notification.parentNode) {\r\n                    notification.parentNode.removeChild(notification);\r\n                }\r\n            }, 300);\r\n        }, 5000);\r\n    }\r\n\r\n    // Add input focus effects\r\n    const inputs = document.querySelectorAll('input');\r\n    inputs.forEach(input => {\r\n        input.addEventListener('focus', function() {\r\n            this.parentElement.classList.add('focused');\r\n        });\r\n\r\n        input.addEventListener('blur', function() {\r\n            if (!this.value) {\r\n                this.parentElement.classList.remove('focused');\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n"
        }
    ]
}
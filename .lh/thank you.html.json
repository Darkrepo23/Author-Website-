{
    "sourceFile": "thank you.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1756836778683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1756837087498,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,47 +119,59 @@\n \r\n <a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n <script>\r\n-  function loadPurchasedBooks() {\r\n-    try {\r\n-      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n-      if (!currentUser) {\r\n-        console.warn(\"No current user found.\");\r\n-        return;\r\n-      }\r\n+function loadPurchasedBooks() {\r\n+  try {\r\n+    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n+    if (!currentUser) {\r\n+      console.warn(\"No current user found.\");\r\n+      return;\r\n+    }\r\n \r\n-      const users = JSON.parse(localStorage.getItem('users')) || [];\r\n-      const user = users.find(u => u.email === currentUser.email);\r\n+    const users = JSON.parse(localStorage.getItem('users')) || [];\r\n+    const user = users.find(u => u.email === currentUser.email);\r\n \r\n-      if (!user || !user.cart || user.cart.length === 0) {\r\n-        console.warn(\"No purchased books found for this user.\");\r\n-        return;\r\n-      }\r\n+    if (!user || !user.cart || user.cart.length === 0) {\r\n+      console.warn(\"No purchased books found for this user.\");\r\n+      return;\r\n+    }\r\n \r\n-      const bookCards = document.getElementById('bookCards');\r\n+    // Example JSON book data (could be loaded from server or localStorage)\r\n+    const allBooks = [\r\n+      { title: \"Java: The Complete Reference\", image: \"img/books/Java Complete.jpg\" },\r\n+      { title: \"Python Crash Course\", image: \"img/books/Python Crash.jpg\" },\r\n+      { title: \"C Programming\", image: \"img/books/C Programming.jpg\" }\r\n+    ];\r\n \r\n-      user.cart.forEach((book, index) => {\r\n-        const li = document.createElement('li');\r\n-        li.style.animationDelay = `${index * 0.1}s`; // stagger animation\r\n+    const bookCards = document.getElementById('bookCards');\r\n+    bookCards.innerHTML = \"\"; // clear old cards first\r\n \r\n-        li.innerHTML = `\r\n-          <div class=\"book-cover\" style=\"background-image: url('${book.image}');\"></div>\r\n-          <div class=\"book-info\">\r\n-            <h3>${book.title}</h3>\r\n-            <p>$${Number(book.price).toFixed(2)}</p>\r\n-          </div>\r\n-        `;\r\n+    user.cart.forEach((book, index) => {\r\n+      // find book image by matching title\r\n+      const match = allBooks.find(b => b.title === book.title);\r\n \r\n-        bookCards.appendChild(li);\r\n-      });\r\n+      const li = document.createElement('li');\r\n+      li.style.animationDelay = `${index * 0.1}s`; // stagger animation\r\n \r\n-    } catch (err) {\r\n-      console.error('Error loading purchased books:', err);\r\n-    }\r\n+      li.innerHTML = `\r\n+        <div class=\"book-cover\" style=\"background-image: url('${match ? match.image : \"img/books/default.jpg\"}');\"></div>\r\n+        <div class=\"book-info\">\r\n+          <h3>${book.title}</h3>\r\n+          <p>$${Number(book.price).toFixed(2)}</p>\r\n+        </div>\r\n+      `;\r\n+\r\n+      bookCards.appendChild(li);\r\n+    });\r\n+\r\n+  } catch (err) {\r\n+    console.error('Error loading purchased books:', err);\r\n   }\r\n+}\r\n \r\n-  document.addEventListener('DOMContentLoaded', loadPurchasedBooks);\r\n+document.addEventListener('DOMContentLoaded', loadPurchasedBooks);\r\n+\r\n </script>\r\n \r\n </body>\r\n </html>\r\n"
                },
                {
                    "date": 1756837277008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,9 @@\n }\r\n \r\n document.addEventListener('DOMContentLoaded', loadPurchasedBooks);\r\n \r\n+\r\n </script>\r\n \r\n </body>\r\n </html>\r\n"
                },
                {
                    "date": 1756837577801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n \r\n <a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n <script>\r\n-function loadPurchasedBooks() {\r\n+async function loadPurchasedBooks() {\r\n   try {\r\n     const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n     if (!currentUser) {\r\n       console.warn(\"No current user found.\");\r\n@@ -135,23 +135,23 @@\n       console.warn(\"No purchased books found for this user.\");\r\n       return;\r\n     }\r\n \r\n-    // Example JSON book data (could be loaded from server or localStorage)\r\n-    const allBooks = [\r\n-      { title: \"Java: The Complete Reference\", image: \"img/books/Java Complete.jpg\" },\r\n-      { title: \"Python Crash Course\", image: \"img/books/Python Crash.jpg\" },\r\n-      { title: \"C Programming\", image: \"img/books/C Programming.jpg\" }\r\n-    ];\r\n+    // Fetch all-books.json\r\n+    const response = await fetch(\"all-books.json\");\r\n+    if (!response.ok) {\r\n+      throw new Error(\"Failed to load all-books.json\");\r\n+    }\r\n+    const allBooks = await response.json(); // Expecting [{title, image}, ...]\r\n \r\n-    const bookCards = document.getElementById('bookCards');\r\n+    const bookCards = document.getElementById(\"bookCards\");\r\n     bookCards.innerHTML = \"\"; // clear old cards first\r\n \r\n     user.cart.forEach((book, index) => {\r\n       // find book image by matching title\r\n       const match = allBooks.find(b => b.title === book.title);\r\n \r\n-      const li = document.createElement('li');\r\n+      const li = document.createElement(\"li\");\r\n       li.style.animationDelay = `${index * 0.1}s`; // stagger animation\r\n \r\n       li.innerHTML = `\r\n         <div class=\"book-cover\" style=\"background-image: url('${match ? match.image : \"img/books/default.jpg\"}');\"></div>\r\n@@ -164,13 +164,13 @@\n       bookCards.appendChild(li);\r\n     });\r\n \r\n   } catch (err) {\r\n-    console.error('Error loading purchased books:', err);\r\n+    console.error(\"Error loading purchased books:\", err);\r\n   }\r\n }\r\n \r\n-document.addEventListener('DOMContentLoaded', loadPurchasedBooks);\r\n+document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n \r\n </script>\r\n \r\n"
                },
                {
                    "date": 1756837747925,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,178 +1,200 @@\n <!DOCTYPE html>\r\n <html lang=\"en\">\r\n+\r\n <head>\r\n-<meta charset=\"UTF-8\">\r\n-<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n-<title>Thank You for Your Purchase</title>\r\n-<style>\r\n-  body {\r\n-    font-family: 'Inter', sans-serif;\r\n-    background: #f0f2f5;\r\n-    margin: 0;\r\n-    padding: 2rem;\r\n-    display: flex;\r\n-    flex-direction: column;\r\n-    align-items: center;\r\n-  }\r\n+  <meta charset=\"UTF-8\">\r\n+  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n+  <title>Thank You for Your Purchase</title>\r\n+  <style>\r\n+    body {\r\n+      font-family: 'Inter', sans-serif;\r\n+      background: #f0f2f5;\r\n+      margin: 0;\r\n+      padding: 2rem;\r\n+      display: flex;\r\n+      flex-direction: column;\r\n+      align-items: center;\r\n+    }\r\n \r\n-  h1 {\r\n-    color: #333;\r\n-    margin-bottom: 0.5rem;\r\n-    font-size: 2rem;\r\n-    text-align: center;\r\n-  }\r\n+    h1 {\r\n+      color: #333;\r\n+      margin-bottom: 0.5rem;\r\n+      font-size: 2rem;\r\n+      text-align: center;\r\n+    }\r\n \r\n-  p {\r\n-    color: #555;\r\n-    margin-bottom: 2rem;\r\n-    text-align: center;\r\n-  }\r\n+    p {\r\n+      color: #555;\r\n+      margin-bottom: 2rem;\r\n+      text-align: center;\r\n+    }\r\n \r\n-  ul.book-cards {\r\n-    display: flex;\r\n-    flex-wrap: wrap;\r\n-    list-style: none;\r\n-    padding: 0;\r\n-    gap: 1rem;\r\n-    justify-content: center;\r\n-  }\r\n+    ul.book-cards {\r\n+      display: flex;\r\n+      flex-wrap: wrap;\r\n+      list-style: none;\r\n+      padding: 0;\r\n+      gap: 1rem;\r\n+      justify-content: center;\r\n+    }\r\n \r\n-  ul.book-cards li {\r\n-    background: #fff;\r\n-    width: 150px;\r\n-    border-radius: 12px;\r\n-    box-shadow: 0 5px 15px rgba(0,0,0,0.1);\r\n-    overflow: hidden;\r\n-    text-align: center;\r\n-    transform: translateY(20px);\r\n-    opacity: 0;\r\n-    animation: fadeInUp 0.6s forwards;\r\n-  }\r\n+    ul.book-cards li {\r\n+      background: #fff;\r\n+      width: 150px;\r\n+      border-radius: 12px;\r\n+      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n+      overflow: hidden;\r\n+      text-align: center;\r\n+      transform: translateY(20px);\r\n+      opacity: 0;\r\n+      animation: fadeInUp 0.6s forwards;\r\n+    }\r\n \r\n-  ul.book-cards li:hover {\r\n-    transform: translateY(-5px);\r\n-    box-shadow: 0 10px 20px rgba(0,0,0,0.2);\r\n-  }\r\n+    ul.book-cards li:hover {\r\n+      transform: translateY(-5px);\r\n+      box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\r\n+    }\r\n \r\n-  .book-cover {\r\n-    width: 100%;\r\n-    height: 200px;\r\n-    background-size: cover;\r\n-    background-position: center;\r\n-    border-bottom: 1px solid #eee;\r\n-  }\r\n+    .book-cover {\r\n+      width: 100%;\r\n+      height: 200px;\r\n+      background-size: cover;\r\n+      background-position: center;\r\n+      border-bottom: 1px solid #eee;\r\n+    }\r\n \r\n-  .book-info {\r\n-    padding: 0.5rem;\r\n-  }\r\n+    .book-info {\r\n+      padding: 0.5rem;\r\n+    }\r\n \r\n-  .book-info h3 {\r\n-    font-size: 0.9rem;\r\n-    margin: 0.5rem 0;\r\n-    color: #333;\r\n-  }\r\n+    .book-info h3 {\r\n+      font-size: 0.9rem;\r\n+      margin: 0.5rem 0;\r\n+      color: #333;\r\n+    }\r\n \r\n-  .book-info p {\r\n-    font-size: 0.85rem;\r\n-    color: #777;\r\n-    margin: 0 0 0.5rem 0;\r\n-  }\r\n+    .book-info p {\r\n+      font-size: 0.85rem;\r\n+      color: #777;\r\n+      margin: 0 0 0.5rem 0;\r\n+    }\r\n \r\n-  @keyframes fadeInUp {\r\n-    0% {\r\n-      opacity: 0;\r\n-      transform: translateY(20px);\r\n+    @keyframes fadeInUp {\r\n+      0% {\r\n+        opacity: 0;\r\n+        transform: translateY(20px);\r\n+      }\r\n+\r\n+      100% {\r\n+        opacity: 1;\r\n+        transform: translateY(0);\r\n+      }\r\n     }\r\n-    100% {\r\n-      opacity: 1;\r\n-      transform: translateY(0);\r\n+\r\n+    .browse-btn {\r\n+      margin-top: 2rem;\r\n+      padding: 0.8rem 1.5rem;\r\n+      background-color: #4CAF50;\r\n+      color: #fff;\r\n+      font-size: 1rem;\r\n+      border: none;\r\n+      border-radius: 8px;\r\n+      cursor: pointer;\r\n+      transition: transform 0.3s, background-color 0.3s;\r\n+      text-decoration: none;\r\n     }\r\n-  }\r\n \r\n-  .browse-btn {\r\n-    margin-top: 2rem;\r\n-    padding: 0.8rem 1.5rem;\r\n-    background-color: #4CAF50;\r\n-    color: #fff;\r\n-    font-size: 1rem;\r\n-    border: none;\r\n-    border-radius: 8px;\r\n-    cursor: pointer;\r\n-    transition: transform 0.3s, background-color 0.3s;\r\n-    text-decoration: none;\r\n-  }\r\n+    .browse-btn:hover {\r\n+      background-color: #45a049;\r\n+      transform: scale(1.05);\r\n+    }\r\n+  </style>\r\n+</head>\r\n \r\n-  .browse-btn:hover {\r\n-    background-color: #45a049;\r\n-    transform: scale(1.05);\r\n-  }\r\n-</style>\r\n-</head>\r\n <body>\r\n \r\n-<h1>Thank You for Your Purchase!</h1>\r\n-<p>Here are the books you bought:</p>\r\n+  <h1>Thank You for Your Purchase!</h1>\r\n+  <p>Here are the books you bought:</p>\r\n \r\n-<ul class=\"book-cards\" id=\"bookCards\">\r\n-  <!-- User's purchased books will appear here -->\r\n-</ul>\r\n+  <ul class=\"book-cards\" id=\"bookCards\">\r\n+    <!-- User's purchased books will appear here -->\r\n+  </ul>\r\n \r\n-<a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n+  <a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n-<script>\r\n-async function loadPurchasedBooks() {\r\n-  try {\r\n-    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n-    if (!currentUser) {\r\n-      console.warn(\"No current user found.\");\r\n-      return;\r\n-    }\r\n+  <script>\r\n+ async function loadPurchasedBooks() {\r\n+    try {\r\n+      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n+      if (!currentUser) {\r\n+        console.warn(\"No current user found.\");\r\n+        return;\r\n+      }\r\n \r\n-    const users = JSON.parse(localStorage.getItem('users')) || [];\r\n-    const user = users.find(u => u.email === currentUser.email);\r\n+      const users = JSON.parse(localStorage.getItem('users')) || [];\r\n+      const user = users.find(u => u.email === currentUser.email);\r\n \r\n-    if (!user || !user.cart || user.cart.length === 0) {\r\n-      console.warn(\"No purchased books found for this user.\");\r\n-      return;\r\n-    }\r\n+      if (!user || !user.cart || user.cart.length === 0) {\r\n+        console.warn(\"No purchased books found for this user.\");\r\n+        return;\r\n+      }\r\n \r\n-    // Fetch all-books.json\r\n-    const response = await fetch(\"all-books.json\");\r\n-    if (!response.ok) {\r\n-      throw new Error(\"Failed to load all-books.json\");\r\n-    }\r\n-    const allBooks = await response.json(); // Expecting [{title, image}, ...]\r\n+      // Fetch all-books.json\r\n+      const response = await fetch(\"all-books.json\");\r\n+      if (!response.ok) {\r\n+        throw new Error(\"Failed to load all-books.json\");\r\n+      }\r\n+      const allBooks = await response.json(); // Expecting [{title, image}, ...]\r\n \r\n-    const bookCards = document.getElementById(\"bookCards\");\r\n-    bookCards.innerHTML = \"\"; // clear old cards first\r\n+      const bookCards = document.getElementById(\"bookCards\");\r\n+      bookCards.innerHTML = \"\"; // clear old cards first\r\n \r\n-    user.cart.forEach((book, index) => {\r\n-      // find book image by matching title\r\n-      const match = allBooks.find(b => b.title === book.title);\r\n+      user.cart.forEach((book, index) => {\r\n+        // find book image by matching title\r\n+        const match = allBooks.find(b => b.title === book.title);\r\n \r\n-      const li = document.createElement(\"li\");\r\n-      li.style.animationDelay = `${index * 0.1}s`; // stagger animation\r\n+        const li = document.createElement(\"li\");\r\n+        li.style.animationDelay = `${index * 0.1}s`; // stagger animation\r\n \r\n-      li.innerHTML = `\r\n-        <div class=\"book-cover\" style=\"background-image: url('${match ? match.image : \"img/books/default.jpg\"}');\"></div>\r\n-        <div class=\"book-info\">\r\n-          <h3>${book.title}</h3>\r\n-          <p>$${Number(book.price).toFixed(2)}</p>\r\n-        </div>\r\n-      `;\r\n+        li.innerHTML = `\r\n+          <div class=\"book-cover\" style=\"background-image: url('${match ? match.image : \"img/books/default.jpg\"}');\"></div>\r\n+          <div class=\"book-info\">\r\n+            <h3>${book.title}</h3>\r\n+            <p>$${Number(book.price).toFixed(2)}</p>\r\n+          </div>\r\n+        `;\r\n \r\n-      bookCards.appendChild(li);\r\n-    });\r\n+        bookCards.appendChild(li);\r\n+      });\r\n \r\n-  } catch (err) {\r\n-    console.error(\"Error loading purchased books:\", err);\r\n+      // --- Handle Browse Button ---\r\n+      const browseBtn = document.querySelector(\".browse-btn\");\r\n+      if (browseBtn) {\r\n+        browseBtn.addEventListener(\"click\", () => {\r\n+          // Clear cart for current user\r\n+          const updatedUsers = users.map(u => {\r\n+            if (u.email === currentUser.email) {\r\n+              return { ...u, cart: [] }; // empty the cart\r\n+            }\r\n+            return u;\r\n+          });\r\n+\r\n+          localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\r\n+\r\n+          // Optional: Redirect to browse page\r\n+          window.location.href = \"browse.html\"; \r\n+        });\r\n+      }\r\n+\r\n+    } catch (err) {\r\n+      console.error(\"Error loading purchased books:\", err);\r\n+    }\r\n   }\r\n-}\r\n \r\n-document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n+  document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n+  </script>\r\n \r\n-</script>\r\n+</body>\r\n \r\n-</body>\r\n-</html>\r\n+</html>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757254958551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,77 +122,91 @@\n \r\n   <a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n- async function loadPurchasedBooks() {\r\n+  async function loadPurchasedBooks() {\r\n     try {\r\n-      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n-      if (!currentUser) {\r\n-        console.warn(\"No current user found.\");\r\n-        return;\r\n-      }\r\n+        // 1️⃣ Get current user\r\n+        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n+        if (!currentUser || !currentUser.email) {\r\n+            console.warn(\"No current user found.\");\r\n+            return;\r\n+        }\r\n \r\n-      const users = JSON.parse(localStorage.getItem('users')) || [];\r\n-      const user = users.find(u => u.email === currentUser.email);\r\n+        // 2️⃣ Fetch user's cart from backend\r\n+        const response = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n+            method: \"POST\",\r\n+            headers: { \"Content-Type\": \"application/json\" },\r\n+            body: JSON.stringify({ email: currentUser.email })\r\n+        });\r\n \r\n-      if (!user || !user.cart || user.cart.length === 0) {\r\n-        console.warn(\"No purchased books found for this user.\");\r\n-        return;\r\n-      }\r\n+        const result = await response.json();\r\n+        if (!result.success || !result.cart || result.cart.length === 0) {\r\n+            console.warn(\"No purchased books found for this user.\");\r\n+            return;\r\n+        }\r\n \r\n-      // Fetch all-books.json\r\n-      const response = await fetch(\"all-books.json\");\r\n-      if (!response.ok) {\r\n-        throw new Error(\"Failed to load all-books.json\");\r\n-      }\r\n-      const allBooks = await response.json(); // Expecting [{title, image}, ...]\r\n+        const userCart = result.cart; // array of book titles\r\n \r\n-      const bookCards = document.getElementById(\"bookCards\");\r\n-      bookCards.innerHTML = \"\"; // clear old cards first\r\n+        // 3️⃣ Fetch all-books.json to get book images and prices\r\n+        const booksResponse = await fetch(\"all-books.json\");\r\n+        if (!booksResponse.ok) throw new Error(\"Failed to load all-books.json\");\r\n+        const allBooks = await booksResponse.json(); // [{title, image, price, author}, ...]\r\n \r\n-      user.cart.forEach((book, index) => {\r\n-        // find book image by matching title\r\n-        const match = allBooks.find(b => b.title === book.title);\r\n+        // 4️⃣ Render books\r\n+        const bookCards = document.getElementById(\"bookCards\");\r\n+        bookCards.innerHTML = \"\"; // clear previous content\r\n \r\n-        const li = document.createElement(\"li\");\r\n-        li.style.animationDelay = `${index * 0.1}s`; // stagger animation\r\n+        userCart.forEach((title, index) => {\r\n+            const book = allBooks.find(b => b.title === title);\r\n \r\n-        li.innerHTML = `\r\n-          <div class=\"book-cover\" style=\"background-image: url('${match ? match.image : \"img/books/default.jpg\"}');\"></div>\r\n-          <div class=\"book-info\">\r\n-            <h3>${book.title}</h3>\r\n-            <p>$${Number(book.price).toFixed(2)}</p>\r\n-          </div>\r\n-        `;\r\n+            const li = document.createElement(\"li\");\r\n+            li.style.animationDelay = `${index * 0.1}s`;\r\n \r\n-        bookCards.appendChild(li);\r\n-      });\r\n+            li.innerHTML = `\r\n+                <div class=\"book-cover\" style=\"background-image: url('${book ? book.image : \"img/books/default.jpg\"}');\"></div>\r\n+                <div class=\"book-info\">\r\n+                    <h3>${title}</h3>\r\n+                    <p>$${book ? Number(book.price).toFixed(2) : \"0.00\"}</p>\r\n+                    <p>${book ? book.author : \"\"}</p>\r\n+                </div>\r\n+            `;\r\n \r\n-      // --- Handle Browse Button ---\r\n-      const browseBtn = document.querySelector(\".browse-btn\");\r\n-      if (browseBtn) {\r\n-        browseBtn.addEventListener(\"click\", () => {\r\n-          // Clear cart for current user\r\n-          const updatedUsers = users.map(u => {\r\n-            if (u.email === currentUser.email) {\r\n-              return { ...u, cart: [] }; // empty the cart\r\n-            }\r\n-            return u;\r\n-          });\r\n+            bookCards.appendChild(li);\r\n+        });\r\n \r\n-          localStorage.setItem(\"users\", JSON.stringify(updatedUsers));\r\n+        // 5️⃣ Handle Browse Button\r\n+        const browseBtn = document.querySelector(\".browse-btn\");\r\n+        if (browseBtn) {\r\n+            browseBtn.addEventListener(\"click\", async () => {\r\n+                try {\r\n+                    // Clear backend cart for current user\r\n+                    const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n+                        method: \"POST\",\r\n+                        headers: { \"Content-Type\": \"application/json\" },\r\n+                        body: JSON.stringify({ email: currentUser.email })\r\n+                    });\r\n+                    const clearResult = await clearResponse.json();\r\n \r\n-          // Optional: Redirect to browse page\r\n-          window.location.href = \"browse.html\"; \r\n-        });\r\n-      }\r\n+                    if (!clearResult.success) {\r\n+                        console.warn(\"Failed to clear cart in backend\");\r\n+                        return;\r\n+                    }\r\n \r\n+                    // Redirect to browse page\r\n+                    window.location.href = \"browse.html\";\r\n+                } catch (err) {\r\n+                    console.error(\"Error clearing cart in backend:\", err);\r\n+                }\r\n+            });\r\n+        }\r\n+\r\n     } catch (err) {\r\n-      console.error(\"Error loading purchased books:\", err);\r\n+        console.error(\"Error loading purchased books:\", err);\r\n     }\r\n-  }\r\n+}\r\n \r\n-  document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n+document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n   </script>\r\n \r\n </body>\r\n"
                },
                {
                    "date": 1757255175211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,28 +122,28 @@\n \r\n   <a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n-  async function loadPurchasedBooks() {\r\n-    try {\r\n+    async function loadPurchasedBooks() {\r\n+      try {\r\n         // 1️⃣ Get current user\r\n         const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         if (!currentUser || !currentUser.email) {\r\n-            console.warn(\"No current user found.\");\r\n-            return;\r\n+          console.warn(\"No current user found.\");\r\n+          return;\r\n         }\r\n \r\n         // 2️⃣ Fetch user's cart from backend\r\n         const response = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n-            method: \"POST\",\r\n-            headers: { \"Content-Type\": \"application/json\" },\r\n-            body: JSON.stringify({ email: currentUser.email })\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify({ email: currentUser.email })\r\n         });\r\n \r\n         const result = await response.json();\r\n         if (!result.success || !result.cart || result.cart.length === 0) {\r\n-            console.warn(\"No purchased books found for this user.\");\r\n-            return;\r\n+          console.warn(\"No purchased books found for this user.\");\r\n+          return;\r\n         }\r\n \r\n         const userCart = result.cart; // array of book titles\r\n \r\n@@ -156,58 +156,86 @@\n         const bookCards = document.getElementById(\"bookCards\");\r\n         bookCards.innerHTML = \"\"; // clear previous content\r\n \r\n         userCart.forEach((title, index) => {\r\n-            const book = allBooks.find(b => b.title === title);\r\n+          const book = allBooks.find(b => b.title === title);\r\n \r\n-            const li = document.createElement(\"li\");\r\n-            li.style.animationDelay = `${index * 0.1}s`;\r\n+          const li = document.createElement(\"li\");\r\n+          li.style.animationDelay = `${index * 0.1}s`;\r\n \r\n-            li.innerHTML = `\r\n+          li.innerHTML = `\r\n                 <div class=\"book-cover\" style=\"background-image: url('${book ? book.image : \"img/books/default.jpg\"}');\"></div>\r\n                 <div class=\"book-info\">\r\n                     <h3>${title}</h3>\r\n                     <p>$${book ? Number(book.price).toFixed(2) : \"0.00\"}</p>\r\n                     <p>${book ? book.author : \"\"}</p>\r\n                 </div>\r\n             `;\r\n \r\n-            bookCards.appendChild(li);\r\n+          bookCards.appendChild(li);\r\n         });\r\n \r\n         // 5️⃣ Handle Browse Button\r\n-        const browseBtn = document.querySelector(\".browse-btn\");\r\n-        if (browseBtn) {\r\n-            browseBtn.addEventListener(\"click\", async () => {\r\n-                try {\r\n-                    // Clear backend cart for current user\r\n-                    const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n-                        method: \"POST\",\r\n-                        headers: { \"Content-Type\": \"application/json\" },\r\n-                        body: JSON.stringify({ email: currentUser.email })\r\n-                    });\r\n-                    const clearResult = await clearResponse.json();\r\n+        cconst browseBtn = document.querySelector(\".browse-btn\");\r\n+if (browseBtn) {\r\n+  browseBtn.addEventListener(\"click\", async () => {\r\n+    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n+    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n-                    if (!clearResult.success) {\r\n-                        console.warn(\"Failed to clear cart in backend\");\r\n-                        return;\r\n-                    }\r\n+    try {\r\n+      // 1️⃣ Fetch current cart from backend\r\n+      const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email: currentUser.email })\r\n+      });\r\n+      const cartResult = await cartResponse.json();\r\n+      const cartItems = cartResult.cart || [];\r\n \r\n-                    // Redirect to browse page\r\n-                    window.location.href = \"browse.html\";\r\n-                } catch (err) {\r\n-                    console.error(\"Error clearing cart in backend:\", err);\r\n-                }\r\n-            });\r\n+      if (cartItems.length === 0) {\r\n+        console.warn(\"Cart is empty. Nothing to mark as paid.\");\r\n+      } else {\r\n+        // 2️⃣ Move all cart items into Paid_book column in DB\r\n+        const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify({ email: currentUser.email, paidBooks: cartItems })\r\n+        });\r\n+        const payResult = await payResponse.json();\r\n+\r\n+        if (!payResult.success) {\r\n+          console.warn(\"Failed to move cart items to Paid_book column\");\r\n+          return;\r\n         }\r\n \r\n+        console.log(\"All cart items moved to Paid_book successfully!\");\r\n+      }\r\n+\r\n+      // 3️⃣ Clear cart in backend\r\n+      const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email: currentUser.email })\r\n+      });\r\n+      const clearResult = await clearResponse.json();\r\n+\r\n+      if (!clearResult.success) {\r\n+        console.warn(\"Failed to clear cart in backend\");\r\n+        return;\r\n+      }\r\n+\r\n+      // 4️⃣ Redirect to browse page\r\n+      window.location.href = \"browse.html\";\r\n+\r\n     } catch (err) {\r\n-        console.error(\"Error loading purchased books:\", err);\r\n+      console.error(\"Error processing cart:\", err);\r\n     }\r\n+  });\r\n }\r\n \r\n-document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n+    document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n+\r\n   </script>\r\n \r\n </body>\r\n \r\n"
                },
                {
                    "date": 1757255181656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,9 +174,9 @@\n           bookCards.appendChild(li);\r\n         });\r\n \r\n         // 5️⃣ Handle Browse Button\r\n-        cconst browseBtn = document.querySelector(\".browse-btn\");\r\n+      const browseBtn = document.querySelector(\".browse-btn\");\r\n if (browseBtn) {\r\n   browseBtn.addEventListener(\"click\", async () => {\r\n     const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n     if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n@@ -231,9 +231,8 @@\n     }\r\n   });\r\n }\r\n \r\n-\r\n     document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n   </script>\r\n \r\n"
                },
                {
                    "date": 1757255191382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,64 +174,37 @@\n           bookCards.appendChild(li);\r\n         });\r\n \r\n         // 5️⃣ Handle Browse Button\r\n-      const browseBtn = document.querySelector(\".browse-btn\");\r\n-if (browseBtn) {\r\n-  browseBtn.addEventListener(\"click\", async () => {\r\n-    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n-    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n+        const browseBtn = document.querySelector(\".browse-btn\");\r\n+        if (browseBtn) {\r\n+          browseBtn.addEventListener(\"click\", async () => {\r\n+            try {\r\n+              // Clear backend cart for current user\r\n+              const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email })\r\n+              });\r\n+              const clearResult = await clearResponse.json();\r\n \r\n-    try {\r\n-      // 1️⃣ Fetch current cart from backend\r\n-      const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email: currentUser.email })\r\n-      });\r\n-      const cartResult = await cartResponse.json();\r\n-      const cartItems = cartResult.cart || [];\r\n+              if (!clearResult.success) {\r\n+                console.warn(\"Failed to clear cart in backend\");\r\n+                return;\r\n+              }\r\n \r\n-      if (cartItems.length === 0) {\r\n-        console.warn(\"Cart is empty. Nothing to mark as paid.\");\r\n-      } else {\r\n-        // 2️⃣ Move all cart items into Paid_book column in DB\r\n-        const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify({ email: currentUser.email, paidBooks: cartItems })\r\n-        });\r\n-        const payResult = await payResponse.json();\r\n-\r\n-        if (!payResult.success) {\r\n-          console.warn(\"Failed to move cart items to Paid_book column\");\r\n-          return;\r\n+              // Redirect to browse page\r\n+              window.location.href = \"browse.html\";\r\n+            } catch (err) {\r\n+              console.error(\"Error clearing cart in backend:\", err);\r\n+            }\r\n+          });\r\n         }\r\n \r\n-        console.log(\"All cart items moved to Paid_book successfully!\");\r\n+      } catch (err) {\r\n+        console.error(\"Error loading purchased books:\", err);\r\n       }\r\n-\r\n-      // 3️⃣ Clear cart in backend\r\n-      const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email: currentUser.email })\r\n-      });\r\n-      const clearResult = await clearResponse.json();\r\n-\r\n-      if (!clearResult.success) {\r\n-        console.warn(\"Failed to clear cart in backend\");\r\n-        return;\r\n-      }\r\n-\r\n-      // 4️⃣ Redirect to browse page\r\n-      window.location.href = \"browse.html\";\r\n-\r\n-    } catch (err) {\r\n-      console.error(\"Error processing cart:\", err);\r\n     }\r\n-  });\r\n-}\r\n \r\n     document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n   </script>\r\n"
                },
                {
                    "date": 1757255200531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,38 +173,64 @@\n \r\n           bookCards.appendChild(li);\r\n         });\r\n \r\n-        // 5️⃣ Handle Browse Button\r\n-        const browseBtn = document.querySelector(\".browse-btn\");\r\n-        if (browseBtn) {\r\n-          browseBtn.addEventListener(\"click\", async () => {\r\n-            try {\r\n-              // Clear backend cart for current user\r\n-              const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email })\r\n-              });\r\n-              const clearResult = await clearResponse.json();\r\n+const browseBtn = document.querySelector(\".browse-btn\");\r\n+if (browseBtn) {\r\n+  browseBtn.addEventListener(\"click\", async () => {\r\n+    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n+    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n-              if (!clearResult.success) {\r\n-                console.warn(\"Failed to clear cart in backend\");\r\n-                return;\r\n-              }\r\n+    try {\r\n+      // 1️⃣ Fetch current cart from backend\r\n+      const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email: currentUser.email })\r\n+      });\r\n+      const cartResult = await cartResponse.json();\r\n+      const cartItems = cartResult.cart || [];\r\n \r\n-              // Redirect to browse page\r\n-              window.location.href = \"browse.html\";\r\n-            } catch (err) {\r\n-              console.error(\"Error clearing cart in backend:\", err);\r\n-            }\r\n-          });\r\n+      if (cartItems.length === 0) {\r\n+        console.warn(\"Cart is empty. Nothing to mark as paid.\");\r\n+      } else {\r\n+        // 2️⃣ Move all cart items into Paid_book column in DB\r\n+        const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify({ email: currentUser.email, paidBooks: cartItems })\r\n+        });\r\n+        const payResult = await payResponse.json();\r\n+\r\n+        if (!payResult.success) {\r\n+          console.warn(\"Failed to move cart items to Paid_book column\");\r\n+          return;\r\n         }\r\n \r\n-      } catch (err) {\r\n-        console.error(\"Error loading purchased books:\", err);\r\n+        console.log(\"All cart items moved to Paid_book successfully!\");\r\n       }\r\n+\r\n+      // 3️⃣ Clear cart in backend\r\n+      const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ email: currentUser.email })\r\n+      });\r\n+      const clearResult = await clearResponse.json();\r\n+\r\n+      if (!clearResult.success) {\r\n+        console.warn(\"Failed to clear cart in backend\");\r\n+        return;\r\n+      }\r\n+\r\n+      // 4️⃣ Redirect to browse page\r\n+      window.location.href = \"browse.html\";\r\n+\r\n+    } catch (err) {\r\n+      console.error(\"Error processing cart:\", err);\r\n     }\r\n+  });\r\n+}\r\n \r\n     document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n   </script>\r\n"
                },
                {
                    "date": 1757255209499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -173,8 +173,9 @@\n \r\n           bookCards.appendChild(li);\r\n         });\r\n \r\n+        // 5️⃣ Handle Browse Button\r\n const browseBtn = document.querySelector(\".browse-btn\");\r\n if (browseBtn) {\r\n   browseBtn.addEventListener(\"click\", async () => {\r\n     const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n@@ -230,8 +231,14 @@\n     }\r\n   });\r\n }\r\n \r\n+\r\n+      } catch (err) {\r\n+        console.error(\"Error loading purchased books:\", err);\r\n+      }\r\n+    }\r\n+\r\n     document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n   </script>\r\n \r\n"
                },
                {
                    "date": 1757255421714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,64 +176,66 @@\n \r\n         // 5️⃣ Handle Browse Button\r\n const browseBtn = document.querySelector(\".browse-btn\");\r\n if (browseBtn) {\r\n-  browseBtn.addEventListener(\"click\", async () => {\r\n-    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n-    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n+    browseBtn.addEventListener(\"click\", async () => {\r\n+        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n+        if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n-    try {\r\n-      // 1️⃣ Fetch current cart from backend\r\n-      const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email: currentUser.email })\r\n-      });\r\n-      const cartResult = await cartResponse.json();\r\n-      const cartItems = cartResult.cart || [];\r\n+        try {\r\n+            // 1️⃣ Fetch current cart from backend\r\n+            const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email })\r\n+            });\r\n+            const cartResult = await cartResponse.json();\r\n+            const cartItems = cartResult.cart || [];\r\n \r\n-      if (cartItems.length === 0) {\r\n-        console.warn(\"Cart is empty. Nothing to mark as paid.\");\r\n-      } else {\r\n-        // 2️⃣ Move all cart items into Paid_book column in DB\r\n-        const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify({ email: currentUser.email, paidBooks: cartItems })\r\n-        });\r\n-        const payResult = await payResponse.json();\r\n+            if (cartItems.length === 0) {\r\n+                alert(\"Your cart is empty. Nothing to pay.\");\r\n+                return; // Stop here\r\n+            }\r\n \r\n-        if (!payResult.success) {\r\n-          console.warn(\"Failed to move cart items to Paid_book column\");\r\n-          return;\r\n-        }\r\n+            // 2️⃣ Move all cart items into Paid_book column in DB\r\n+            const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email, paidBooks: cartItems })\r\n+            });\r\n+            const payResult = await payResponse.json();\r\n \r\n-        console.log(\"All cart items moved to Paid_book successfully!\");\r\n-      }\r\n+            if (!payResult.success) {\r\n+                alert(\"Failed to move cart items to Paid_books. Please try again.\");\r\n+                return; // Stop if failed\r\n+            }\r\n \r\n-      // 3️⃣ Clear cart in backend\r\n-      const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ email: currentUser.email })\r\n-      });\r\n-      const clearResult = await clearResponse.json();\r\n+            console.log(\"All cart items moved to Paid_book successfully!\");\r\n \r\n-      if (!clearResult.success) {\r\n-        console.warn(\"Failed to clear cart in backend\");\r\n-        return;\r\n-      }\r\n+            // 3️⃣ Only now clear cart in backend\r\n+            const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email })\r\n+            });\r\n+            const clearResult = await clearResponse.json();\r\n \r\n-      // 4️⃣ Redirect to browse page\r\n-      window.location.href = \"browse.html\";\r\n+            if (!clearResult.success) {\r\n+                console.warn(\"Failed to clear cart in backend, but items were marked as paid.\");\r\n+            }\r\n \r\n-    } catch (err) {\r\n-      console.error(\"Error processing cart:\", err);\r\n-    }\r\n-  });\r\n+            // 4️⃣ Redirect to browse page\r\n+            window.location.href = \"browse.html\";\r\n+\r\n+        } catch (err) {\r\n+            console.error(\"Error processing cart:\", err);\r\n+            alert(\"An error occurred while processing your cart. Please try again.\");\r\n+        }\r\n+    });\r\n }\r\n \r\n \r\n+\r\n       } catch (err) {\r\n         console.error(\"Error loading purchased books:\", err);\r\n       }\r\n     }\r\n"
                },
                {
                    "date": 1757256344681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,50 +181,53 @@\n         const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n         if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n         try {\r\n-            // 1️⃣ Fetch current cart from backend\r\n+            // 1️⃣ Get cart from backend\r\n             const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n                 method: \"POST\",\r\n                 headers: { \"Content-Type\": \"application/json\" },\r\n                 body: JSON.stringify({ email: currentUser.email })\r\n             });\r\n             const cartResult = await cartResponse.json();\r\n-            const cartItems = cartResult.cart || [];\r\n+            const cartItems = cartResult.cart || []; // array of titles\r\n \r\n             if (cartItems.length === 0) {\r\n                 alert(\"Your cart is empty. Nothing to pay.\");\r\n-                return; // Stop here\r\n+                return;\r\n             }\r\n \r\n-            // 2️⃣ Move all cart items into Paid_book column in DB\r\n+            // 2️⃣ Make sure only titles\r\n+            const paidBooks = cartItems.map(item => typeof item === 'string' ? item : item.title);\r\n+\r\n+            // 3️⃣ Pay-cart\r\n             const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n                 method: \"POST\",\r\n                 headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email, paidBooks: cartItems })\r\n+                body: JSON.stringify({ email: currentUser.email, paidBooks })\r\n             });\r\n             const payResult = await payResponse.json();\r\n \r\n             if (!payResult.success) {\r\n-                alert(\"Failed to move cart items to Paid_books. Please try again.\");\r\n-                return; // Stop if failed\r\n+                return alert(\"Failed to move cart items to Paid_Book. Please try again.\");\r\n             }\r\n \r\n-            console.log(\"All cart items moved to Paid_book successfully!\");\r\n+            alert(\"All cart items moved to Paid_Book successfully!\");\r\n \r\n-            // 3️⃣ Only now clear cart in backend\r\n+            // 4️⃣ Clear cart in backend\r\n             const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n                 method: \"POST\",\r\n                 headers: { \"Content-Type\": \"application/json\" },\r\n                 body: JSON.stringify({ email: currentUser.email })\r\n             });\r\n             const clearResult = await clearResponse.json();\r\n-\r\n             if (!clearResult.success) {\r\n-                console.warn(\"Failed to clear cart in backend, but items were marked as paid.\");\r\n+                alert(\"Cart cleared partially. Some items may remain in cart.\");\r\n+            } else {\r\n+                alert(\"Cart cleared successfully!\");\r\n             }\r\n \r\n-            // 4️⃣ Redirect to browse page\r\n+            // 5️⃣ Redirect to browse page\r\n             window.location.href = \"browse.html\";\r\n \r\n         } catch (err) {\r\n             console.error(\"Error processing cart:\", err);\r\n"
                },
                {
                    "date": 1757256418379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -226,19 +226,17 @@\n                 alert(\"Cart cleared successfully!\");\r\n             }\r\n \r\n             // 5️⃣ Redirect to browse page\r\n-            window.location.href = \"browse.html\";\r\n+            // window.location.href = \"browse.html\";\r\n \r\n         } catch (err) {\r\n             console.error(\"Error processing cart:\", err);\r\n             alert(\"An error occurred while processing your cart. Please try again.\");\r\n         }\r\n     });\r\n }\r\n \r\n-\r\n-\r\n       } catch (err) {\r\n         console.error(\"Error loading purchased books:\", err);\r\n       }\r\n     }\r\n"
                },
                {
                    "date": 1757256798931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,68 +174,68 @@\n           bookCards.appendChild(li);\r\n         });\r\n \r\n         // 5️⃣ Handle Browse Button\r\n-const browseBtn = document.querySelector(\".browse-btn\");\r\n-if (browseBtn) {\r\n-    browseBtn.addEventListener(\"click\", async () => {\r\n-        const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n-        if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n+        const browseBtn = document.querySelector(\".browse-btn\");\r\n+        if (browseBtn) {\r\n+          browseBtn.addEventListener(\"click\", async () => {\r\n+            const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n+            if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n-        try {\r\n-            // 1️⃣ Get cart from backend\r\n-            const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n+            try {\r\n+              // 1️⃣ Get cart from backend\r\n+              const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n                 method: \"POST\",\r\n                 headers: { \"Content-Type\": \"application/json\" },\r\n                 body: JSON.stringify({ email: currentUser.email })\r\n-            });\r\n-            const cartResult = await cartResponse.json();\r\n-            const cartItems = cartResult.cart || []; // array of titles\r\n+              });\r\n+              const cartResult = await cartResponse.json();\r\n+              const cartItems = cartResult.cart || []; // array of titles\r\n \r\n-            if (cartItems.length === 0) {\r\n+              if (cartItems.length === 0) {\r\n                 alert(\"Your cart is empty. Nothing to pay.\");\r\n                 return;\r\n-            }\r\n+              }\r\n \r\n-            // 2️⃣ Make sure only titles\r\n-            const paidBooks = cartItems.map(item => typeof item === 'string' ? item : item.title);\r\n+              // 2️⃣ Make sure only titles\r\n+              const paidBooks = cartItems.map(item => typeof item === 'string' ? item : item.title);\r\n \r\n-            // 3️⃣ Pay-cart\r\n-            const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+              // 3️⃣ Pay-cart\r\n+              const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n                 method: \"POST\",\r\n                 headers: { \"Content-Type\": \"application/json\" },\r\n                 body: JSON.stringify({ email: currentUser.email, paidBooks })\r\n-            });\r\n-            const payResult = await payResponse.json();\r\n+              });\r\n+              const payResult = await payResponse.json();\r\n \r\n-            if (!payResult.success) {\r\n+              if (!payResult.success) {\r\n                 return alert(\"Failed to move cart items to Paid_Book. Please try again.\");\r\n-            }\r\n+              }\r\n \r\n-            alert(\"All cart items moved to Paid_Book successfully!\");\r\n+              alert(\"All cart items moved to Paid_Book successfully!\");\r\n \r\n-            // 4️⃣ Clear cart in backend\r\n-            const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n+              // 4️⃣ Clear cart in backend\r\n+              const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n                 method: \"POST\",\r\n                 headers: { \"Content-Type\": \"application/json\" },\r\n                 body: JSON.stringify({ email: currentUser.email })\r\n-            });\r\n-            const clearResult = await clearResponse.json();\r\n-            if (!clearResult.success) {\r\n+              });\r\n+              const clearResult = await clearResponse.json();\r\n+              if (!clearResult.success) {\r\n                 alert(\"Cart cleared partially. Some items may remain in cart.\");\r\n-            } else {\r\n+              } else {\r\n                 alert(\"Cart cleared successfully!\");\r\n-            }\r\n+              }\r\n \r\n-            // 5️⃣ Redirect to browse page\r\n-            // window.location.href = \"browse.html\";\r\n+              // 5️⃣ Redirect to browse page\r\n+              // window.location.href = \"browse.html\";\r\n \r\n-        } catch (err) {\r\n-            console.error(\"Error processing cart:\", err);\r\n-            alert(\"An error occurred while processing your cart. Please try again.\");\r\n+            } catch (err) {\r\n+              console.error(\"Error processing cart:\", err);\r\n+              alert(\"An error occurred while processing your cart. Please try again.\");\r\n+            }\r\n+          });\r\n         }\r\n-    });\r\n-}\r\n \r\n       } catch (err) {\r\n         console.error(\"Error loading purchased books:\", err);\r\n       }\r\n"
                },
                {
                    "date": 1757256821334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n   <ul class=\"book-cards\" id=\"bookCards\">\r\n     <!-- User's purchased books will appear here -->\r\n   </ul>\r\n \r\n-  <a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n+  <a href=\"#\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n     async function loadPurchasedBooks() {\r\n       try {\r\n"
                },
                {
                    "date": 1757257329845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,69 +174,34 @@\n           bookCards.appendChild(li);\r\n         });\r\n \r\n         // 5️⃣ Handle Browse Button\r\n-        const browseBtn = document.querySelector(\".browse-btn\");\r\n-        if (browseBtn) {\r\n-          browseBtn.addEventListener(\"click\", async () => {\r\n-            const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n-            if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n+      browseBtn.addEventListener(\"click\", async () => {\r\n+    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n+    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n-            try {\r\n-              // 1️⃣ Get cart from backend\r\n-              const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email })\r\n-              });\r\n-              const cartResult = await cartResponse.json();\r\n-              const cartItems = cartResult.cart || []; // array of titles\r\n+    try {\r\n+        const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+            method: \"POST\",\r\n+            headers: { \"Content-Type\": \"application/json\" },\r\n+            body: JSON.stringify({ email: currentUser.email })\r\n+        });\r\n \r\n-              if (cartItems.length === 0) {\r\n-                alert(\"Your cart is empty. Nothing to pay.\");\r\n-                return;\r\n-              }\r\n+        const result = await response.json();\r\n \r\n-              // 2️⃣ Make sure only titles\r\n-              const paidBooks = cartItems.map(item => typeof item === 'string' ? item : item.title);\r\n+        if (!result.success) return alert(result.message);\r\n \r\n-              // 3️⃣ Pay-cart\r\n-              const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email, paidBooks })\r\n-              });\r\n-              const payResult = await payResponse.json();\r\n+        alert(\"All cart items moved to Paid_Book successfully!\");\r\n+        // Optional: redirect to browse\r\n+        window.location.href = \"browse.html\";\r\n \r\n-              if (!payResult.success) {\r\n-                return alert(\"Failed to move cart items to Paid_Book. Please try again.\");\r\n-              }\r\n+    } catch (err) {\r\n+        console.error(\"Error processing cart:\", err);\r\n+        alert(\"An error occurred while processing your cart. Please try again.\");\r\n+    }\r\n+});\r\n \r\n-              alert(\"All cart items moved to Paid_Book successfully!\");\r\n \r\n-              // 4️⃣ Clear cart in backend\r\n-              const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email })\r\n-              });\r\n-              const clearResult = await clearResponse.json();\r\n-              if (!clearResult.success) {\r\n-                alert(\"Cart cleared partially. Some items may remain in cart.\");\r\n-              } else {\r\n-                alert(\"Cart cleared successfully!\");\r\n-              }\r\n-\r\n-              // 5️⃣ Redirect to browse page\r\n-              // window.location.href = \"browse.html\";\r\n-\r\n-            } catch (err) {\r\n-              console.error(\"Error processing cart:\", err);\r\n-              alert(\"An error occurred while processing your cart. Please try again.\");\r\n-            }\r\n-          });\r\n-        }\r\n-\r\n       } catch (err) {\r\n         console.error(\"Error loading purchased books:\", err);\r\n       }\r\n     }\r\n"
                },
                {
                    "date": 1757257378308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -174,34 +174,69 @@\n           bookCards.appendChild(li);\r\n         });\r\n \r\n         // 5️⃣ Handle Browse Button\r\n-      browseBtn.addEventListener(\"click\", async () => {\r\n-    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n-    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n+        const browseBtn = document.querySelector(\".browse-btn\");\r\n+        if (browseBtn) {\r\n+          browseBtn.addEventListener(\"click\", async () => {\r\n+            const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n+            if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n-    try {\r\n-        const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n-            method: \"POST\",\r\n-            headers: { \"Content-Type\": \"application/json\" },\r\n-            body: JSON.stringify({ email: currentUser.email })\r\n-        });\r\n+            try {\r\n+              // 1️⃣ Get cart from backend\r\n+              const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email })\r\n+              });\r\n+              const cartResult = await cartResponse.json();\r\n+              const cartItems = cartResult.cart || []; // array of titles\r\n \r\n-        const result = await response.json();\r\n+              if (cartItems.length === 0) {\r\n+                alert(\"Your cart is empty. Nothing to pay.\");\r\n+                return;\r\n+              }\r\n \r\n-        if (!result.success) return alert(result.message);\r\n+              // 2️⃣ Make sure only titles\r\n+              const paidBooks = cartItems.map(item => typeof item === 'string' ? item : item.title);\r\n \r\n-        alert(\"All cart items moved to Paid_Book successfully!\");\r\n-        // Optional: redirect to browse\r\n-        window.location.href = \"browse.html\";\r\n+              // 3️⃣ Pay-cart\r\n+              const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email, paidBooks })\r\n+              });\r\n+              const payResult = await payResponse.json();\r\n \r\n-    } catch (err) {\r\n-        console.error(\"Error processing cart:\", err);\r\n-        alert(\"An error occurred while processing your cart. Please try again.\");\r\n-    }\r\n-});\r\n+              if (!payResult.success) {\r\n+                return alert(\"Failed to move cart items to Paid_Book. Please try again.\");\r\n+              }\r\n \r\n+              alert(\"All cart items moved to Paid_Book successfully!\");\r\n \r\n+              // 4️⃣ Clear cart in backend\r\n+              const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email })\r\n+              });\r\n+              const clearResult = await clearResponse.json();\r\n+              if (!clearResult.success) {\r\n+                alert(\"Cart cleared partially. Some items may remain in cart.\");\r\n+              } else {\r\n+                alert(\"Cart cleared successfully!\");\r\n+              }\r\n+\r\n+              // 5️⃣ Redirect to browse page\r\n+              // window.location.href = \"browse.html\";\r\n+\r\n+            } catch (err) {\r\n+              console.error(\"Error processing cart:\", err);\r\n+              alert(\"An error occurred while processing your cart. Please try again.\");\r\n+            }\r\n+          });\r\n+        }\r\n+\r\n       } catch (err) {\r\n         console.error(\"Error loading purchased books:\", err);\r\n       }\r\n     }\r\n"
                },
                {
                    "date": 1757257402759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -176,65 +176,33 @@\n \r\n         // 5️⃣ Handle Browse Button\r\n         const browseBtn = document.querySelector(\".browse-btn\");\r\n         if (browseBtn) {\r\n-          browseBtn.addEventListener(\"click\", async () => {\r\n-            const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n-            if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n+browseBtn.addEventListener(\"click\", async () => {\r\n+    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n+    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n \r\n-            try {\r\n-              // 1️⃣ Get cart from backend\r\n-              const cartResponse = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email })\r\n-              });\r\n-              const cartResult = await cartResponse.json();\r\n-              const cartItems = cartResult.cart || []; // array of titles\r\n+    try {\r\n+        const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+            method: \"POST\",\r\n+            headers: { \"Content-Type\": \"application/json\" },\r\n+            body: JSON.stringify({ email: currentUser.email })\r\n+        });\r\n \r\n-              if (cartItems.length === 0) {\r\n-                alert(\"Your cart is empty. Nothing to pay.\");\r\n-                return;\r\n-              }\r\n+        const result = await response.json();\r\n \r\n-              // 2️⃣ Make sure only titles\r\n-              const paidBooks = cartItems.map(item => typeof item === 'string' ? item : item.title);\r\n+        if (!result.success) return alert(result.message);\r\n \r\n-              // 3️⃣ Pay-cart\r\n-              const payResponse = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email, paidBooks })\r\n-              });\r\n-              const payResult = await payResponse.json();\r\n+        alert(\"All cart items moved to Paid_Book successfully!\");\r\n+        // Optional: redirect to browse\r\n+        window.location.href = \"browse.html\";\r\n \r\n-              if (!payResult.success) {\r\n-                return alert(\"Failed to move cart items to Paid_Book. Please try again.\");\r\n-              }\r\n+    } catch (err) {\r\n+        console.error(\"Error processing cart:\", err);\r\n+        alert(\"An error occurred while processing your cart. Please try again.\");\r\n+    }\r\n+});\r\n \r\n-              alert(\"All cart items moved to Paid_Book successfully!\");\r\n-\r\n-              // 4️⃣ Clear cart in backend\r\n-              const clearResponse = await fetch(\"http://127.0.0.1:5000/clear-cart\", {\r\n-                method: \"POST\",\r\n-                headers: { \"Content-Type\": \"application/json\" },\r\n-                body: JSON.stringify({ email: currentUser.email })\r\n-              });\r\n-              const clearResult = await clearResponse.json();\r\n-              if (!clearResult.success) {\r\n-                alert(\"Cart cleared partially. Some items may remain in cart.\");\r\n-              } else {\r\n-                alert(\"Cart cleared successfully!\");\r\n-              }\r\n-\r\n-              // 5️⃣ Redirect to browse page\r\n-              // window.location.href = \"browse.html\";\r\n-\r\n-            } catch (err) {\r\n-              console.error(\"Error processing cart:\", err);\r\n-              alert(\"An error occurred while processing your cart. Please try again.\");\r\n-            }\r\n-          });\r\n         }\r\n \r\n       } catch (err) {\r\n         console.error(\"Error loading purchased books:\", err);\r\n"
                },
                {
                    "date": 1757565355303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,96 +122,64 @@\n \r\n   <a href=\"#\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n-    async function loadPurchasedBooks() {\r\n-      try {\r\n-        // 1️⃣ Get current user\r\n+  async function loadPurchasedBooks() {\r\n+    try {\r\n         const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n-        if (!currentUser || !currentUser.email) {\r\n-          console.warn(\"No current user found.\");\r\n-          return;\r\n-        }\r\n+        if (!currentUser || !currentUser.email) return;\r\n \r\n-        // 2️⃣ Fetch user's cart from backend\r\n-        const response = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n-          method: \"POST\",\r\n-          headers: { \"Content-Type\": \"application/json\" },\r\n-          body: JSON.stringify({ email: currentUser.email })\r\n+        // Fetch user's purchased books (cart now should be empty, but paid books are on backend)\r\n+        const response = await fetch(\"http://127.0.0.1:5000/get-paid-books\", {\r\n+            method: \"POST\",\r\n+            headers: { \"Content-Type\": \"application/json\" },\r\n+            body: JSON.stringify({ email: currentUser.email })\r\n         });\r\n \r\n         const result = await response.json();\r\n-        if (!result.success || !result.cart || result.cart.length === 0) {\r\n-          console.warn(\"No purchased books found for this user.\");\r\n-          return;\r\n+        if (!result.success || !result.paidBooks || result.paidBooks.length === 0) {\r\n+            console.warn(\"No purchased books found for this user.\");\r\n+            return;\r\n         }\r\n \r\n-        const userCart = result.cart; // array of book titles\r\n+        const paidBooks = result.paidBooks; // array of objects: {title, image, price, author}\r\n \r\n-        // 3️⃣ Fetch all-books.json to get book images and prices\r\n-        const booksResponse = await fetch(\"all-books.json\");\r\n-        if (!booksResponse.ok) throw new Error(\"Failed to load all-books.json\");\r\n-        const allBooks = await booksResponse.json(); // [{title, image, price, author}, ...]\r\n-\r\n-        // 4️⃣ Render books\r\n         const bookCards = document.getElementById(\"bookCards\");\r\n+        if (!bookCards) return;\r\n         bookCards.innerHTML = \"\"; // clear previous content\r\n \r\n-        userCart.forEach((title, index) => {\r\n-          const book = allBooks.find(b => b.title === title);\r\n+        paidBooks.forEach((book, index) => {\r\n+            const li = document.createElement(\"li\");\r\n+            li.style.animationDelay = `${index * 0.1}s`;\r\n \r\n-          const li = document.createElement(\"li\");\r\n-          li.style.animationDelay = `${index * 0.1}s`;\r\n-\r\n-          li.innerHTML = `\r\n-                <div class=\"book-cover\" style=\"background-image: url('${book ? book.image : \"img/books/default.jpg\"}');\"></div>\r\n+            li.innerHTML = `\r\n+                <div class=\"book-cover\" style=\"background-image: url('${book.image || \"img/books/default.jpg\"}');\"></div>\r\n                 <div class=\"book-info\">\r\n-                    <h3>${title}</h3>\r\n-                    <p>$${book ? Number(book.price).toFixed(2) : \"0.00\"}</p>\r\n-                    <p>${book ? book.author : \"\"}</p>\r\n+                    <h3>${book.title}</h3>\r\n+                    <p>$${Number(book.price).toFixed(2)}</p>\r\n+                    <p>${book.author || \"\"}</p>\r\n                 </div>\r\n             `;\r\n \r\n-          bookCards.appendChild(li);\r\n+            bookCards.appendChild(li);\r\n         });\r\n \r\n-        // 5️⃣ Handle Browse Button\r\n+        // Optional: Browse button just redirects\r\n         const browseBtn = document.querySelector(\".browse-btn\");\r\n         if (browseBtn) {\r\n-browseBtn.addEventListener(\"click\", async () => {\r\n-    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n-    if (!currentUser || !currentUser.email) return alert(\"Please log in first.\");\r\n+            browseBtn.addEventListener(\"click\", () => {\r\n+                window.location.href = \"browse.html\";\r\n+            });\r\n+        }\r\n \r\n-    try {\r\n-        const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n-            method: \"POST\",\r\n-            headers: { \"Content-Type\": \"application/json\" },\r\n-            body: JSON.stringify({ email: currentUser.email })\r\n-        });\r\n-\r\n-        const result = await response.json();\r\n-\r\n-        if (!result.success) return alert(result.message);\r\n-\r\n-        alert(\"All cart items moved to Paid_Book successfully!\");\r\n-        // Optional: redirect to browse\r\n-        window.location.href = \"browse.html\";\r\n-\r\n     } catch (err) {\r\n-        console.error(\"Error processing cart:\", err);\r\n-        alert(\"An error occurred while processing your cart. Please try again.\");\r\n+        console.error(\"Error loading purchased books:\", err);\r\n     }\r\n-});\r\n+}\r\n \r\n-        }\r\n+document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n-      } catch (err) {\r\n-        console.error(\"Error loading purchased books:\", err);\r\n-      }\r\n-    }\r\n \r\n-    document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n-\r\n   </script>\r\n \r\n </body>\r\n \r\n"
                },
                {
                    "date": 1757565661429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,14 +122,18 @@\n \r\n   <a href=\"#\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n-  async function loadPurchasedBooks() {\r\n+   async function loadPurchasedBooks() {\r\n     try {\r\n+        // 1️⃣ Get current user\r\n         const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n-        if (!currentUser || !currentUser.email) return;\r\n+        if (!currentUser || !currentUser.email) {\r\n+            console.warn(\"No current user found.\");\r\n+            return;\r\n+        }\r\n \r\n-        // Fetch user's purchased books (cart now should be empty, but paid books are on backend)\r\n+        // 2️⃣ Fetch user's purchased books from backend\r\n         const response = await fetch(\"http://127.0.0.1:5000/get-paid-books\", {\r\n             method: \"POST\",\r\n             headers: { \"Content-Type\": \"application/json\" },\r\n             body: JSON.stringify({ email: currentUser.email })\r\n@@ -140,35 +144,53 @@\n             console.warn(\"No purchased books found for this user.\");\r\n             return;\r\n         }\r\n \r\n-        const paidBooks = result.paidBooks; // array of objects: {title, image, price, author}\r\n+        const purchasedBooks = result.paidBooks; // array of full book objects\r\n \r\n+        // 3️⃣ Render books\r\n         const bookCards = document.getElementById(\"bookCards\");\r\n         if (!bookCards) return;\r\n+\r\n         bookCards.innerHTML = \"\"; // clear previous content\r\n \r\n-        paidBooks.forEach((book, index) => {\r\n+        purchasedBooks.forEach((book, index) => {\r\n             const li = document.createElement(\"li\");\r\n             li.style.animationDelay = `${index * 0.1}s`;\r\n \r\n             li.innerHTML = `\r\n                 <div class=\"book-cover\" style=\"background-image: url('${book.image || \"img/books/default.jpg\"}');\"></div>\r\n                 <div class=\"book-info\">\r\n                     <h3>${book.title}</h3>\r\n-                    <p>$${Number(book.price).toFixed(2)}</p>\r\n+                    <p>$${Number(book.price || 0).toFixed(2)}</p>\r\n                     <p>${book.author || \"\"}</p>\r\n                 </div>\r\n             `;\r\n \r\n             bookCards.appendChild(li);\r\n         });\r\n \r\n-        // Optional: Browse button just redirects\r\n+        // Optional: Browse Button\r\n         const browseBtn = document.querySelector(\".browse-btn\");\r\n         if (browseBtn) {\r\n-            browseBtn.addEventListener(\"click\", () => {\r\n-                window.location.href = \"browse.html\";\r\n+            browseBtn.addEventListener(\"click\", async () => {\r\n+                try {\r\n+                    const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+                        method: \"POST\",\r\n+                        headers: { \"Content-Type\": \"application/json\" },\r\n+                        body: JSON.stringify({ email: currentUser.email })\r\n+                    });\r\n+\r\n+                    const result = await response.json();\r\n+                    if (!result.success) return alert(result.message);\r\n+\r\n+                    alert(\"All cart items moved to Paid_Book successfully!\");\r\n+                    window.location.href = \"browse.html\";\r\n+\r\n+                } catch (err) {\r\n+                    console.error(\"Error processing cart:\", err);\r\n+                    alert(\"An error occurred while processing your cart. Please try again.\");\r\n+                }\r\n             });\r\n         }\r\n \r\n     } catch (err) {\r\n"
                },
                {
                    "date": 1757565746270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,39 +122,49 @@\n \r\n   <a href=\"#\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n-   async function loadPurchasedBooks() {\r\n+  async function loadPurchasedBooks() {\r\n     try {\r\n         // 1️⃣ Get current user\r\n         const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n+        console.log(\"[DEBUG] currentUser:\", currentUser);\r\n+\r\n         if (!currentUser || !currentUser.email) {\r\n             console.warn(\"No current user found.\");\r\n             return;\r\n         }\r\n \r\n         // 2️⃣ Fetch user's purchased books from backend\r\n+        console.log(\"[DEBUG] Fetching paid books for:\", currentUser.email);\r\n         const response = await fetch(\"http://127.0.0.1:5000/get-paid-books\", {\r\n             method: \"POST\",\r\n             headers: { \"Content-Type\": \"application/json\" },\r\n             body: JSON.stringify({ email: currentUser.email })\r\n         });\r\n \r\n         const result = await response.json();\r\n+        console.log(\"[DEBUG] Paid books response:\", result);\r\n+\r\n         if (!result.success || !result.paidBooks || result.paidBooks.length === 0) {\r\n             console.warn(\"No purchased books found for this user.\");\r\n             return;\r\n         }\r\n \r\n         const purchasedBooks = result.paidBooks; // array of full book objects\r\n+        console.log(\"[DEBUG] Purchased books:\", purchasedBooks);\r\n \r\n         // 3️⃣ Render books\r\n         const bookCards = document.getElementById(\"bookCards\");\r\n+        console.log(\"[DEBUG] bookCards element:\", bookCards);\r\n+\r\n         if (!bookCards) return;\r\n \r\n         bookCards.innerHTML = \"\"; // clear previous content\r\n \r\n         purchasedBooks.forEach((book, index) => {\r\n+            console.log(`[DEBUG] Rendering book #${index}:`, book);\r\n+\r\n             const li = document.createElement(\"li\");\r\n             li.style.animationDelay = `${index * 0.1}s`;\r\n \r\n             li.innerHTML = `\r\n@@ -170,18 +180,24 @@\n         });\r\n \r\n         // Optional: Browse Button\r\n         const browseBtn = document.querySelector(\".browse-btn\");\r\n+        console.log(\"[DEBUG] browseBtn element:\", browseBtn);\r\n+\r\n         if (browseBtn) {\r\n             browseBtn.addEventListener(\"click\", async () => {\r\n+                console.log(\"[DEBUG] Browse button clicked\");\r\n+\r\n                 try {\r\n                     const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n                         method: \"POST\",\r\n                         headers: { \"Content-Type\": \"application/json\" },\r\n                         body: JSON.stringify({ email: currentUser.email })\r\n                     });\r\n \r\n                     const result = await response.json();\r\n+                    console.log(\"[DEBUG] pay-cart result:\", result);\r\n+\r\n                     if (!result.success) return alert(result.message);\r\n \r\n                     alert(\"All cart items moved to Paid_Book successfully!\");\r\n                     window.location.href = \"browse.html\";\r\n@@ -200,8 +216,9 @@\n \r\n document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n \r\n+\r\n   </script>\r\n \r\n </body>\r\n \r\n"
                },
                {
                    "date": 1757565996038,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,9 +122,9 @@\n \r\n   <a href=\"#\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n-  async function loadPurchasedBooks() {\r\n+async function loadPurchasedBooks() {\r\n     try {\r\n         // 1️⃣ Get current user\r\n         const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         console.log(\"[DEBUG] currentUser:\", currentUser);\r\n@@ -133,9 +133,9 @@\n             console.warn(\"No current user found.\");\r\n             return;\r\n         }\r\n \r\n-        // 2️⃣ Fetch user's purchased books from backend\r\n+        // 2️⃣ Fetch user's purchased book titles from backend\r\n         console.log(\"[DEBUG] Fetching paid books for:\", currentUser.email);\r\n         const response = await fetch(\"http://127.0.0.1:5000/get-paid-books\", {\r\n             method: \"POST\",\r\n             headers: { \"Content-Type\": \"application/json\" },\r\n@@ -149,15 +149,26 @@\n             console.warn(\"No purchased books found for this user.\");\r\n             return;\r\n         }\r\n \r\n-        const purchasedBooks = result.paidBooks; // array of full book objects\r\n-        console.log(\"[DEBUG] Purchased books:\", purchasedBooks);\r\n+        const purchasedTitles = result.paidBooks.map(title => title.trim());\r\n+        console.log(\"[DEBUG] Purchased book titles:\", purchasedTitles);\r\n \r\n-        // 3️⃣ Render books\r\n+        // 3️⃣ Load all-books.json to get full book info\r\n+        const booksResponse = await fetch(\"all-books.json\");\r\n+        if (!booksResponse.ok) throw new Error(\"Failed to load all-books.json\");\r\n+        const allBooks = await booksResponse.json();\r\n+\r\n+        // Map titles to full book objects\r\n+        const purchasedBooks = purchasedTitles.map(title => {\r\n+            const book = allBooks.find(b => b.title.trim() === title);\r\n+            return book || { title, image: \"img/books/default.jpg\", price: 0, author: \"\" };\r\n+        });\r\n+        console.log(\"[DEBUG] Purchased books objects:\", purchasedBooks);\r\n+\r\n+        // 4️⃣ Render books\r\n         const bookCards = document.getElementById(\"bookCards\");\r\n         console.log(\"[DEBUG] bookCards element:\", bookCards);\r\n-\r\n         if (!bookCards) return;\r\n \r\n         bookCards.innerHTML = \"\"; // clear previous content\r\n \r\n@@ -167,34 +178,31 @@\n             const li = document.createElement(\"li\");\r\n             li.style.animationDelay = `${index * 0.1}s`;\r\n \r\n             li.innerHTML = `\r\n-                <div class=\"book-cover\" style=\"background-image: url('${book.image || \"img/books/default.jpg\"}');\"></div>\r\n+                <div class=\"book-cover\" style=\"background-image: url('${book.image}');\"></div>\r\n                 <div class=\"book-info\">\r\n                     <h3>${book.title}</h3>\r\n-                    <p>$${Number(book.price || 0).toFixed(2)}</p>\r\n-                    <p>${book.author || \"\"}</p>\r\n+                    <p>$${Number(book.price).toFixed(2)}</p>\r\n+                    <p>${book.author}</p>\r\n                 </div>\r\n             `;\r\n \r\n             bookCards.appendChild(li);\r\n         });\r\n \r\n-        // Optional: Browse Button\r\n+        // 5️⃣ Optional: Browse Button\r\n         const browseBtn = document.querySelector(\".browse-btn\");\r\n         console.log(\"[DEBUG] browseBtn element:\", browseBtn);\r\n-\r\n         if (browseBtn) {\r\n             browseBtn.addEventListener(\"click\", async () => {\r\n                 console.log(\"[DEBUG] Browse button clicked\");\r\n-\r\n                 try {\r\n                     const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n                         method: \"POST\",\r\n                         headers: { \"Content-Type\": \"application/json\" },\r\n                         body: JSON.stringify({ email: currentUser.email })\r\n                     });\r\n-\r\n                     const result = await response.json();\r\n                     console.log(\"[DEBUG] pay-cart result:\", result);\r\n \r\n                     if (!result.success) return alert(result.message);\r\n@@ -217,8 +225,9 @@\n document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n \r\n \r\n \r\n+\r\n   </script>\r\n \r\n </body>\r\n \r\n"
                },
                {
                    "date": 1757566582314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,81 +122,54 @@\n \r\n   <a href=\"#\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n-async function loadPurchasedBooks() {\r\n+async function loadCartBooks() {\r\n     try {\r\n-        // 1️⃣ Get current user\r\n         const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         console.log(\"[DEBUG] currentUser:\", currentUser);\r\n+        if (!currentUser || !currentUser.email) return;\r\n \r\n-        if (!currentUser || !currentUser.email) {\r\n-            console.warn(\"No current user found.\");\r\n-            return;\r\n-        }\r\n-\r\n-        // 2️⃣ Fetch user's purchased book titles from backend\r\n-        console.log(\"[DEBUG] Fetching paid books for:\", currentUser.email);\r\n-        const response = await fetch(\"http://127.0.0.1:5000/get-paid-books\", {\r\n+        // Fetch cart books from backend\r\n+        const response = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n             method: \"POST\",\r\n             headers: { \"Content-Type\": \"application/json\" },\r\n             body: JSON.stringify({ email: currentUser.email })\r\n         });\r\n-\r\n         const result = await response.json();\r\n-        console.log(\"[DEBUG] Paid books response:\", result);\r\n+        console.log(\"[DEBUG] Cart response:\", result);\r\n \r\n-        if (!result.success || !result.paidBooks || result.paidBooks.length === 0) {\r\n-            console.warn(\"No purchased books found for this user.\");\r\n+        if (!result.success || !result.cart || result.cart.length === 0) {\r\n+            console.warn(\"Cart is empty.\");\r\n             return;\r\n         }\r\n \r\n-        const purchasedTitles = result.paidBooks.map(title => title.trim());\r\n-        console.log(\"[DEBUG] Purchased book titles:\", purchasedTitles);\r\n+        const cartBooks = result.cart; // full book objects\r\n+        console.log(\"[DEBUG] Cart books objects:\", cartBooks);\r\n \r\n-        // 3️⃣ Load all-books.json to get full book info\r\n-        const booksResponse = await fetch(\"all-books.json\");\r\n-        if (!booksResponse.ok) throw new Error(\"Failed to load all-books.json\");\r\n-        const allBooks = await booksResponse.json();\r\n+        // Render cart\r\n+        const cartList = document.getElementById(\"bookCards\");\r\n+        if (!cartList) return;\r\n+        cartList.innerHTML = \"\";\r\n \r\n-        // Map titles to full book objects\r\n-        const purchasedBooks = purchasedTitles.map(title => {\r\n-            const book = allBooks.find(b => b.title.trim() === title);\r\n-            return book || { title, image: \"img/books/default.jpg\", price: 0, author: \"\" };\r\n-        });\r\n-        console.log(\"[DEBUG] Purchased books objects:\", purchasedBooks);\r\n-\r\n-        // 4️⃣ Render books\r\n-        const bookCards = document.getElementById(\"bookCards\");\r\n-        console.log(\"[DEBUG] bookCards element:\", bookCards);\r\n-        if (!bookCards) return;\r\n-\r\n-        bookCards.innerHTML = \"\"; // clear previous content\r\n-\r\n-        purchasedBooks.forEach((book, index) => {\r\n-            console.log(`[DEBUG] Rendering book #${index}:`, book);\r\n-\r\n+        cartBooks.forEach((book, index) => {\r\n             const li = document.createElement(\"li\");\r\n             li.style.animationDelay = `${index * 0.1}s`;\r\n-\r\n             li.innerHTML = `\r\n-                <div class=\"book-cover\" style=\"background-image: url('${book.image}');\"></div>\r\n+                <div class=\"book-cover\" style=\"background-image: url('${book.image || \"img/books/default.jpg\"}');\"></div>\r\n                 <div class=\"book-info\">\r\n                     <h3>${book.title}</h3>\r\n-                    <p>$${Number(book.price).toFixed(2)}</p>\r\n-                    <p>${book.author}</p>\r\n+                    <p>$${Number(book.price || 0).toFixed(2)}</p>\r\n+                    <p>${book.author || \"\"}</p>\r\n                 </div>\r\n             `;\r\n-\r\n-            bookCards.appendChild(li);\r\n+            cartList.appendChild(li);\r\n         });\r\n \r\n-        // 5️⃣ Optional: Browse Button\r\n+        // Browse button moves cart to Paid_Book\r\n         const browseBtn = document.querySelector(\".browse-btn\");\r\n-        console.log(\"[DEBUG] browseBtn element:\", browseBtn);\r\n         if (browseBtn) {\r\n             browseBtn.addEventListener(\"click\", async () => {\r\n-                console.log(\"[DEBUG] Browse button clicked\");\r\n                 try {\r\n                     const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n                         method: \"POST\",\r\n                         headers: { \"Content-Type\": \"application/json\" },\r\n@@ -205,29 +178,29 @@\n                     const result = await response.json();\r\n                     console.log(\"[DEBUG] pay-cart result:\", result);\r\n \r\n                     if (!result.success) return alert(result.message);\r\n-\r\n-                    alert(\"All cart items moved to Paid_Book successfully!\");\r\n+                    alert(\"Cart moved to Paid_Book successfully!\");\r\n                     window.location.href = \"browse.html\";\r\n \r\n                 } catch (err) {\r\n-                    console.error(\"Error processing cart:\", err);\r\n-                    alert(\"An error occurred while processing your cart. Please try again.\");\r\n+                    console.error(\"Error moving cart to Paid_Book:\", err);\r\n+                    alert(\"An error occurred. Please try again.\");\r\n                 }\r\n             });\r\n         }\r\n \r\n     } catch (err) {\r\n-        console.error(\"Error loading purchased books:\", err);\r\n+        console.error(\"Error loading cart books:\", err);\r\n     }\r\n }\r\n \r\n-document.addEventListener(\"DOMContentLoaded\", loadPurchasedBooks);\r\n+document.addEventListener(\"DOMContentLoaded\", loadCartBooks);\r\n \r\n \r\n \r\n \r\n+\r\n   </script>\r\n \r\n </body>\r\n \r\n"
                },
                {
                    "date": 1757844774689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -122,26 +122,26 @@\n \r\n   <a href=\"#\" class=\"browse-btn\">Browse More Books</a>\r\n \r\n   <script>\r\n-async function loadCartBooks() {\r\n-    try {\r\n+    async function loadCartBooks() {\r\n+      try {\r\n         const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n         console.log(\"[DEBUG] currentUser:\", currentUser);\r\n         if (!currentUser || !currentUser.email) return;\r\n \r\n         // Fetch cart books from backend\r\n         const response = await fetch(\"http://127.0.0.1:5000/get-cart\", {\r\n-            method: \"POST\",\r\n-            headers: { \"Content-Type\": \"application/json\" },\r\n-            body: JSON.stringify({ email: currentUser.email })\r\n+          method: \"POST\",\r\n+          headers: { \"Content-Type\": \"application/json\" },\r\n+          body: JSON.stringify({ email: currentUser.email })\r\n         });\r\n         const result = await response.json();\r\n         console.log(\"[DEBUG] Cart response:\", result);\r\n \r\n         if (!result.success || !result.cart || result.cart.length === 0) {\r\n-            console.warn(\"Cart is empty.\");\r\n-            return;\r\n+          console.warn(\"Cart is empty.\");\r\n+          return;\r\n         }\r\n \r\n         const cartBooks = result.cart; // full book objects\r\n         console.log(\"[DEBUG] Cart books objects:\", cartBooks);\r\n@@ -151,56 +151,52 @@\n         if (!cartList) return;\r\n         cartList.innerHTML = \"\";\r\n \r\n         cartBooks.forEach((book, index) => {\r\n-            const li = document.createElement(\"li\");\r\n-            li.style.animationDelay = `${index * 0.1}s`;\r\n-            li.innerHTML = `\r\n+          const li = document.createElement(\"li\");\r\n+          li.style.animationDelay = `${index * 0.1}s`;\r\n+          li.innerHTML = `\r\n                 <div class=\"book-cover\" style=\"background-image: url('${book.image || \"img/books/default.jpg\"}');\"></div>\r\n                 <div class=\"book-info\">\r\n                     <h3>${book.title}</h3>\r\n                     <p>$${Number(book.price || 0).toFixed(2)}</p>\r\n                     <p>${book.author || \"\"}</p>\r\n                 </div>\r\n             `;\r\n-            cartList.appendChild(li);\r\n+          cartList.appendChild(li);\r\n         });\r\n \r\n         // Browse button moves cart to Paid_Book\r\n         const browseBtn = document.querySelector(\".browse-btn\");\r\n         if (browseBtn) {\r\n-            browseBtn.addEventListener(\"click\", async () => {\r\n-                try {\r\n-                    const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n-                        method: \"POST\",\r\n-                        headers: { \"Content-Type\": \"application/json\" },\r\n-                        body: JSON.stringify({ email: currentUser.email })\r\n-                    });\r\n-                    const result = await response.json();\r\n-                    console.log(\"[DEBUG] pay-cart result:\", result);\r\n+          browseBtn.addEventListener(\"click\", async () => {\r\n+            try {\r\n+              const response = await fetch(\"http://127.0.0.1:5000/pay-cart\", {\r\n+                method: \"POST\",\r\n+                headers: { \"Content-Type\": \"application/json\" },\r\n+                body: JSON.stringify({ email: currentUser.email })\r\n+              });\r\n+              const result = await response.json();\r\n+              console.log(\"[DEBUG] pay-cart result:\", result);\r\n \r\n-                    if (!result.success) return alert(result.message);\r\n-                    alert(\"Cart moved to Paid_Book successfully!\");\r\n-                    window.location.href = \"browse.html\";\r\n+              if (!result.success) return alert(result.message);\r\n+              alert(\"Cart moved to Paid_Book successfully!\");\r\n+              window.location.href = \"browse-books.html\";\r\n \r\n-                } catch (err) {\r\n-                    console.error(\"Error moving cart to Paid_Book:\", err);\r\n-                    alert(\"An error occurred. Please try again.\");\r\n-                }\r\n-            });\r\n+            } catch (err) {\r\n+              console.error(\"Error moving cart to Paid_Book:\", err);\r\n+              alert(\"An error occurred. Please try again.\");\r\n+            }\r\n+          });\r\n         }\r\n \r\n-    } catch (err) {\r\n+      } catch (err) {\r\n         console.error(\"Error loading cart books:\", err);\r\n+      }\r\n     }\r\n-}\r\n \r\n-document.addEventListener(\"DOMContentLoaded\", loadCartBooks);\r\n+    document.addEventListener(\"DOMContentLoaded\", loadCartBooks);\r\n \r\n-\r\n-\r\n-\r\n-\r\n   </script>\r\n \r\n </body>\r\n \r\n"
                },
                {
                    "date": 1757893645618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,10 +178,10 @@\n               const result = await response.json();\r\n               console.log(\"[DEBUG] pay-cart result:\", result);\r\n \r\n               if (!result.success) return alert(result.message);\r\n-              alert(\"Cart moved to Paid_Book successfully!\");\r\n-              window.location.href = \"browse-books.html\";\r\n+              // alert(\"Cart moved to Paid_Book successfully!\");\r\n+              window.location.href = \"browse-book.html\";\r\n \r\n             } catch (err) {\r\n               console.error(\"Error moving cart to Paid_Book:\", err);\r\n               alert(\"An error occurred. Please try again.\");\r\n"
                }
            ],
            "date": 1756836778683,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<meta charset=\"UTF-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n<title>Thank You for Your Purchase</title>\r\n<style>\r\n  body {\r\n    font-family: 'Inter', sans-serif;\r\n    background: #f0f2f5;\r\n    margin: 0;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  h1 {\r\n    color: #333;\r\n    margin-bottom: 0.5rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n  }\r\n\r\n  p {\r\n    color: #555;\r\n    margin-bottom: 2rem;\r\n    text-align: center;\r\n  }\r\n\r\n  ul.book-cards {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n    padding: 0;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n  }\r\n\r\n  ul.book-cards li {\r\n    background: #fff;\r\n    width: 150px;\r\n    border-radius: 12px;\r\n    box-shadow: 0 5px 15px rgba(0,0,0,0.1);\r\n    overflow: hidden;\r\n    text-align: center;\r\n    transform: translateY(20px);\r\n    opacity: 0;\r\n    animation: fadeInUp 0.6s forwards;\r\n  }\r\n\r\n  ul.book-cards li:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 10px 20px rgba(0,0,0,0.2);\r\n  }\r\n\r\n  .book-cover {\r\n    width: 100%;\r\n    height: 200px;\r\n    background-size: cover;\r\n    background-position: center;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n\r\n  .book-info {\r\n    padding: 0.5rem;\r\n  }\r\n\r\n  .book-info h3 {\r\n    font-size: 0.9rem;\r\n    margin: 0.5rem 0;\r\n    color: #333;\r\n  }\r\n\r\n  .book-info p {\r\n    font-size: 0.85rem;\r\n    color: #777;\r\n    margin: 0 0 0.5rem 0;\r\n  }\r\n\r\n  @keyframes fadeInUp {\r\n    0% {\r\n      opacity: 0;\r\n      transform: translateY(20px);\r\n    }\r\n    100% {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n\r\n  .browse-btn {\r\n    margin-top: 2rem;\r\n    padding: 0.8rem 1.5rem;\r\n    background-color: #4CAF50;\r\n    color: #fff;\r\n    font-size: 1rem;\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    transition: transform 0.3s, background-color 0.3s;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .browse-btn:hover {\r\n    background-color: #45a049;\r\n    transform: scale(1.05);\r\n  }\r\n</style>\r\n</head>\r\n<body>\r\n\r\n<h1>Thank You for Your Purchase!</h1>\r\n<p>Here are the books you bought:</p>\r\n\r\n<ul class=\"book-cards\" id=\"bookCards\">\r\n  <!-- User's purchased books will appear here -->\r\n</ul>\r\n\r\n<a href=\"browse-book.html\" class=\"browse-btn\">Browse More Books</a>\r\n\r\n<script>\r\n  function loadPurchasedBooks() {\r\n    try {\r\n      const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n      if (!currentUser) {\r\n        console.warn(\"No current user found.\");\r\n        return;\r\n      }\r\n\r\n      const users = JSON.parse(localStorage.getItem('users')) || [];\r\n      const user = users.find(u => u.email === currentUser.email);\r\n\r\n      if (!user || !user.cart || user.cart.length === 0) {\r\n        console.warn(\"No purchased books found for this user.\");\r\n        return;\r\n      }\r\n\r\n      const bookCards = document.getElementById('bookCards');\r\n\r\n      user.cart.forEach((book, index) => {\r\n        const li = document.createElement('li');\r\n        li.style.animationDelay = `${index * 0.1}s`; // stagger animation\r\n\r\n        li.innerHTML = `\r\n          <div class=\"book-cover\" style=\"background-image: url('${book.image}');\"></div>\r\n          <div class=\"book-info\">\r\n            <h3>${book.title}</h3>\r\n            <p>$${Number(book.price).toFixed(2)}</p>\r\n          </div>\r\n        `;\r\n\r\n        bookCards.appendChild(li);\r\n      });\r\n\r\n    } catch (err) {\r\n      console.error('Error loading purchased books:', err);\r\n    }\r\n  }\r\n\r\n  document.addEventListener('DOMContentLoaded', loadPurchasedBooks);\r\n</script>\r\n\r\n</body>\r\n</html>\r\n"
        }
    ]
}